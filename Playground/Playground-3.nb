(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    213987,       4043]
NotebookOptionsPosition[    189483,       3556]
NotebookOutlinePosition[    208205,       3973]
CellTagsIndexPosition[    208162,       3970]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"EntityClass", "[", 
   RowBox[{"\"\<Artwork\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Height\>\"", "->", 
      RowBox[{"TakeLargest", "[", "10", "]"}]}], "}"}]}], "]"}], "//", 
  "EntityList"}]], "Input",
 CellChangeTimes->{{3.922740857244606*^9, 3.922740857250284*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"9b43d192-dd6e-497f-854f-c1f10f200994"],

Cell[BoxData[
 TemplateBox[{"\"Christ the Redeemer\"", 
   RowBox[{"Entity", "[", 
     RowBox[{
      "\"Artwork\"", ",", "\"ChristTheRedeemer::HeitorDaSilvaCosta\""}], 
     "]"}], "\"Entity[\\\"Artwork\\\", \
\\\"ChristTheRedeemer::HeitorDaSilvaCosta\\\"]\"", "\"artwork\""},
  "Entity"]], "Input",
 NumberMarks->False,
 CellLabel->"In[77]:=",ExpressionUUID->"45a88f7c-1e77-46be-82e6-8a940bd68fd1"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Christ the Redeemer\"", 
    RowBox[{"Entity", "[", 
      RowBox[{
       "\"Artwork\"", ",", "\"ChristTheRedeemer::HeitorDaSilvaCosta\""}], 
      "]"}], "\"Entity[\\\"Artwork\\\", \
\\\"ChristTheRedeemer::HeitorDaSilvaCosta\\\"]\"", "\"artwork\""},
   "Entity"], "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9227408768943167`*^9, 3.922740884184341*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"7e782338-c52a-4359-a35e-723be0ab5fc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityList", "[", "\"\<Artwork\>\"", "]"}], "[", 
  "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.922740887718547*^9, 3.922740916718754*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"73297194-ccf1-4487-9f8a-21d8feabc4de"],

Cell[BoxData[
 RowBox[{"EntityProperties", "[", "\"\<Artwork\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.92274476320161*^9, 3.922744774743782*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"f83489c8-77d4-406e-a99b-85094e927cd3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"entities", "=", 
   RowBox[{"ArtWorkData", "[", "\"\<SampleEntities\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"EntityValue", "[", 
  RowBox[{"entities", ",", 
   RowBox[{"EntityProperty", "[", 
    RowBox[{"\"\<ArtWork\>\"", ",", "\"\<Image\>\""}], "]"}], ",", 
   "\"\<EntityAssociation\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.922744893278187*^9, 3.922744931456991*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"ead8427b-4f80-4883-a776-1b754933a2fa"],

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  RowBox[{"SampledEntityClass", "[", 
   RowBox[{"\"\<Artwork\>\"", ",", "100"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.92274504609846*^9, 3.922745069393415*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"a8de99d3-e549-4f9a-a861-67ed8b038f82"],

Cell[BoxData[
 TemplateBox[{"\"0-9, a portfolio of ten lithographs and one text page\"", 
   RowBox[{"Entity", "[", 
     RowBox[{
      "\"Artwork\"", ",", 
       "\"09APortfolioOfTenLithographsAndOneTextPage::JasperJohns\""}], "]"}],
    "\"Entity[\\\"Artwork\\\", \
\\\"09APortfolioOfTenLithographsAndOneTextPage::JasperJohns\\\"]\"", 
   "\"artwork\""},
  "Entity"]], "Input",
 NumberMarks->False,
 CellLabel->"In[86]:=",ExpressionUUID->"8bb471bb-6a1b-41f8-b8a1-99d6933ea8c2"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"0-9, a portfolio of ten lithographs and one text page\"", 
    RowBox[{"Entity", "[", 
      RowBox[{
       "\"Artwork\"", ",", 
        "\"09APortfolioOfTenLithographsAndOneTextPage::JasperJohns\""}], 
      "]"}], "\"Entity[\\\"Artwork\\\", \
\\\"09APortfolioOfTenLithographsAndOneTextPage::JasperJohns\\\"]\"", 
    "\"artwork\""},
   "Entity"], "[", "\"\<\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.92274510451047*^9, 3.922745106527171*^9}, {
  3.9227451819406033`*^9, 3.922745184128684*^9}, {3.922745312431552*^9, 
  3.922745315112508*^9}},ExpressionUUID->"118a7e5d-7811-47ff-98d0-\
50fc01730b4d"],

Cell[BoxData[
 RowBox[{"owners", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", "\"\<Owner\>\"", "]"}], "&"}], " ", "/@", " ", 
   RowBox[{"EntityList", "[", 
    RowBox[{"SampledEntityClass", "[", 
     RowBox[{"\"\<Artwork\>\"", ",", "20"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.922745146721987*^9, 3.9227451995739307`*^9}, {
  3.922745243714587*^9, 3.9227452445694513`*^9}, {3.922745278442437*^9, 
  3.922745349582615*^9}, {3.922745622988912*^9, 3.922745644759388*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"3ee91d8c-5e07-45d6-b50f-8e81ad1a34d0"],

Cell[BoxData[
 RowBox[{"art", "  ", "=", " ", 
  RowBox[{"EntityList", "[", 
   RowBox[{"SampledEntityClass", "[", 
    RowBox[{"\"\<Artwork\>\"", ",", "50"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9227456503942347`*^9, 3.9227457392409773`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"e1695f4b-7810-4822-9cec-e580db791095"],

Cell[BoxData[
 RowBox[{"owners", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"EntityValue", "[", 
     RowBox[{"#", ",", " ", "\"\<Owner\>\""}], "]"}], "&"}], "/@", " ", 
   "art"}]}]], "Input",
 CellChangeTimes->{{3.922745741926875*^9, 3.9227458174949913`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"f05236e8-a45b-46f4-9e3f-1a35e51ca3e6"],

Cell[BoxData[
 RowBox[{"owners", " ", "=", " ", 
  RowBox[{"Flatten", "[", "owners", "]"}]}]], "Input",
 CellChangeTimes->{{3.922745448238647*^9, 3.922745455104126*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"c5384ef7-6a1a-42bb-aba8-81b7711a0d6d"],

Cell[BoxData[
 RowBox[{"owners", " ", "=", 
  RowBox[{"DeleteMissing", "[", "owners", "]"}]}]], "Input",
 CellChangeTimes->{{3.92274552650556*^9, 3.922745559901244*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"f7cc0e16-95c8-4aa9-997c-26b0287abd06"],

Cell[BoxData[
 RowBox[{"GeoListPlot", "[", "owners", "]"}]], "Input",
 CellChangeTimes->{{3.922745331146777*^9, 3.922745425700781*^9}, {
  3.92274547085458*^9, 3.922745474445003*^9}, {3.922745576572214*^9, 
  3.922745580112759*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"60d9d17c-f7c8-4362-a0fa-57d98a057355"],

Cell[BoxData[
 RowBox[{"GeoListPlot", "[", "]"}]], "Input",
 CellChangeTimes->{{3.922745404930974*^9, 
  3.922745419589395*^9}},ExpressionUUID->"544f31e9-35d5-4e2d-a6ed-\
7f72524f1b3e"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"1st Earl of Morley\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Artwork\"", ",", "\"1stEarlOfMorley::JohnDownman\""}], "]"}],
     "\"Entity[\\\"Artwork\\\", \\\"1stEarlOfMorley::JohnDownman\\\"]\"", 
    "\"artwork\""},
   "Entity"], "[", "\"\<Image\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.922745120817572*^9, 3.9227451236387*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"9cfb9db7-9ce4-4d2e-ab55-c8c95f0df846"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9227460983860617`*^9, 3.922746104645218*^9}, {
  3.922746165506963*^9, 3.922746165607957*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"674c83a9-75e2-482e-a150-cf5371f1d3f8"],

Cell[BoxData[
 RowBox[{"oldestArt", " ", "=", " ", 
  RowBox[{"EntityValue", "[", "\n", " ", 
   RowBox[{
    RowBox[{"EntityClass", "[", "\n", "  ", 
     RowBox[{"\"\<Artwork\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Artwork\>\"", ",", " ", "\"\<CompletionDate\>\""}], 
         "]"}], " ", "->", " ", "\n", "    ", 
        RowBox[{"TakeSmallest", "[", "100", "]"}]}], "}"}]}], "]"}], ",", " ",
     "\n", " ", 
    RowBox[{"EntityProperty", "[", 
     RowBox[{"\"\<Artwork\>\"", ",", " ", "\"\<Image\>\""}], "]"}], ",", " ", 
    "\"\<EntityAssociation\>\""}], "]"}]}]], "Code",
 CellChangeTimes->{{3.922746179191603*^9, 3.922746235752413*^9}, {
  3.922746322573729*^9, 3.922746342538201*^9}, {3.922746539681789*^9, 
  3.922746550001255*^9}, {3.922746694343519*^9, 3.922746694429891*^9}, {
  3.922746802887546*^9, 3.922746819352023*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"9e5fa0a7-93e1-4476-8d56-e045201aa03d"],

Cell[BoxData[
 RowBox[{"ImageCollage", "[", 
  RowBox[{"Values", "[", "oldestArt", "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.922747370784493*^9, 3.9227473773332977`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"eb039111-9022-4a6b-98e4-30f1f866332e"],

Cell[BoxData[
 RowBox[{"Keys", "[", "oldestArt", "]"}]], "Code",
 CellChangeTimes->{{3.922746934676673*^9, 3.92274693717384*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"087acf1b-85a5-49b6-9203-2ea3b888f60a"],

Cell[BoxData[
 RowBox[{"oldestArtLocations", " ", "=", " ", 
  RowBox[{"EntityValue", "[", "\n", " ", 
   RowBox[{
    RowBox[{"Keys", "[", "oldestArt", "]"}], ",", " ", "\n", " ", 
    RowBox[{"EntityProperty", "[", 
     RowBox[{"\"\<Artwork\>\"", ",", " ", "\"\<Location\>\""}], "]"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.922746950407655*^9, 3.922746952560161*^9}, {
  3.922746986626128*^9, 3.92274700746251*^9}, {3.922747057189258*^9, 
  3.9227470716562557`*^9}, {3.9227471082766542`*^9, 3.922747114610259*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"0dd680d6-65ae-45cf-b0a0-4a5d97dcdca7"],

Cell[BoxData[
 RowBox[{"GeoListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", "oldestArtLocations", "]"}], ",", " ", 
   RowBox[{"GeoLabels", "->", "True"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.922747128769631*^9, 3.922747136166018*^9}, {
  3.922747173269146*^9, 3.922747235098009*^9}, {3.922747303346509*^9, 
  3.922747307892185*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"459c29cf-0f53-4cc1-874b-766a528a185a"],

Cell[BoxData[
 RowBox[{"oldestFigures", " ", "=", " ", 
  RowBox[{"EntityValue", "[", "\n", " ", 
   RowBox[{
    RowBox[{"EntityClass", "[", "\n", "  ", 
     RowBox[{"\"\<Person\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Person\>\"", ",", " ", "\"\<BirthDate\>\""}], "]"}], 
        " ", "->", " ", "\n", "    ", 
        RowBox[{"TakeSmallest", "[", "50", "]"}]}], "}"}]}], "]"}], ",", " ", 
    "\n", " ", 
    RowBox[{"EntityProperty", "[", 
     RowBox[{"\"\<Person\>\"", ",", " ", "\"\<Image\>\""}], "]"}], ",", " ", 
    "\"\<EntityAssociation\>\""}], "]"}]}]], "Code",
 CellChangeTimes->{{3.922747416682994*^9, 3.92274742008056*^9}, {
  3.922747729012067*^9, 3.922747745383133*^9}, {3.922747799295896*^9, 
  3.92274781496355*^9}, {3.922748181098823*^9, 3.92274822741914*^9}, {
  3.9227482580600433`*^9, 3.9227482580960417`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"d86d4892-64ec-4b66-88ec-ad4e80b44456"],

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<HistoricalCountry\>\"", ",", " ", "\"\<AncientGreece\>\""}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.922749480403572*^9, 3.922749525210086*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"fa458687-18df-4eb2-95da-8597810bc9b0"],

Cell[BoxData[
 TemplateBox[{"\"Ancient Greece\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"HistoricalCountry\"", ",", "\"HellenicEmpire\""}], "]"}], 
   "\"Entity[\\\"HistoricalCountry\\\", \\\"HellenicEmpire\\\"]\"", 
   "\"historical country\""},
  "Entity"]], "Input",
 CellChangeTimes->{3.922749599995165*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"d55fdaf7-da7d-4715-808f-62f864e544ba"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{"\[ThinSpace]", "\"Persian Empire\"", 
     TemplateBox[{"\"728 BC \[Hyphen] 330 BC\""}, "EntitySublabel"]}, 
    "RowWithSeparator"], 
   RowBox[{"Entity", "[", 
     RowBox[{"\"HistoricalCountry\"", ",", "\"PersianEmpire\""}], "]"}], 
   "\"Entity[\\\"HistoricalCountry\\\", \\\"PersianEmpire\\\"]\"", 
   "\"historical country\""},
  "Entity"]], "Input",
 CellChangeTimes->{
  3.922749658409359*^9},ExpressionUUID->"01378e79-7e27-441b-91d1-\
5d2ea24ddfb9"],

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<HistoricalCountry\>\"", ",", " ", "\"\<HellenicEmpire\>\""}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.922749633945054*^9, 3.9227496390294533`*^9}, 
   3.922749672633678*^9, 
   3.9227497218666067`*^9},ExpressionUUID->"248047f4-94fb-456b-aa81-\
74a6b934449c"],

Cell[BoxData[
 RowBox[{"EntityList", "[", "\"\<HistoricalCountry\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.922749531139188*^9, 3.922749539547208*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"69deee70-01f2-474e-b8b1-f143e91bdc03"],

Cell[BoxData[
 RowBox[{"oldGreeks", " ", "=", " ", 
  RowBox[{
   RowBox[{"EntityClass", "[", "\n", "  ", 
    RowBox[{"\"\<Person\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<BirthDate\>\"", " ", "->", " ", "\n", "    ", 
        RowBox[{"GreaterThan", "[", 
         RowBox[{"DateObject", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "1000"}], "}"}], ",", " ", "\"\<Year\>\""}], "]"}], 
         "]"}]}], ",", " ", "\n", "   ", 
       RowBox[{"\"\<BirthDate\>\"", " ", "->", " ", 
        RowBox[{"LessThan", "[", 
         RowBox[{"DateObject", "[", 
          RowBox[{
           RowBox[{"{", "250", "}"}], ",", " ", "\"\<Year\>\""}], "]"}], 
         "]"}]}], ",", " ", 
       RowBox[{"\"\<BirthPlace\>\"", "->", " ", 
        RowBox[{"Entity", "[", 
         RowBox[{"\"\<Country\>\"", ",", " ", "\"\<Greece\>\""}], "]"}]}]}], 
      "}"}]}], "]"}], " ", "//", " ", "EntityList"}]}]], "Code",
 CellChangeTimes->{{3.92274865553743*^9, 3.922748818470048*^9}, {
  3.922748849350114*^9, 3.922748984513009*^9}, {3.922749014923647*^9, 
  3.922749021088532*^9}, {3.922749080762115*^9, 3.922749195064812*^9}, {
  3.922749237239246*^9, 3.9227492563141317`*^9}, {3.922749427852656*^9, 
  3.922749476941516*^9}, {3.922749698699997*^9, 3.922749739910589*^9}, {
  3.922749798355936*^9, 3.922749823062297*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"70e89fc4-f01f-4efc-90cd-ddfe7893de1c"],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"EntityValue", "[", 
     RowBox[{"#", ",", " ", "\"\<Image\>\""}], "]"}], "&"}], ",", " ", 
   "oldGreeks"}], "]"}]], "Code",
 CellChangeTimes->{{3.922749826664625*^9, 3.922749855937001*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"668c18fc-1778-4ef9-b1fb-7bacc8151d92"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityClass", "[", "\n", "  ", 
   RowBox[{"\"\<Person\>\"", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<BirthPlace\>\"", "->", " ", 
      RowBox[{"Entity", "[", 
       RowBox[{
       "\"\<HistoricalCountry\>\"", ",", " ", "\"\<HellenicEmpire\>\""}], 
       "]"}]}], "}"}]}], "]"}], " ", "//", " ", "EntityList"}]], "Code",
 CellChangeTimes->{{3.9227497723601007`*^9, 3.922749779824308*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"1c042642-e083-4bf9-89b0-3fddc6bb49c4"],

Cell[BoxData[
 RowBox[{"oldestFigures", " ", "=", " ", 
  RowBox[{"EntityValue", "[", "\n", " ", 
   RowBox[{
    RowBox[{"EntityClass", "[", "\n", "  ", 
     RowBox[{"\"\<Person\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Person\>\"", ",", " ", "\"\<BirthDate\>\""}], "]"}], 
        " ", "->", " ", "\n", "    ", 
        RowBox[{"TakeSmallest", "[", "50", "]"}]}], "}"}]}], "]"}], ",", " ", 
    "\n", " ", 
    RowBox[{"EntityProperty", "[", 
     RowBox[{"\"\<Person\>\"", ",", " ", "\"\<Image\>\""}], "]"}], ",", " ", 
    "\"\<EntityAssociation\>\""}], "]"}]}]], "Code",ExpressionUUID->"2cc31855-\
e89f-4723-8258-7ff57717dd60"],

Cell[BoxData[
 RowBox[{"popMovies", " ", "=", " ", 
  RowBox[{"EntityValue", "[", "\n", " ", 
   RowBox[{
    RowBox[{"EntityClass", "[", "\n", "  ", 
     RowBox[{"\"\<Building\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"construction cost\"", 
          RowBox[{"EntityProperty", "[", 
            RowBox[{"\"Building\"", ",", "\"ConstructionCost\""}], "]"}], 
          "\"EntityProperty[\\\"Building\\\", \\\"ConstructionCost\\\"]\""},
         "EntityProperty"], " ", "->", " ", 
        RowBox[{"TakeLargest", "[", "10", "]"}]}], "}"}]}], "]"}], ",", " ", 
    "\n", " ", 
    RowBox[{"EntityProperty", "[", 
     RowBox[{"\"\<Building\>\"", ",", " ", "\"\<Image\>\""}], "]"}], ",", 
    " ", "\"\<EntityAssociation\>\""}], "]"}]}]], "Code",
 CellChangeTimes->{{3.922747823811152*^9, 3.922747837054188*^9}, {
   3.922747947011989*^9, 3.922748012552381*^9}, {3.922748070498282*^9, 
   3.922748070601903*^9}, {3.922748138101108*^9, 3.922748139573646*^9}, {
   3.922750100223797*^9, 3.922750198555209*^9}, {3.922750248674021*^9, 
   3.922750250203257*^9}, {3.922750294162817*^9, 3.9227503197413797`*^9}, {
   3.922750402026613*^9, 3.9227504393284473`*^9}, {3.92275070490976*^9, 
   3.92275075777976*^9}, {3.922750800747388*^9, 3.922750821073249*^9}, {
   3.922750874232109*^9, 3.922750880336081*^9}, {3.9227509626697693`*^9, 
   3.9227509991330023`*^9}, 3.9227510353205633`*^9, 3.922751077514415*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"0c46a444-40ac-46cb-b2c6-afa368219544"],

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  RowBox[{"SampledEntityClass", "[", 
   RowBox[{"\"\<Building\>\"", ",", "100"}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.922747865141286*^9, 3.922747877046603*^9}, {
   3.92274815929516*^9, 3.922748159990933*^9}, 3.922750275969728*^9, {
   3.922750566434925*^9, 3.922750567849349*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"91ed5489-8199-40a7-855b-6e6d9ecf40a7"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"111 George Street\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Building\"", ",", "\"111GeorgeStreet::462g8\""}], "]"}], 
    "\"Entity[\\\"Building\\\", \\\"111GeorgeStreet::462g8\\\"]\"", 
    "\"building\""},
   "Entity"], "[", "\"\<Properties\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.9227479014490347`*^9, 3.92274790385414*^9}, {
   3.9227479976714687`*^9, 3.922747998421591*^9}, {3.922748147734529*^9, 
   3.922748156265768*^9}, {3.922749934633609*^9, 3.922749936904031*^9}, {
   3.922750012604845*^9, 3.9227500137106247`*^9}, {3.922750080849106*^9, 
   3.922750083876347*^9}, {3.9227502031373672`*^9, 3.9227502077375*^9}, {
   3.92275042792581*^9, 3.92275042843745*^9}, {3.922750474234434*^9, 
   3.922750476069697*^9}, 3.922750530239645*^9, {3.922750599597053*^9, 
   3.92275060232169*^9}, {3.922750637105475*^9, 3.9227506382757893`*^9}, {
   3.922750722072918*^9, 3.922750723037305*^9}, {3.922750761922236*^9, 
   3.922750775385921*^9}, {3.922750916603746*^9, 3.922750922376041*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"9e1f33ca-d53f-4e85-be4b-af1e54885eba"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"111 George Street\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Building\"", ",", "\"111GeorgeStreet::462g8\""}], "]"}], 
    "\"Entity[\\\"Building\\\", \\\"111GeorgeStreet::462g8\\\"]\"", 
    "\"building\""},
   "Entity"], "[", "\"\<Con\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.92275012178999*^9, 3.922750122886672*^9}, {
  3.922750925948578*^9, 3.922750945669345*^9}, {3.922751067630776*^9, 
  3.922751069041007*^9}},ExpressionUUID->"06a71b07-601e-435d-8bad-\
c51daf867575"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RandomFractalArt\>\"", "]"}], "[", 
  "]"}]], "Code",
 CellChangeTimes->{{3.922751148251042*^9, 3.922751216975148*^9}, {
  3.9227512810792637`*^9, 3.9227512811684637`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"3747a101-a07e-4490-a8ff-76fd93f4a2e1"],

Cell[BoxData[
 RowBox[{"RandomImage", "[", 
  RowBox[{"CauchyDistribution", "[", "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.9227517499586678`*^9, 3.9227517590970592`*^9}, {
  3.922751804411647*^9, 3.922751833191221*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"8332d650-bc76-4c57-9091-f36f988a2d42"],

Cell[BoxData[
 RowBox[{"ImageHistogram", "[", "%", "]"}]], "Code",
 CellChangeTimes->{{3.922751814532693*^9, 3.922751821006318*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"0ad0761b-d1d6-44d6-8f36-33f4233c3c7b"],

Cell[BoxData[
 RowBox[{"RandomImage", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", "]"}], ",", " ", 
   RowBox[{"ColorSpace", " ", "->", " ", "\"\<RGB\>\""}]}], "]"}]], "Code",
 CellChangeTimes->{{3.9227518600839567`*^9, 3.922751860093191*^9}, {
  3.9227519002639103`*^9, 3.922751903315137*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"64c0ef4a-6082-4708-9346-23832b8ae7f1"],

Cell[BoxData[
 RowBox[{"RandomImage", "[", 
  RowBox[{
   RowBox[{"CauchyDistribution", "[", "]"}], ",", " ", 
   RowBox[{"ColorSpace", " ", "->", " ", "\"\<RGB\>\""}]}], "]"}]], "Code",
 CellChangeTimes->{{3.922751914606934*^9, 3.922751917168207*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"0c4bcbbc-f5ac-4830-80f1-11d3b8117be9"],

Cell[BoxData[
 RowBox[{"RandomImage", "[", 
  RowBox[{
   RowBox[{"CauchyDistribution", "[", 
    RowBox[{"0", ",", " ", ".2"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"100", ",", " ", "100"}], "}"}], ",", " ", "\n", " ", 
   RowBox[{"ColorSpace", " ", "->", " ", "\"\<RGB\>\""}]}], "]"}]], "Code",
 CellChangeTimes->{{3.9227520314362297`*^9, 3.9227520314457407`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"2944e1f2-4887-4d24-87d4-292670171d75"],

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", "Green", ",", " ", "Blue"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"100", ",", " ", "100"}], "}"}]}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.92275211569718*^9, 3.922752127668632*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"1b4378fc-39bd-48a4-8e85-f5b12154efb3"],

Cell[BoxData[
 RowBox[{"Graphics", "[", "\n", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomColor", "[", "]"}], ",", " ", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".1", ",", " ", ".9"}], "}"}], ",", " ", "2"}], "]"}], 
         ",", " ", 
         RowBox[{"1", "/", "20"}]}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "\n", "   ", "100"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "1"}], "}"}]}]}], "]"}]], "Code",
 CellChangeTimes->{{3.922752205112314*^9, 3.9227522051219873`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"6a632fdf-bc7c-4d93-808a-99fe45952ea7"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Graphics", "[", 
   RowBox[{"Circle", " ", "/@", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"10", ",", " ", 
      RowBox[{"{", 
       RowBox[{"40", ",", " ", "2"}], "}"}]}], "]"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.922752272627226*^9, 3.92275227372228*^9}, {
  3.9227523429207706`*^9, 3.922752350622754*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"c7d5df4b-26d7-4b3b-bff0-bd1e26a92422"],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Line", "[", 
   RowBox[{"Accumulate", "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"500", ",", " ", "2"}], "}"}]}], "]"}], "]"}], "]"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.922752393451523*^9, 3.922752393460144*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"a7c807b0-05ea-44fb-a238-14667369a172"],

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"Log", "[", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", " ", 
     RowBox[{"{", 
      RowBox[{"50", ",", " ", "50"}], "}"}]}], "]"}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.9227524482918262`*^9, 3.9227524483006783`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"160fad4f-3e0c-42ea-a6b3-6a7c7e566442"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpeechRecognize", "[", 
  RowBox[{"AudioCapture", "[", "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.922752660438377*^9, 3.922752660447341*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"e63c2a2d-5802-4247-884f-d5344dc0f611"],

Cell[BoxData["\<\"alu hello testing testing one to three\"\>"], "Output",
 CellChangeTimes->{3.9227527074070187`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"d908ee5b-fca1-4701-8461-4d517f10fede"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageSynthesize", "[", 
  "\"\<A painting of a ram in the style of Monet\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.922753167218464*^9, 3.922753167229244*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"6d9ab01a-2440-450d-ae4b-8757246de015"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"The service returned the following error message: \
\\!\\(\\*TagBox[\\\"\\\\\\\"Billing hard limit has been reached\\\\\\\"\\\", \
Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"apierr\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"The service returned the following error message: \
\\!\\(\\*TagBox[\\\"\\\\\\\"Billing hard limit has been reached\\\\\\\"\\\", \
Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"apierr\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "apierr", <|
   "MessageTemplate" :> MessageName[ServiceExecute, "apierr"], 
    "MessageParameters" :> {"Billing hard limit has been reached"}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.922753174423349*^9, 3.922753187706637*^9}, 
   3.92275432773316*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"35165ea1-c092-4d2a-8916-db17acd21ae5"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{"\"Benjamin Franklin\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Person\"", ",", "\"BenjaminFranklin::k2444\""}], "]"}], 
   "\"Entity[\\\"Person\\\", \\\"BenjaminFranklin::k2444\\\"]\"", 
   "\"person\""},
  "Entity"]], "Input",
 CellChangeTimes->{3.922754340301908*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"9386ad96-6169-4a95-a784-b1a2ec607907"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Benjamin Franklin\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Person\"", ",", "\"BenjaminFranklin::k2444\""}], "]"}], 
    "\"Entity[\\\"Person\\\", \\\"BenjaminFranklin::k2444\\\"]\"", 
    "\"person\""},
   "Entity"], "[", "\"\<Image\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.922754354085805*^9, 3.922754361531376*^9}, {
  3.922754426113912*^9, 3.922754428537517*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"f4ad3e9a-e879-40aa-8021-84796c28472f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
NBnWU4pClJgKZg3dJ0FiUQLlaISkGExFknAqgUcQ+DGoASwRlA2bDKkAh51B
KMw89+DR44dPnz924sCFBy9effHlt29+ePvrr+9++/tvv7775cdvXn3+6tNP
nty/devp7WsnZ3Yua66rKWFondVmshgMRr1OB96GU4PtxelYMFwsxuhwAfZE
QUMUAIsH3afA6jJhtVaoIPJALmBpcKFgJdVAtYQCokzuypnjx6YOH506euDs
naefffbF94CEX//8x99+//MPYM3vPv34/r1Hjx/cuHL7o1tXzkxt6GhocOkF
Q0KCNd5iMelNJrVBzbIkJeACIA78GQ8rog4LGWwrDepGYuElhW9yrFKlgdPi
UAQihM2umhf1vIqnVKWrjswc2rNr5/aDB8/cevryk89efw9M8cc//uvvv737
6ccfX396//6DJy+e3r1x8/r1s4d3rGmranRbeUNSgt1sNOq1BgNvMUCWonlw
EkpCJWXgjHC5gobQgGcBXgfmZEUdwwB8oTkgKMDnHPgdsJo06D2phL6UTB4+
cGD3tk0bd0+fufXs5bOXr9++/enXP/72t7/98fvPb97++OrhvYePHj+8f//m
mVPHZnataS5oqHMwxtSERLvFEm8xm7Qms1YLlw7OGhQUAxIQwqFND9YbLCNM
AU6q0YHbBukgUJyiwH2FFVWgYZ9phUqFUljqhsP7pg/u3LR+6/SZm4+ePv7k
zdsffvz9H3/+9u7XX396/frb5x/duH/39kcPn988fXRmeuMCr8vbkMnE5zhS
HGZLgt2k12nNOq1OLeAkwoRxQFGQ1EhSJ+Jh4KEIDm4LAgCqIgQWg9BLYpBr
GArYNKytKBXGR9ySqb0zh3dtWrt+6vT1u/cffPLm6x9++eXbTz5++ilsxcsX
969evnvn9vV7zy6eOTaze257dXVDfR5pK0x2JplMNqtBKwJhQAwUGB4iJBJm
wfBiItAADQ/iocIIhRJVoIgKxIwMJ1BwPZwIAQUhRVAXEnaJz125b8/Rme0b
16zZd+bW/Qf3n34FdPXJtVMzB45M7Z8+ee7c6ROXLt+8fPXusf27tq9qq85K
K6vKVcUVJqenJSUk2GywphYtF/baOrhksDEEhoSzmEqlAhKFckhCrgTTACsC
84EXDEEgEgFzw/QQBU4qwRnVrty958SRrRvXr9997sHTJw8fPvv81cNzpy4c
2zoSau0YWbp2w/TxMx9du3LvzNZFocqEVEdCVlG2zFSYnJWW6ogz221qwWoE
MQFc0AqKkOEICpqEQFCD0+KcCK4KVSCsTKUAyydXUjIVyqrAf0NM4yBs0yqM
Udg6J7fvuHBq87YtW7edB/169NGdF/cvnb9x48SelaMttVVlvkWrd1x7cOmj
OwfHylOz0wurnMl5GaghJzMrMS0tOd5oNunMJosRzCZv5ICWCAUaNro4YAHs
XQxFAo+G24LIVEBmYSaDuAmpLJziQFhwUF4i2btk075bR3ds3LN10/ErT758
dvvmnfPn79w+smHpvL6+vlBLz8TkqacPL9+9sqQkraS6oavSk5uVQVhy09JT
0lKS7PakJHOcQR8O/qJFJFEljBpTwqShFMCiDDiJgFVUISqpUgaiDahA/hnx
gbKY8A+JKpU+p2HZ2qnrR3et2rNz8silx58/uXn58vFT5w+umjvU722scblH
Vu659cXTG3dmvBZnQW5RpdtTlpJJ2vKdztTkRJvNbrfZEoC0NMBaZjVNhS8U
zgfaFb4nwMJGEggKQQtFEVKJoSQG9I4APcASMfBVHKEQQ1apZ9GmIyfO7Fqx
edfGmSuPX9y7euHYiYtHlgwv33xo/66JoHd0zaGbLz57dH1zXlxCaW6qpaai
PCELjyvOSEtLTUtJTrZbTXFGi1lvMqj1Ig8unBBQJVw/7AEiw5U8qVIqFLAy
OMGpEIUMhgNxBGScIqAE8F80ac2u6Vix9+TMiT1rt2+dPHzl45f3r546cfHK
jr55Jz5+fPPwqiWjCzfOXHzw9afXVickpY4v6KktqSl2ZCP6spz0VEeGMzXV
lmCOt1jjTWadqNWKOr3A6cHUgF5C1CAgKiIKFIAJ7xA2DFEAC1AEzlBh/QJr
SbK6tNK+Vdt2TU9v3715ZnLn0avPP390deb09eMTPduvnD24c3LTmvnLDpy5
eO/1l7c3xmUNbN+5bn51UX5WloIvzc1Ic2QkJybFJaak2hNsZrNOrTeKgshB
GlKrw0zAgntFAQ0kiRCiUqrkwh8BYOhw1CEFHdA6rlSYikILt+3Ysm3HrjUb
txxdv/f49ecvHt4+f/rC7tH5e7eEOhwWX9/ExjNPbt57+9WDAxmli+a3tIX8
2TkFDilVlJWZl5bjTHba01JTrPFx+nAyN0JEZXUs2BVaY2QZnleHV5XElShD
qHA1RmJSgkAYCKTgv/8Z0Ah7sX/lnunt2/eCcCzbuHv1tqM3Pn5079mzJ2fW
zZs/fzBUaq7YNtq1+dlP9+78/PXDkzWVeTVMUnnAlVFoicHz07MyEtJTUjIS
M1JT7YkJcRadCWKIwQKenteJlNZI4iDf0Sz3T6enUCoBspgqliVJKmwEoTQp
gqsMBY07Ls9MHT+2dcnoki3rtq/beujSvccPn3398uGtSwc3bD7c0bN6/+Sy
Y69/e/nxq7cPTwazR0oLaxd35eY4nVKJMycjw5mTnp6VkpbsSEpKSrDFm4Gz
QFAtBr2B4w06Lfg6WilTAklgKAKOJ0wZ4EJBPCAkgZshcYRxlqy7cGzm+tU9
i8YWr9qxY+cWwMSDJ4+ef/vDZ59+9+rm2Qu3Lp+d2bb77m/fPXv68pt750YD
h3csXLg0lJte4KRm84U5Wc6s5JRkuz3Z4UhKtAM0401Gs04Tp9UYdRotx5vC
twvgRDhGIQQFvg5oHYf3/ywCTB3Ns/aqgZNnZ24+vLB9csO+bTu2r10DRdx7
9PDFd6+//+671189vHj44K7J7RdfvX31Mbi+e+cX+CYn12xeESxPqckRZ0tS
inMyclMynClJySkOmxX2Qwd0oQf+NustJkhYoG16vcCrKATnlLhAhFkUAeNL
MASOo9AkhmdSPbtOHzj37NKhqcMzxw/s2rJm/Zbp8zfv3n/+3S9//vHjD2+/
fnTn+tkTlz/94evPHj18/uWjCyt8m3btWj23oaa2z2tTKdWlGc6sJKBNR4rT
YTHG2e3mOLA5MAZwOiKIUjzPa7QMLgVICigJzSdRFYpCA8DmwNtwRMGzg9On
Dl+7ffjwmQtXTh7bv27lqk0Hz1y5efvJl69/+Pn3d99B9rsPFf3++w+f3Lv3
/Mun1/fWLZ8+OLm8Lzh3XqtTGo3Gp2cCIFLSkpJTk+NNcYnJCWD2YBAac5wd
iEurN0MUo2NlNIaCvkNaDpsZAAQsaJjLVaB2bNHgzMyRKxdnTl+89/HFs3sX
DQ9tmz598doNOOF3v/z9v/720+tvPvvy7a+//PDF0wePn3/67M65sf6d+w8s
nr/4wIq2KrncbkjNycpMz8iGKpKTbNaEJIdRZ9Sp1YJOb2BIUeD1PPBhjAqT
xyoUscCYGEpBaEVxAoHdEIEuMT6n69CeA6fPnjx78faTKzPr54YGt0+dOHPx
8vW7D794/f3bP//44e/vfvzu1Wefvbj78OOnn3zx5Nqm9snpo+v2nNm/sLlE
ilrN9uy0nOT0DKfTkQT4tNrSEhNsRoAm6BnPG/QmkmDAStGoVI7T4Bso0FBK
CSgN310jaEwronz+2LYdUzNHTpy6eP3exS1jg23jW/cfOX7m3IVr1x5+9tU3
r3/4/vVPv3zz/Mm9K5fvPHr86ufPr+1vn9h88NSp6a0TbWkyBrWlluaUpGSl
O3NSEpJT7HHxKcmpdr3RorEAII1GUW0UwEZJSUyBg9WRCYSCAsrCmPADHKhS
zqg4Uusc2L5336GZI6dOnjyzps9f2TSxb9/UkWPQjPPXbj15/uzli5evvnh5
8+z5k6euATi+fHRtV3Pnym17D+5YM9Ccg89RctnZ6emZTgesR1qS057ocFit
DkecXhevFXlOb1ZrdSylUcTGoEBVIsHJosFxqhCKpskwaYDrwvjMzvVbd+05
MHV035FdvXXuqsDSbTt27zlw+Dj05sqd+/eePP788ZNHJ6dOHbl49dyVq9eu
nRmvrA0s3bJny4JAbSZYF609LSs7OyM1LTMrzZ6UkJiUmJwMAzGwBp4XeJ1J
rYbdYBRyGYIp5STKgd+UyUA7VGAqVCgtVUF0zaxftGbnrgPTp/ZsWtnt9VS2
zJvcun3H3kPHTxw7c/bK9ZsPHj6FoL77yNX9h3bO3zp94sCwz1XrXrVz55pR
b2USKKPOmp6T5kzPys/MgkjosNud6U5Hot3IGkWNQWuwGMRwslAgKCi7VDZH
BSyFQjIHh8XAwuAyOY7R1vyu8Y1btm8/vG3jYG1dZzDQvnFy6+79U0dPHzt1
6sK1jx49unf52NT0jcfHBtzJFbVt3U3lFeVFq7esHe33VBkUMolOm1ZUmJ+b
kZqR6UhPz05OyUp1JDusBp2BV+vVUIdWI/A8IlUQUAQWq4qVgr1XyTFULleo
IBhKYFtYp39w1cb1K7ZsXNaSVz1vzcKRyXWTe/fv2n/ixOmT56/ffnTvo9P7
T9x69PTh1MqVe1YGKwrhQpMXrFzc01xRwamipZZwEcXF2SlpqYnZ2Vmg6DCQ
lAQzCLpWr9YCe6oFUQCrh0SDm1XAYqIYGqnAEYlEKlfK8AiFgmZz2seXb1i7
Yt3kgubswqEt23bv3jC5f2rHLliRU+ev3rxz7fz5E5cfP3n68ofHDz46uc6b
nmix5cxdtLirsqSIxmLk8Zb03KzcoqKCzLSktPRkW3ICOC1nRqLWojeC+bVb
NAwLRaAEModXyaOUOEvjlAoL04ZSJpMpJQgi2Kq6lixYuXLt8tUbevPTQpu2
H5revHHv9J7dh2ZOn7l45ep1KOHK9dv3H9+/8/Dja1dmdi8qzyptHR2d769w
pdNg2eJ1acXFRQW5uQUFOc701LSMlMxMgIhDD5qhFUxW0HNeKxIxSl5Ox6AM
rqJAvJTA3Cgqk4GgMTyrzfGMb1q0YtXmJUuWLhvrXrFt/Z7pTau37t+758DB
U+cuX7l89dz5U+dv37hy6+r1m9eu3dp77PCCYP+C4f4Fra66eDIWRxIs2WUg
YpkFmfl5CSmpmek54CzSUuxmEzRCtFjVOl5rFJRSCF8gWwyBqICnGKWMksYq
IZgyWt5SWNc9unPBwv3bh5ZOTAwNdNeNb9+3ftGOgzun9h0+cf7SxfMXLl68
cvbKselDJ05cvHp9ZurS4WVD8+aPhPq7PLVxBBqJWxJzivOzsnMyC7MznZmp
eeB7HTCXJCvkZIghEFItBrVBJQOPjahkCqiAApMLMq6KjFUxuD6nvmds3vIl
Kxeu2bdry+oVi/sD/pKKgeFg38Z9O/fumT529sKFi1duPLx6aOvKRduPX7tx
+/Gl49dOLR2ZO9DR3u+v83AylcTiLCooLCnKyS0qzsnKzkvLz0pLd9gdDos+
zmYwiLxRMBg1ol4pU5EkgSnAXoGUg7+BcCpDYkmja2zTjsl1a9fMG1+5edPx
nZMrFowEG/KL66tCa3ft3X/o0LEz5y9e/eju2RMHV48FV09NbV2xaerihTWj
Y8sHG5t7G9yNmBTHsgqrCnOLS3Kz83Nz4CU9Lz3FmWQD2jSZbWq9hovjRY7j
GZUcDd9CU0EXwNKoZIhSHhZTa8umE+dPH5nZNdA7sHLD5IUzUxvXbx4ZDqTn
5fas2Xpg3/Th4+cuX71+6865yzfvPr5+fmr7hoUTi9Ysay4ua22o6ZzfUe1C
FTSTVlxamA+tyM1Iz8vLSs/MTUpxJic605MTrTaDUae1CBpeawjfsqVBPxUQ
lBmOwRQYpB0cszUuOzi1a9Oapb1z585bPbby4q2rB1buXDpvXmVKxsjmXUcO
7J85efHa9WtXr15+/PjjB8+eP7h+4ey5AxvWr5kXaG3uWrwqUJ2DygnRXFpR
VlpeUQqwyMstyMoAvgAhcaYlJ6XaEs06s5rTc4KWoQk6/BAQQjIcS0FIJZUU
QlLp7b1L161fs2zJwo0r163vWH7pxp3j87YdWDwvWJI/vGnn4akDh46fv3Ll
4rmzVx/dfvDg5cNzF48dmt6/Z//BpZ3NbfPXr2pvSCHkjN1YW1deWlVRkFMA
K1Kam5aR5cx0gtVLSkiNSzZqwVeJEAAxmuIEcFKg6pAKVdAO0AxS7azrW3Xw
4LZ1KyeXLd+2bsHeSxeuTI1vPrt2NNhW3L56M4Bi+ujpCxfOnTl99dHDO1eu
XL906sjuNSs3b9881ukPLlu7oMWTiKPGgvgqd2VZRVlhXkFJflpRFqxJ2j+L
AOttsevVJo2aF8M33hlRJFRgtpWq8J0iFadUUTI+2T265cyRvTvXrtu6e/vQ
6plTV85smrv68PrB2qGylo17900dmp45eeYsvNz46PaN25eunj67b3LjnsN7
ty7sa21buma0vtQsxxKq4jJd7prycldFQUFZdo6zqDQ7Jz87FVKyw5EQpxeA
JUiTmccwFNNQkElxllCEH3snlRJaoXXUDx3at3/j9hUnTx4fGdy8Y8/ODYOL
9h2cN1rqy3avAI9xYP/+g8fOnDx58dL127duXL1w+tCmNTuPHNq9bb43NDi8
uNeTrVWhca6stKzK6moPzCS3oLgiqyA3PT09LSXL4bQlJds0DJhcXs0JqBk2
Qhori5GQDKpUwT9lLCoX0oOLdh86vnztoQvn94UmVg8N93u9S6Z2dgZKy+Pq
xrdtP3jo4N4de09dunTpMsDz2pXzJ0/PHDx85OC2DaPLV/T2T3S4k3FGNLpq
spPy62prK8srS8uKijPzszOceWlJCSkp5kRHglEDGsqqBQ3NKtWQNWIjpdAD
JaRzApFIgah8/et3b/A17dk5s6ZxqKu0tKTIM3f1RG1diVNX07Vq69TBPVOg
pTPHTly9fuPWvft3rt+9ffP65TMHt67cv3Wgo626WC0VRTG/oaIgr77a43a7
K4AwsvMzM9IKwHYnJxgscUY4vU4H7/WsPJaVQipXoOBucBVYXSAKUp+Z5ls+
WpnpWDRv87JmX3VBVp6ryd/UUFbm1OqyfQMb9u/bfeTYgZ3bt+++cOXWo2cv
nj658xF05PzUlr371/U1VBdZIXNQbHy5r9jpKqurdbvKXUU5efkZGZnZKRmO
BKslLj7OqAMlNeo1IgeQjMTAUCISGcIr5DgiozAF6+RqOvJ4u6E7NG+ur7Sq
xplVUgYHcdp4KWWsbB/ZcmBq5vChmand2w+fvHr/ycdPnjy5f+fOrYuHd+/f
Pq+13pMNUDNqOS67Ndvprva46mqqaspyCvJgPzKdqWl2R4ItIdFu1opqrcCy
YixwNq+kVSi4GTZWQaok4PaEdMLpjFNbqMrqxuaqnMam1JRkCA5xlFwyO5bP
6g4s2XFwemr62LHpA3sOnoRc+PGz588+fnj9xIFd21Z01jeXCDJaZU7WMKll
lRX17oaaJo/HXZGTn5ubk5GVYXMkZCQ67PEWnajWm7VqThuL4UpEqiIRhJLT
CoJAZTEIpXZwJoPVpFPFJWYU5mY1VGTZeEEnKiNnfTArkrSOLhhZuOnA4b27
903N7N+16/DF2w8fPX/54sG1M9O7lnX56ssMUeCS1U67IS6xoqG6pq7SU1Vf
VZ4DpJmekpGSAPHYmpZgMZtNFptO1PB6SL9Kgo5FoxWkFAKyRIZKcBqDaRnU
YbNFaRxJCdlmJx8lwyQfSCL/4//OlotjR4aCy/ZMb5vceWDq8NbVG6fOXIQ8
dOX08aO7V/W4O+qMmJLBeMKanSwYHfX1LY1lblcNyFhBfmFyUootPdFqtiSY
TbYECwRz4IrwDdbw433yiJgIglfJJLMVchX4fqXeINDKyJiYWVhSalKSEBWl
QiWzZ73/XkRMpCrr3I3xwVXbd55ctXX66L71i5dN7tx18OC+rZOb185tbHLF
k6icUQukRizMMhpc7lpXZV2FqyQ/vyAPVjQjLSUxzgwFQCjU6g0ayKV6HENR
SkliMorGaYIAZxUTA7ouQbQYYtASVAyCSmOlsYgKKiKVH0ZKlRE4v/jVo7HB
jZv3Hli+ZsOOnatH+wZHly8eH5430dPYVFWsmaNkKdSg4Virq1ib5qqpdrmr
aiqKC8N6np2WmOhMscXDNExgMhN04HQ1OKZSgujSiCr8HKrwbTwZaDkyGwHD
qdGLsihVjASXSwiVjsPDT/CQMrhGaL3x+nb/6LpNG3ZOLN68b+ui/u6eUEeD
uyXQ6q+pyKVnKSnZHCHOYo4vdCXF19bVuKpdta6K4rzs3ILMdIfDmZIAzTDG
ga8yAzw1BgIHhy8naVZOIxoSC9/BQ1BEHhkjA2zRouIvCKIIMwdnZBWcFpeS
qIo3pnc//fVO39j8yc1bVq9ds2rZ/P72weFQe6jZ5S50parkJHgTISHRkhLn
LjbW19dUuWqrKkoLczKz8jIzUkFE7UkWs8FuMYvqOLNWY8RRiUwOokHhfDTJ
iQKCILJYmUyq4AgUjQYEwNsY1iRwylipVIagKtGgMxoTxl78eW8wuGDj5sml
Y+NLlo93+ZqqqpvdhcUNTQ6ZRK4gBEOy3ZZmrc1XVwNJuOpKisKIyIAqkhJT
k63xSfEaszHeaFKLLAvjkICnI0k5winC99MxFapQINJYiVQKPcAQBSkoVPYk
gVWhqtnRrFY08hQuJGUe+OUfj4PNwwuXjPf1DAx2+VubKstcFWXu9rpE1V//
GhOlENRMSmpxSaqxwu2urHSVFhUU5IctXlZKUpI93pZq0+kNZoNeo+F5HUHK
IW2RFBA2zykQGlFCLym5TEQwUqLgYyWMDZXwYryGhDCCQXKPjOCtdoet9dIv
v9/qbuoNtvv9LY2u0tLKWk+du6m9pjxeNev9mKhYRBKt1+fnJGaWu91l5SUV
pcWFBXn5hRlZacmJ8dbkZFucyWLQieH7qzqcUhCQRwlGTyiVSNj4U5BNVZTB
xILb5Gk5YUApcY4yanYkLhKoRhQ1Mos7L1nb99mf7x501zU0+LpHRnvbO1q8
TfUNLf5aX6I0+v33Y+bEoCyLkvEJ5WXV1cXlxeUlRfm52bmFORkgosmJSQ5b
gtlmgkLMGo6jBJJAlQQCblfJqgTw2hRNkRRN8jSqyixxQEyMRUFUFLQkltMS
jiwrhhrMpWVJBZvf/P2PZ8GSxo7+8QUTXY2NdbWtfV1e75Adlc2RffjeLJkc
lbGG1JqS0rqS/IrKzOyi/PzCrJx8J+TSNGeS1WmzWQxmo9YgGklaqUJUuBw4
S0EpOEyJkeD6eBMwF6ZJNJvVgozQCDohTqAxBULoE4wqMLCZpQ6D++a7P37/
qresoL4t4Ktv9LaFOluaW/t61QwZJYueFa2SYrRWtCQkpBeVlBSWFxYXpafm
5KdmpaWlQysglJphMwS1oBX0YR0FwpJSkMgpBY2Gn4qHU8aUJE5BiUmZOSUZ
HE0ixtR4hiVipYSYqFXK5Ig2PTPF3nbozX//1zcrXJUtHS2dvV3dPZ0+f89g
P0MhMix6zocxClxJCiLCm605JblF+Tl5BQXZaTk5Dke6M8VuT0gxmi0mGK9W
1DIkkKFCGk1TLMERLBF+bFQfl5yZpSY5SmfV61AQEErOZTmMHKKIZRJ5pRRT
ktYcS3yGZ/qH3/94c6ixOeQO+erKq/yDfa0D/QwREa2aPXsWJNFIuZqVsmou
ISsns6AoPy8nKyc3PzU5NRlyR0JqfLwpPs5gMGg1KA7JRy6VYwhoCMcxJMmb
HBlZ2akmTEHhKBuXkGEmlFhSYYqASwhMm5moi5ZHRisT2YIyu/vCP/78+R+P
JhcEKnK9w2PDw4Pd436U/PC9iA9nS1FMLkMZSsULnMkOKSg/Iy09IzspG+jK
DjoKYp6gN5kMJqNRi9E6NaEETpCj2D+fOKBPdGZm52TlG1A5yScWVBbqSAxV
6+KRGEmEOTsbN/IfxKg40ZCQk+xI9j/+7//6/c03907dunVk/cLxwVDbSJVc
NTsqZrYkJlohU0gViIrkNHqjrTgnLS0rO92Rkp6UnJbisKZazVYHBFFBZzBr
FZhWTSqjZJDBUJTEOV0KcEpefk6pSSQxMT0FI2MRllbzFlqkdWmFjhitMlaG
0xqNkTM6zOqNP/33f//8zVfP753fvXrlkqFQ11COUhGlkEUrI94D4o2IlkuV
DMPqDVZ7VmFGstOZk2VPzMiAzYgzxTlMcVpepzeLEjm4CkqOKuUEjrF8vCWz
OC+3pKwgP0MfKae1nKiUzIomGJs9OT+u1KmPVYgf8hQh42nE4IwStE1fffrq
6+ePH5zet3XjuoU9ocFFyQijnDNLqVJFx0opRZRcIqNkcoPeakzKSU9NS04O
3+FNSkow2hNgHFaj1qQ3sjTGgn4gYHURAdElpWfnluVlFpTU5RQ7KUIqxVQg
bCQWZY1PAZrUylQ4oixLQaIj5khSSbDljo7JC9duXb598+zMulVrloX6uuNx
NiJKIoVekHOiIyLmyGELjRqMwnVGa7gGZwoYlKxEu91mT7AYTHqzUaTh5KSM
4khBhTJx6SUFZaXV5aXlBUUlpfkmUqLEIpMLtO9HCjjJaONIpVRJRBKOUjvO
8hZtjCRSzScGT3zx5tuPP7q4b9vWJRNzx/1cLBYjkao4PCoqdo5MGWvgTdp6
jR0wB/vtTHGkp9mT4+2JcRaTKQ6YymIxqllIgrQcw1UKxOqoKaspLiyrrSwq
zCuqLshLYOE0CTkWHpkdEynDMOXsSNQgJbXK9Kr8QrMO/xDDQXus9at2X71z
//r+3VsXDox0N+AypWTOrFglHiNlY5EPVBkOPsFm4CIwnsMYe2pGerI9y65P
hDocyVadxmgwGI0kgmsxmYzgLYVZVXkuV2kVeBB3U1tNSXFmPBIbpY3TEoR8
jlTCSt+XY0K+hFLKRT0vxOCqv5IpxblZcdqyof3nDh7YvXPLpgVjPfmSGCmB
REZjAkNhs2WxNndmmtPuIBQkQasUoiY5LdXmTLXYTLbEpESzKBi0WoOBJEhe
LkH0aXnlhTW1Pn896G6tx1Nd7qrMzxFl8gjMZmNZThYhi5AaBSZNQKOiY2Mj
39cYJbEKur6+KJURU3zHLpw4smv18rG53eaoyL9KFFI5bDyugH3LzeX12hRG
RdCMjpWDUYhLsxpTUy1mWzzkHmiERgSHp2PRWCY+K7O4uqa2obEWzFhdAyRY
t6eiwJVKSiKlSEJGSpraQvIpOSatzaZA/zKLMJpRDNNRyuTMNJNUEVe178y+
tQsXjE8sa4832gv7V0wEfUt9akSknSkZAmJhjNnxQAmqaCUuwdQpScnOBFuS
3ahTa6CQ8ANzaqDF1IKKvOKqwoycopyU3PzSsrLamvr62gpvdTI9SyFBbAVl
ORlma2I8xQgmiUIlV6gToK10LKs1WjUEium9a7asW7Zp1cRIfd3qU3cf3H/4
8Os3/3WzVGOjKYdotnKlIzWpolxGUYC+mJQcmz0pLsEKBQiCwaDTqAVGycVn
pTlzsoEbKpoqKyrz8/NzSwsyixtqa2sqktUScDg2R7KzIFujpnmt2izXUKIB
Uyo/UKAfxrICxnAyOVOz58T2nevmLtp29bMHjx68/PHX33/+8Y+bBRTLY1qb
xV4SKsovzUxN0ypRrcSYZDDHW+0WvcliiRN0RoORR002YNLCkgpXTUYRRJSq
spLK0rwC0Lwqb3N9fb4OQyM4LdCNkZfKoBNWtYoyG8NPthbxyDlSFRWrEpQy
XdfkvvVr9l9/8fzmra+/+e1vP7/7429//vZg1Mzbs60JhopQZ1N2OsYVJyBo
LKnXxSfYUuNFQ7xJL/Am3sxx1sR0Z1ZRbkm1z1VdV1lcWumprygszUtJzKyo
b2qsKnHwMoUKU6CkKgYyWYQ0NlJKGxMJCpPJCRp/n9Ik5lgIktbWTZ559NmT
F1/9/Mt/v3v3x9//8bc//nz34qI7LlGblVRUUdlQWmzFME0UgRE0ZUg0JcQb
4mxmoxrcnUm0pmXm5lZWFlXVtHk97tq6uubW+vKifFdeeka+J9BaXVVgN7BY
+HkWSjnFofKI9z5UEKLVLLAiT4m2lNzUFAcrVeCxqHvm3qNvPn/9yw//+Puf
v/789rvPXzz/5NNDmUR6QYXJaEiyp2VZJApOj4JQ8WbYC73ZrDeIekJLG9Nz
i4qLPXXVjdWNjfXuxgZfoMnlbqiqKivPSy1qamypcleV5GWwDI1KpeD5cEWs
EjyTEeNESgUKoSRYeyIpRZRKVCxedfbi3Xufv/vim++//fLbH968+fHHN89d
8Z6GTJbWaQWd1m4kYkVepZRhRp1GVMN/vVaniddaM3PKSorc9a7m6rqGZm+r
r9XvqfC0NlSXVZU7U8tqe/0dXk9NbWZqkkXDMxSDh/+aJHw3gaBQBFNEYiqV
KEBwUaswQUzqnb585embh3eefPHd25/fvn377Wev/JzVJhCoyWxOZgkRy3NQ
EDOVlFmr1kIANIqUQWSc2bkVJaWu+iqfp7m1vbU14G2sr66qqfO7XHXF6bmV
7b3t9b76yvLS4rwsp5mhtAxK6QR5hDI2JjYmIlIyK1KijI2WzvkQJxBWbS1d
cumHV8/uffLN219/Cz8f7uvPtibTSkg4CXomN1/PiCJNyGJiZZRZA/oJgdgi
WGgqv6C4srS6qr6uxRsMdgbaW5vAxVdX1HjrqiE95ufWtre2dLa7ayuBzJs9
hVmJCfEWs6CSoxw55wMZIomMlsRGyBglG6OgVJTVYVv87Ksvnn3x/TfffPX5
iycPH169tJKjZJy2zBBprKp0ZCRoeJWUpBmTqDHqtHoNz0IQLykpryipr/J4
mxu7Q52h/t6+QJO3trigpKmxrKqpOrOwxhdsgnhT4650+QO1RdXF2fmVJWlA
+6hMReJyRXR07OwYhpCRLKWKway2pK6bn3315Tdvvv7im29evfrm01c7KIQV
M/L0KjLFlWimGAsnQQnUotboREjclEZJc0VVJZXu2gaPu62lt7tvsHukO+Bv
rneVlLuqmqtd7cUZeXWQKRoa3J5Kr7vFXecpb2poqauoKs/NTrXH60QJGiOP
lSk5UWt0qGJjcV2yULXtxNnbDz/+9ptPX79++M1P41ismJGcIUYgfH5mhsYO
mVcRKzGZNRqNqIHcQ9Ha4qqyWp+vtam+vbO/Z3BwYHwUqmisgRBb0ehvbGgs
LihvbfI1NdV7XG2+9oamJo+vuydQ46otKfTUFRQWWNUKuVJC6jVcUhalQs2C
wagr2Xb21vW7n3/3zY+3pz7/vDZKGWd3xCtiY1iCoPBoglQQUolcMJr1okji
IscwZdWVHn+go6O5s7evs6+rb3hsIBQEkDaXl7sDHU0tlflZVU3+BjdU1d7e
1ezz1FZ2DQy2t+a5Smrq6lqKShIFlSqG5lAlbTLZTYpYvcEkFm649PDu869/
fLJ/84MjcTEyTorjUp6xQKtmyyJxOcpgCo3JoFYbNSiFklx1bbW72R/sD0B8
8fe093R19fR1tTU3NoO3KvN3VFcVpefVBxrKXa6q1s6+tua2hrL24eHetsb6
Km+rN1BflpcsqqRwaXi0ghEN0VERbLwpLnfDk9t3P3t7ZMPmtdVRqsiI/4yI
Iow2mwnH5sjnKGKicFLJijqdyGMIKkX5+trK6uaOrsFQsLuzbSDUH/J1DgQ7
2+saa6vLctzdDbXVBVnVbS1VlbW1zZ0j3d6Qt7ptYnyk1VfrqvH4mj3lrqJU
EvKqHGyyjoyNiPgAg7zPFm69fPPzF1tXLnGL//fDv/zHX2IVrMZuBFEVPtSy
0TEx4UfDtXqWhOiLEqS3urIm0NfV39cbCrYPdHUPtnX0dgRDjR5/o6u4qCno
barOKmoMNFTW1dUHRvqaOupd1T0DQ22NjY0V7r4uAGxZsQ5RENFRWnNqjvy9
2ZEyi96YpK86fv+rY2uWzXU7lf/Pv/3bXxAta3amJWlotc6qksrkElhNrRay
J8FgBNvk9jS2dweHuvs7u4NQyXBfsLOzo729qaHRVZidX+9vbirMrWhrcbnd
ta39Pd4Ob02Ju6PT31pXAa3pDng8leWptBL7MELQsgVJUmpWFJtYW5yRufTS
s8MbNqwZanW+/+//8Z+IAbekZafGkWge8ldZhCpGiRI6A43KERIcdkNjoMXX
Gpjr7w709Q6NDfSOdsGHzT0DtYHGoorC/PZmf1V+UWsb1FDb2tPla2hsqK0b
6u1r7ayuauia11pT7y4vMeASaVSUQWEvjIxPjEVtOaXFVeWT1x5M79u1fcKn
+z//83/NoiSURow3ytX2CBkWowz/FSOjFjhMQuIKqc/b3OVr8feElgy2jPeE
QgN9I729LQHYhPqmllpXVq231VOTWxNsqKluag4s9LeFWutrgt2h3hZ3U3Xn
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
gr62dr/X0xRqdWVl1TSW5aenJSZ4g2OjgxNjo9Cxjr5BT2NbAHzxyFgr/ILL
XVfnyjVwmCpGJVHGp+ani1GzZ8fiH0pJrZa3t3SN7d06Ntybwip1VmHW7P/9
QQwF2xmtipHLpDKFp6zGVx+CFfO2dgZ8/o72gYH+4a5Af0tLY7O3trGj3V+Q
U+mqzM2I1yZ2hMYXzl04f8kEuJ2hnpr61pb+ocXzgTQgmTbUe2vzrFaFcrYS
Z3XG3PocNjI6ShYlITUGtbapb/XahUODfU4ZwmqZDyL+57/LcZ5gpXMiUJVc
KivOyS5va/MOdjT5wPH6goFgS0+HP9hX39oeaK2rqmlzVTrTSt0FOXH6JF/3
QO/g/JHB+WM9w6PttV5f88DY+PBQW7DZXe9tqvEUx+tFJCqC0qiN5vzsJOX7
78nk0ZGUWhQq+rbNDw6OVSRGUHJOMZv49/+IwihMLn9fKZMqEGV2dnZBfWvr
UKjF39TghzdB4OSO/m5/Z6e/qbamobPenZ5c3OwttJucrb1DQ+MLxucuWTAy
FwxuU5O3ZxwILNARaPLU1dY01aZYTTQZizA6S3xiVhYTMUsaMyeG5hkys2Xx
/P7ejgIuiifpObMV0llzYDtJtUyJKEFI03JyM0sbW/sh7nnrgaH8nR2hdl8g
EOgKhYuoB89Q5MyvbylLtqT5eoZGYEkXL104Pt7XWFvX4O8Bc7wg1NEG4b2i
tt6TbFFjdHT4MUARj3cyUR9IYiIghJAqq2diblewLiUG4XlOopxNx36AMTit
RaQKWXRERFp2TmpOVX1HS6PP19ja1tDU0tIfCgJZBbs62xprquvq//8Kzvwr
bSWO4n/Ba887r/ZglSQsSQiQQFjdW2pRqxRZJah1wYKAJCELgYTFiAuLIiq1
PX0/vL/1DX/CzNy5937OzPnWCqnUcamY+Bxl2zeD0f3Ln8no/m7InRcEvTsY
9h9u20KhKAL8ENI7K6QXns4yWMWDIbfFgOCYnXT5qE/V51G7ngmYp9MovH4D
7TS6/G5vwI4QDgJD47FkLH1ckABX1aqcyHPNWlvsaY1pMmoAQ4HgzvdS2QLH
hLbOtG5//Pj736eH8bDHlUryTfdmNLi/U4USV5ebrJjLhF1+COCHK+wPLnuc
hjnCgeP0sneZu/szKC2iwbUlr99DW0inGfRbf4CEERS3mOLfkmnm5FzqNEVZ
AmGmtkSl2ORFVZOrcm36P6pS/s6kctz39XVGvryd1quH0cujyrJC46rbHQ17
LQCSsiI1ylx+74t7GYdcFBVcXF7xe+ZmMbsZ9a0t+E5b/11H8GDU6Zp+qQpQ
MGLBnV7SBUThxM3xKJDmUZ6vtQVeZEWtxvPVishrdVXiZUUE661Uc0wkW/mx
E04Indve+PXp/nHcEwH+tbrD2+GN3ig3tFZb0WSpuBta/EibfaSL9m189ZHG
DzBhxrxLS3Ra7e278egOhpOk1RbwGo0Y5SItLicwKwsUjWaSu5mjfKnFF9lC
oSLVQBKATZE1rdFqShzHcsJJcmOPY9ORpHQ17D6+Pj0+D5o1oSjr/clw0NI6
AKBv2mJdUwqbKx8DxLwHA3U6cxC0QfNzhJWg/au+WK3osRC7Qa+DdsAItuCA
UYeDxDw2i8lis8U2dxNMfP+weM52qrmzplCRyuVmgwPHU1e1cpU//sGefItl
+fJBdDt30+9NBuPXxwf1XFZBFxv02jW2BXpYUxUbulJNf1kI+o046vWS8TRN
WWfNVoigfat0TFzFLXBgzUpAwCRhcGvg6fs8TtpMdgz5Go5EkgkmmTvIFnlJ
UKpFtlwC5HepS7LAF3lgyGI+ncqesScbobNbXX/oP7++THS5res3gOMVVqzf
di477TaoglxiJ7wUQlEM1IUsgxsRyIRjpMez6NuNUWbjjJVCUMJOUbMQDkEo
4aZJHwoTNuuX8M5WNMV8Y5hstiA2agrHcywvtbUrqcaXOKlyenZxlIhGTyu5
SPgYxNVw9Ovn5FVXL++AW3aUuty57LV0fdK7u+bZw0jYFQJebXWH9uImAwhJ
s52kKbc35McQaBYhUBxzBp1voTkIttqclM2FwlYrvLEV2Y4kmXhi/yR1kJeE
ZkMWRbZSl3WgtIuaVMnlioeZ+LcjNh/f+t7pXw+AT0x+Xk7LOKAvWVCvhv3+
8Ln/eCnw5cjOJ9uCw2zG6M8rvtn3HyDERFFemvTQpA1GcAfQotviXHn7Zmbe
aALJBWM4jFit21vbka/RdDa5l43tn5bzVVWsKkIZ8LbarFXqvFT6UT48TO8m
quXt0FHnqnX99Pt58vOqpY8mA72lAgjsj56exp2GIuTLmfUNT8BvNxHkOk0Y
3s98QJxBXzDoWwINah52kG7KbicCK38b3rwzzGOYHcYp1GghIpsbkfBW7JBh
Mqn9k7OjY4kFoQpioa5IAqtVlYvT80w2Fold5LfXmfpVQx+9jF/Gekt/GHfB
jX3odJu/xuOWfK2URcCCmwv+BRKc/Oaqb/afd0Y0uDgd9bVGOt0wYrdRlHmB
dm3N/DX7dsaAWu0QRtvnIPx/FTy7MA==
    "], {{0, 150.}, {133., 0}}, {0, 255},
    ColorFunction->GrayLevel,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "Grayscale", Interleaving -> None, 
    MetaInformation -> <|
     "Source" -> 
      "http://www-groups.dcs.st-and.ac.uk/~history/PictDisplay/Franklin_\
Benjamin.html", "URL" -> 
      "http://www.wolframcdn.com/waimage/hset028/8de/\
8def0f76b74eb331dbcf858b2f594a90_v002s.jpeg"|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{256.0070800781251, Automatic},
  ImageSizeRaw->{133., 150.},
  PlotRange->{{0, 133.}, {0, 150.}}]], "Output",
 CellChangeTimes->{3.922754365124024*^9, 3.922754429689323*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"52eb29d2-ea0a-4489-97bc-081ab513f1c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Benjamin Franklin\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Person\"", ",", "\"BenjaminFranklin::k2444\""}], "]"}], 
    "\"Entity[\\\"Person\\\", \\\"BenjaminFranklin::k2444\\\"]\"", 
    "\"person\""},
   "Entity"], "[", 
  TemplateBox[{"\"notable books\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Person\"", ",", "\"NotableBooks\""}], "]"}], 
    "\"EntityProperty[\\\"Person\\\", \\\"NotableBooks\\\"]\""},
   "EntityProperty"], "]"}]], "Code",
 CellChangeTimes->{{3.922754447449833*^9, 3.922754495979055*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"22a8f6cd-351e-4e6f-92e6-ac6546eb4131"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Poor Richard's Almanack\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Book\"", ",", "\"PoorRichardsAlmanack\""}], "]"}], 
     "\"Entity[\\\"Book\\\", \\\"PoorRichardsAlmanack\\\"]\"", "\"book\""},
    "Entity"], ",", 
   TemplateBox[{"\"The Autobiography of Benjamin Franklin\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Book\"", ",", "\"AutobiographyOfBenjaminFranklin\""}], 
       "]"}], "\"Entity[\\\"Book\\\", \
\\\"AutobiographyOfBenjaminFranklin\\\"]\"", "\"book\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9227544769579897`*^9, 3.922754497234396*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"14b985cb-3e69-4f8a-9d60-a24c9a894af3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Poor Richard's Almanack\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Book\"", ",", "\"PoorRichardsAlmanack\""}], "]"}], 
    "\"Entity[\\\"Book\\\", \\\"PoorRichardsAlmanack\\\"]\"", "\"book\""},
   "Entity"], "[", "\"\<Dataset\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.9227545060027933`*^9, 3.9227545095314503`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"6644a4c7-0d23-446f-8dd9-d9a887fd1f56"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|EntityProperty["Book", "Author"] -> {
         Entity["Person", "BenjaminFranklin::k2444"]}, 
       EntityProperty["Book", "Awards"] -> Missing["NotAvailable"], 
       EntityProperty["Book", "EnglishPlaintext"] -> Missing["NotAvailable"], 
       EntityProperty["Book", "EntityClasses"] -> Missing["NotApplicable"], 
       EntityProperty["Book", "EntityTypeList"] -> {
         EntityType["Book"]}, EntityProperty["Book", "FirstPublished"] -> 
       DateObject[{1732, 12, 28}, "Day"], EntityProperty["Book", "Image"] -> 
       Missing["NotAvailable"], EntityProperty["Book", "Name"] -> 
       "Poor Richard's Almanack", EntityProperty["Book", "OriginalLanguage"] -> {
         Entity["Language", "English"]}, 
       EntityProperty["Book", "OriginalTitle"] -> Missing["NotAvailable"], 
       EntityProperty["Book", "Plaintext"] -> Missing["NotAvailable"], 
       EntityProperty["Book", "Publisher"] -> "Benjamin Franklin"|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 12, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 12], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 12, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 12], 
     "Path" -> {}, "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 12, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["\"author\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Author"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Person", "BenjaminFranklin::k2444"]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    Entity["Person", "BenjaminFranklin::k2444"]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["Book", "Author"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Author"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"awards\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Awards"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Awards"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"English plain text\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EnglishPlaintext"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EnglishPlaintext"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"entity classes\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EntityClasses"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EntityClasses"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"entity type list\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EntityTypeList"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    EntityType["Book"]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    EntityType["Book"]}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["Book", "EntityTypeList"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EntityTypeList"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"first publication date\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "FirstPublished"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 28 Dec 1732\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "FirstPublished"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"image\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Image"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Image"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"title\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Name"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Poor Richard's Almanack", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Name"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"original language\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "OriginalLanguage"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Language", "English"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Language", "English"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["Book", "OriginalLanguage"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "OriginalLanguage"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"original title\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "OriginalTitle"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "OriginalTitle"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"plain text\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Plaintext"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Plaintext"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"publisher\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Publisher"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Benjamin Franklin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Publisher"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{434., {226.41754150390625`, 233.58245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{434., {226.41754150390625`, 233.58245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.922754512652457*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"bce3e7fa-508b-42a2-99e6-00610a27da40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"The Autobiography of Benjamin Franklin\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Book\"", ",", "\"AutobiographyOfBenjaminFranklin\""}], "]"}],
     "\"Entity[\\\"Book\\\", \\\"AutobiographyOfBenjaminFranklin\\\"]\"", 
    "\"book\""},
   "Entity"], "[", "\"\<Dataset\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.9227545441528397`*^9, 3.922754548203096*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"f26cd521-d48a-4afe-8f61-78edff75fd52"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|EntityProperty["Book", "Author"] -> {
         Entity["Person", "BenjaminFranklin::k2444"]}, 
       EntityProperty["Book", "Awards"] -> Missing["NotAvailable"], 
       EntityProperty["Book", "EnglishPlaintext"] -> Missing["NotAvailable"], 
       EntityProperty["Book", "EntityClasses"] -> Missing["NotApplicable"], 
       EntityProperty["Book", "EntityTypeList"] -> {
         EntityType["Book"]}, EntityProperty["Book", "FirstPublished"] -> 
       DateObject[{1791}, "Year"], EntityProperty["Book", "Image"] -> 
       Image[CompressedData["
1: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
fLQfCQeBlg67VD4gsRQim58sxEMi48PaFdh2PtykZXxGtjefDOSTIVOcSCeC
BaFPyQ2JQp+VG8HLJTagcCG8vPgqLDedYzbmAtHKx7vN9JCVGdb5IZIbJ+Kk
mR3V04MiclS6j4iD+BRECjKGlfUgtVoZpyWgQjWBO4FGIveWUiisBFERpWbg
kA93AgckByR/eb1VXm2iunIdOaGZgBIwDjvRpiOxx1ph4MxiBDrRVQh39bX9
pubdv1v7rJMUjgdan6ze+eO1z11EXkzcdNfs/at01G0Igy3l90wFX3ZW3ZuO
BIzswMfndzQd/BsiTxS4vpGep3a++d3W2l/GV0JqYa6j9dfd7Q+tXXMSeTYX
9xNxfGHkhdbKfzDS40pqKLnibjzwt/GbnUSdH/E9Xlv2d59cPEC0xemBjWVv
fee9YzuIPC0ng8UwoZoX0VRSUpg7ECiC0AidgrlbyKuwb/ykJMSKcRFUGX+p
WGhRhxZuVtfqSayZqgm6+VCLJEkJYbxRXIMYdKVXWhFHRJxt3v+Lmh33f33F
TdT3Knf87qVHvrP2VYjIR9KR0YM7/3OWCRB56szi3s3Pf/vk7D4jc9jMLfid
v33qwf8tctOXTQYNacpR9/DHFxx5bsIoLLqanmg89GuJH9OyQ1qun8hjF47v
cNbeT9Qz/Pqokp6pKft+Yi1oy0cmB1/Z9PIf3rzeTMjy2SPlTz/4b9k7/XZu
Bt4CEESm0c41E7GJFBqykT2xL7eUuJOWaESZAIchSLMw6BSupSRLAYiS6IWp
iRDIA92HibXT/BBuBJ+0Y8iWDUXOABrZbDMt0AskHdKT/my4gyjzFVt/ePPD
EJHOaMJy28EXK3c+Mt73BrFOfXXF8eZLfyTxfQWuJ5cYPbTzB+xKnyrMrH3l
ajjwo8aKe/q6HkVaK/DBnW9+58MztXp+0hSnK3f/pLPh0QvLu4k1x8c9RJ+c
7H9u2yt/Fmp/1ioczydHd7/1519fbcP7tzb8qrnuZ7Y5p0lTQ4GN21757uzg
G3AbpAiEg8zWS2ylIVTZuWqF2c/f3gHqSHlCsrVIJGi5BAg2TZItRW3eSvkJ
O6onh5HuTHbAYkJWwgcmbEYc2mqjFWlFitDWWpQVcEsH6qnFeHTGJ0bB6oNK
st8SFhV2gV0JWoUj+cRRPX0mkxjJJvrE5JjCjRaYYCHh1fheFSVVH88nPOlI
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
7Vvvu3Cq5da1Hk06roknBgNberpev3nVe2R6V9PBR3tdb5rS+Q/Otf3k7//l
BxcCWf7sE4/+2cH9j9YeejbHv1++5+EXn/quKJyXMxff2fwjPnbUFC91O1+u
2P0rIn7w9EP/fveb9wwHtkTu9Jrq3PpKGyFLQ6FNb77y18Q4ffpY2dbXvkfI
ZZ4ZUfKLT//uP9z4bPjNV7770YVKogwobDPdkMk4Ia/gEsBBih4Urh2gpxJR
DyqCEoOmmzs7W3Vg2/3dTS+8v9y26Zn/POx75+uPvGM9r/Z3v7Dxqf9PERYv
Hq9yNT6SZxZ6uza4mp4Idm64dbVv88a/rSn7XfX+R+J3jrz45PcKqffdrZtn
Rg498dAfctFpNX9UzR8/tOuXPsdGs3D8xML+Tc99r9+zjagXnI2PbdrwfUxf
zF7s8W9zt77+wM/+QMt9/MaGf3jh8e82Vz2TSZze+PR33zvZcWKxrnbfw2Vv
30+sL1sOPelq2PCbe/91fHWMT47mBPCxpV7vKwf3/AIf11b/u7qKhyO3Jk4d
rRASc889+p+E2Ok3N/z1SOiFfMKlF7co6TY1Rw+7DbZGiR1KfLadsC3yeqsS
6YTKMLnBz07VzPW++cXFpti1wFRw88npPZGvuhr2fX/tquPyyfJcYvzy6epg
+xPxm30n5vdcOlEzM7jtxse+c0drr38cPDZ96PbVwcXJivjKXGfTS19+FHr/
dEMyPIR4zzDjnqYnAaktHl2e23H5dCtW84MztSeW9kduj3nbN6zdGmqp/50t
Xzq/3JJOHFmY2P/pe52BjpfWrg02Hnzg7df+BqHR37XR73xWCM8c3PHT6NdD
F5Zr+gMvdrT+mmhzemFqanBzbfn9DQfv6/e+WL3vPnfLE33e547N7jqw42eO
2sdHAq8O+R+//fE+aC7oDsht2hKQalRj1WayVvh6R2FlvxSuya9Vy9F6KdZW
iHhQfaSYR2N9EFlEGMqsdtDmhJgX0im75q9897sXj75rZadpJc0vIE8SccnM
HYaeItopmZ+zxWUjd5Qop/Tsoi3N2/KMDEGdHCDKfJ4dQMrVMmNIaLY4Y4Fj
a/PIosQ+qiCF6vMSSLhx2BSn8CqjMImsqOfHiA6aPW2ItIggAUp8H9GmUdGI
PvPhuT2XL+4h5ric6RX5IaIv2vIsUeaIOg/ZAqJu5PFZs3l2CFnUFvuKZLuj
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
3IUQ2V7wHyIfPrG44+yx/cfmdnz5kePGVdfx+Z24fu9k1cnFsvjt0S8vdy/P
VXx4pvXC8Xqiv3dioRxS4tKp2s/ed4CWz46+OdH36rVPnFfOV319te3TSzXZ
5BAXDvX5njyx8M6RmW1GfuH8cvmA/4XB0Mt8YvLM8Yr3z1cfmdtxZLb8xHwl
ODwFSjt86siO65+4AIWSG4qvO1e+dojCmK3MGdLU0vQrfNxriMNKtk/L9UqC
z8jRkmrmvGauS023W9kOK9NmpZuhuGWmivb3MpVa4iBw4E/+mDv9s8TZ3wif
vqqGq0nWRwr9uViXnR6w+X56cwrTA8VNIL2TI+Xbvzcz9OZE7xv+9ie7Wh/F
7EKdz+1/++93bv7bC0frzh6uPbTzvoM77j06uZ9ZGX/r5e8E2p87tPOeXteG
+v331+y7d9cb33M3/66j7oHJ/lc3Pf+HC2NbUA5CrqdOzu3asfmvMtGJQe/G
yr33vvjEH473bnnlmT911D385oa/rNz968byR3/5o39xdqnCyB1+7Nf/y8tP
/mn1nvvZ1f73T1f81Z98a/+2H545fBDC574ffOvdTd9ur78nFfHSPeG0X0t3
yal2RQAHc6h8k55uAg4m36IlG6VEtRwrNlczVYAiNvfttZm/+GTgP341f498
ezdhW9Voh5kESehSI16SHlEjfkgw8CUizglrvetf+aI3eyPXAytfdsdv9qxf
91+/0rHypa+QWIAQ/vpKV+TrAYU7nI5NcKvD1y47Erd649eDN6+03/zIya/2
pdb717/ovPWZg7npY+4E9MzM+rUu1MqvLrcS7eSdq57ozRAfG43c7EdS+vJK
e4FdvHbZ/+Gpto/PN88Mv5ZlBj97v/7ah+7TCwfvfO5mVnuWZ3adWii7drld
5efPH93/yYWq95d3rXxeb+XBbANG1qsKnfAEPetUUs2a0Ewy7XaaJkmFqdeY
2mLfdY3BVgtH/yI88+3Ph7+9evQX5p09JN6irLYRNkSSA1rYT1IjBKQ9PUYy
Y7S1Q0KMH1UF1OVZW5yjTECaJfKiXQBJmEZNJ9oJ/C+t4OKMxo9CLxAZfw7Q
3c7CiJUdoEwp22sXBkD5cE238SVU9l6iTBmZIaJMavlhUxorpMCWpy1pxszP
UPKgn6CdMPKIKfYRdYxKG2OZSJAt/USbpBlAGqF9IzrywDBRRohMm0YoKc3e
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
+kbxBiiQ51KnPT3S5eqKty7SuxQpCMgMkJnMITOOoNhvxigOYiQgRf1KjPbC
kQSW24faoa136OFONVxMGpE2JdpCuwpjDWq0CRFkJLwwPUkPx3WeHgorcHj1
xNefuqeHti6M7zh3rKq15qH2hkfmhrf5nE9Aificjy1Nvt3R8GD8dm/iTu+u
Ld8dDW2YHnx9duT14eCzC6Ovj/Y8X7Xnv6RjYwPeNyr33zc7+dp75/b6Ox/3
dzw11vtaw8H7HDW/qd33y/q9DzeV/W7Q/SJzq1sTBiTOZ2SCRTQocbIyXkon
BNqZSe8vEBxEaEV1gD/Qfch4jRqvpDebF3FAkoQ/lHAwonuURD9qnJroNZhe
PRZU1rq0sBcZwIj51KgH5UOMOKUYvX9QjNVL4SY16pKjXuCmJkIqNwDyrGUm
tfSsml6wxGVbOmMWThHjvSvnWz4824QLIp7SMktEP5tcG/7sUgtRTinCPJGO
U7POmfklNT0P9USUo2pm1hSP6vnzZ5frk4mhfHqskIa0P6xmFxEvC2PbzNzJ
c4v1Z+ZrPz3blF7vI4UpQAEDlzDSfaDrtDUoXbyPj6O325jFpvoib2xCWgAC
RryK7jYkKA42U2kzBy2mvIRDds0rRoNKgp77yxHECG2CxUjjJREwGZ8epzdt
0V3cOK2qhfWgFB1S4mNibJy53hv+IqhwR6LXB5Kr49GvhxK3RgvMYX59usAc
ycUPc6uTucS8KhyRuEUxuaBllyX+SD65aORPpiJTfHQ6y8ym49NGfrnAzYVv
9BjiaTF9gk8uacopXT6W52f52AhSh5GfA6MosCjNS7noKFGOE/Gwwo0a6UmM
MtWAk0XlEsrHWou80YkSCQRsrrHInGtKgYC5G7EKmhYSFXai3IqX2Yn9Vnyf
EdudWe0GCLT7KzlgckVWwPUrtF+0hzb+sUFKHmJdMLgHRKgU62NvBGp2/oO7
7qGOqt8++9D//dGZlvmh7Zue+3bZOz+s2ffzl5/6I0jOE3NljuqHn/vdv0Nc
dDb+pq3m18OBjeU7fli596dnjlTUlt/fXPUgJPaB3T9tqv7NzNjbcxPbm2oe
qCy/r635yUMHflW+557GmgdS8bE3NvzR0Zmt9Qd+sP+d/8Sv+2b6n9+28f9t
PfSPnoZfhpyPtFff521+YDjwlKvhJ92tP0lH2kjBm4vUF/eiG+jdqVwdyJIF
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
v/mZJx2b+Opy56fvNZ4++k6G77t1ve3S+X1ffFr/6ZXa9ZtdkNKnj+y++mHz
+2cqr37YcuOq69P3m9j1wWuftH35Se3nn1ZbytSNL5pSsd7YivfyhYqvPmn8
8ko9HwtJPD36SUc6VN6XWW9d+2x/4trB7Fojd/3g+me7+JsHUzcqold3xz7f
s/7JjhuXNjNf7Al/ul2N1XNfl+XuVLJf7ZDX3wUURpyioUQ2yeHX1egbRmKL
xTrE9UYp2g52lFsDQZrprP7Vm8/8ycG3f9Rc9itv4xPbNv7Fiw//m6n+V6H6
d27+yy0b/qK9/vFB36au1md73K/Wlj2w881/aK1+1FH7+GMP/rsjU+VvbPjr
THzp8MR+Z90TO9/8+8qye231VHPtr19+/j94nU/t3PJ3I/5NmnDypSf+w+6t
Pyrf+fPGykefeviPu50vX7nYtffde9oaH/n0ikNIzFXsuffKhc7NG/+mbNeP
ag/ef2DHT4ToeCHVn1hxPv7AP7t6sVIThl567F8eG9u2d9P3Fvs2P3H/v3CU
3+uq/MWLD/7v491P79/8p96GezY+/M/Ozr0u3Oo6sOW7Tbvueea+f3br4muI
DpLco8e2qetvqOuvW/EtduJNPd5iJBwk1WWwQTEMejB37b22j042fXLKufb5
8K2Pey6fbl0c3Xntiid2c+DSiZoPTrecOVr//pn2Cyeab1wdOLFY/cml7uPz
lRdPtp073vj55QD+15Lev/XFwPTwHvzvyvV+ol28cLJ+bnznras9R6b2n5qv
Sq0uzA7t+frjvvbG504sNNQceKzfvz3Q9dbo4J4+/6aTR6pzqeWaAw8PBbYD
H3wQXuuse6S94SEtN3Hx5LvOunvnR17TsxPIvR8uVwVbn4GVbfn79srftlU8
uH/zf1kaemvM+4IpTDoqf4hcHf6is273D6vf/Ym39hdypJYkkTR26LG37cQ2
O7HVjm9W117Rok491o5kaCZDGtOnsUNGasbgF0j+pMhAJhzNxeYldil6fTAX
m0vcHlm91suFJwvJpRy7kLgzFrk5qKaXlfQxPCILR2X+GB7JMYslUWnkTyaj
Y6s3QnruaI6dgdgk+kWJW5I5+kyif6Dlz6jZs8S4LGXOEusTrXA2xy8R+z0l
e0IUljHaynktcwbvzIVDidUuI0vP2QtcsNgvSreh2PXWPDhndgAFJb3eZwiz
6bVe7nZ3NuIX1l0i48vF3VY6mI20FOJtydvlFldNN+oj71jMdmRI6g+xN4zI
66gXqJjIljbbA/5clFpD2XAv0HBW3T/oftZZ88CA56WqXfeE2p+f6X9ryPfq
3re/3+N5YcC30df+dH3F/U2VvxoJveZqflRJHwm6nhvr3eSoeyjQ+SyiAA96
2x/r9T2//92/GwpsbK765cL4273uFyb7NgddL3Q2PTY+8FbQs0FgDi9O73e1
Pdva8EhH62M9vg0B94vZ5KLAzOx+5/s97pdbax784NzOk0uvD/uf8zQ/SKzp
S6e3drfc5239eSbZunpj764t/3Y08Lv6/X83O/CSv+XXi0MbFoaeXxx+7vDI
8676H+x5418nbh7QhEYxcUBa34UUgapBuJ2Ii/ytF83opqJLhJQ1P0kOEW4A
UktjeuREEJr684sVfa7forgfm9i6PPVOd+Pvxv2vTvdtPbVwwNP8xGhw03jP
5jOHDx6d2tNR/8jSxK7mQw9kYrNT/Vvx5/TAW962p3vdL/V7NwCNHs9zNWX3
DPpfbjz0S4xdbU91O572tD5ZX/HLLuezDZUPpmKzI71vVuz72YG993o7nivf
9ZM3X/nO+RO1cLnHHvjX+Ky9276HyhtwPbhlw7/f8caf3/i45pPzezY8+q9e
f+b/PLX02tefVfz0b7/1zst/vOWFf99Uds++zX+1/82/3vjIv936/B9XbPle
T+vDHQd/GL5aFf5in8LWajHU1h061DezXY8gP7wKEOSVDRrI7bqPntYxQTns
Ihkoym4NCoLvo3cegdxmF2RmmmSXxdiCkjwus8eIeIFIF83sGZU/QeT3mNsT
/Dpo8MVc/DAeid0YxYWVO6unTxH5Qjo2h5DJs4eF6Cy7OpFNLBDpHEJG5pdF
7piSPcVF5zBm2KWCsBy+PcZFFgzxXIZdvHLRgSdk4vN8eAIsIs9OqpnZXGL0
q8vN3J2e2HWvnpqPfuVPrgXSsZ5Ts29fvVB7+5OOKyerrl1quX7JcecjN8bP
z9StfNR684ODs70P5iL1Gt2tBdHaC39AngQORnQTSWxWVjcq4VZ5nf4mkhpr
hXwj6e58pLUQ61SYQD7Wk10fPDOz5/Kx+knvtvnevcNd70wEdrjqn1saO3By
tmZ+aF+f643P3/NdONLc27npk3Oeqd6dkz07jPSFtS9G8bQvLvkXx8qvXvIu
TRx4b7n1/ZOO+ZF9h8fLMb5/0nl06tBH59wn52vPHW+5fN599cPAx+91Xzja
dm6p5fRifXJ1od+95dRcDZHPLM/uvXElOD+445MLdXlmYml4F/v11Ln5yq/e
6zg2ueejs/VWfolb6+HX/FZ20s7OSfGxW1faSH6eHjalsKwtJNsss+AYu9XI
TpLcZya265Q+bdbCr9nxN2D5lRol0qjFmtVok8E41ZhDjDgNLiBGuot3s87+
/129Z3AbW7Im+GJiInZ+bMTE7szOm2fmvenZ97pn2t++fbuv0/WSrtFteW9J
SZQhJZEURe8NCBIACYLeW9GTIkVSlERS3ntv6AAUCgXvXRWqCmczC+obbyci
o6JYBEDWhzyZX546J7+yjM+mehIrsteUpa/JPfaVMnd9ReEGRd7anKQvi9O/
Pbzr1zXybZACju757XBH4mDb8ZHOJOpV77Vzsq0//ENVyebC1FWHdv/y6rQs
79RXB3f+MjXho4ri9dnJn8MxMe79U/EfNql3pyetuH9DnZH82anjH6cc+WSw
Pak487tHN6ozj38GwzDiP1ddtqazOvZE7G97W7bOP1Z9+d7fVOSsP77nV+3q
7dknPn5+qzLiGz9+4B+zE//lTPdW/YuK57cKV77/N/WyL66c2R2g5QEmz2dI
4axpYcspGBSAAyQLoBDEcgz8gaf2C4YDnEEdpquw7SSN5TY+sDA1AW2GQCHN
SnWFmE7jq2rdU/XSYzV4o4fpf3YbyuSe1w8qqNeN84+rdC/r4Wt6dV/16HqJ
cb4FjpcmTpmX2p/fKZ9/onlxT6l/U3/3csHze2V3rxbeuZJ35XzawnONWdd+
cy771SPV7cu5b55UPrhRdOty1v0b+Tdmc14+rJgZT7k9l3dlOvni2SMPb2Y/
uJFVp1w91rv32oWEN4+Lm1V/uXMxp71q3eJjxcUzJ2bHTzy+ldXd/H2T5svx
/u0XRg6+vifLP/7rrqofJro2LT1IllrdZgtWKEgTBVNKxHSSMIlIp/VxECQB
BIAisKyGIoszSMU1gxMsEeye1yVYeoIGXMaA83JO3D4QdnYFrR1QREDi5lz9
IUcvmODFmTdp714PXIcrHlMH6+yL+EfgIk5UBkYcxlaoMsLeQdYz4HN084Eh
oNbAmQl3Bk6IcDbsHwy6e4TgINBIMTjqhWo9ciESHBECwMObQ+4O1tNNhCHW
jQuHWFeXCO/1D0a8/SEb7moB85hx44bgb/fb6wnbH7K34r5a+EBbo2CuJHZF
2JiNVTkDkSFZMCZFjMexppBwEGmEwrsk7TRh6rHNhbkduyfZesE4pitEd8DQ
EO34qN1vagzamoO2Ft7bB6HbCyFUmAg44O4G7HRzyNULxRQ+qedwFwzcgsvU
FnSehvMAFCO+ISgQpO2HvfAC1tvvd3bxgQGvvYPz9bHeXqhBwv5en6MdrkDp
QcJnvfYuuAJ35LU1AQhBVzsAEnC22qlmABnYdcjVxrm7pQ3ynWFPl9faGHK1
EBYQq3ca5T6rwsfAcCgLMcoAVSwysoipAKpOYk1H5oDztDAiDgFtAAQAB7CA
rgobuVjapCaKXRHr6YilVzSfxikmx0DQ2I79A02NnL3Va6oNOtro+dq7V/Le
PK6A483ZrKGuGI+57/61gv72PXOTJ2/NZcP1i+OJnPvM60eqkZ79t2ay7l/J
vzSV4jT2PL5V8uhmMfj/s/ul12fT3zxV3bmaA8e3z5RQQZDwJFzXvm64cj7j
zVOF1dC8+EJpWKg2LtaDUxmXNA9v5jipfjfdzyzWLD6XvX0sf3lfBuf615XU
G7X+jerxrTTtm3yXqSTklofsRZxd6lZtKiamIpHO8S8d43QJODVtSIBBAcki
rMfIELWAvinMgBucxlZalt6oAQ4hup14BnhbByQOaY6xwWfRRAL9bVU7Nq3+
+1b1/hOxH1QVb9274V/f3G97cbtJlrGmSbUv+8RX6fGfwa9459W5saLE/X+q
LtnSXRuXfvSTnrpDuclfHYt5T5b9Q29L/PG4D3JTV/a3xcuyv9v2l3+4e1np
ps9CsIU4ueHbv335oJZ621GQ9k18zG/nJnMIdy0/5Yu8k183KGLyT66qkq1T
FKwqz1sNROXA1v9xeOfP13/zH29M56fG/+rC2EESags45AFrLufICTJpLJMq
mtIF48mI8UR0tgGc4SccIDJEzadvDBlbsakarnrqiQ4KYusRrF3Sjv7+AIwX
Z7eHqXcb69xM+/0r5Y+v1d2ZqVx41DU3Vnz7YgVruxwwz7643QxXbp5XQg69
Ma2AK6/vtU31Z92brbw4nHNhKLe9KnZmtODBFXWzOhaqsAvjhWP9abdmFfeu
VPY0HXl8sybivdZZe3CkK6W/7VjIcX7+adNY78nmqj3djQeAhMN7786qe+rj
WypjR7uOX5suAFIKRW5PfWxX7T5Nybo7M8U9DbvuXcmaHt4leGoDlqKwM5+z
ZIqWdNGM0y/ElCLowRmOicZ4sDB1AHAI62MBBDj6KHXQWM2aallTPW9ujK59
EqXOSOASYUDGN4YLJoPThJvhHOOEnRO809FJEjjnPedCjrMeIFqh2Yj/AuEu
oYVmfZZR/BFfdkFwjoueKdxfEzhPgucJuU7YCyHPBCFXOM9ZwT8FV3yWIciP
+CthDh9nsxcIf5H3j0VCEyQyF3KNk+Cc6J/BzTiRy0EnUK9hwo8HXZ2ETOI+
9NAZKTifMbyt8TFdxNPPWetxkt9RKpiycT6KSovoM4ghHZ/j/BscfvKHIF0R
ZCpDRrAqzlTLWxANXDRoasVWY7Ze3jLQolzXVrmlrXIbDIoLZ5Knho5dOJNU
U75mcjDhdMvO6ZETdao1LZpNw92xcOXqdMZY72H968Y7l/Kr5KunBg/PTRyf
GU84N3xovH//q4fyc2eODHTtshpaR/ti7t/IvTZzamr4iN/Wf/1i2v1reXNT
KbOTJyGTQhh5eDvn+txJeA1k1Qc3ZHevFkHavTGX8eqx4u61zId30oxaxZN7
qdR82eLz4tePil7dLQrbh17dkr+8VbJwr1D7IEewqHBC25BFrPn8ciYxZIlU
FIcjP+Eg5c2YMKMGEFiDOkhrpG45jbjQBXvFtEvrAU4L1v6OqnXtVZtG2vZP
DyWN9yVcu5B7eTqjvX77rdm8nqZdj67JBttjitM/hePEQEJP0+66inXP7ikv
jqcWZa0Y64sb6NhdlPnnhso1bbUbHt4oKM76U1vtOtbd39+xrVrxdU7K78ry
P3fSvTknPyhMX6Eq/rE4Z1VexufZqR8Ono7pbtuRlPDL5GO/Kcn7OuvUJ/UV
G/vaY9prt8Zu/y/jA3vmzh2uLP1UUfRxddmXHdU/dmrWlmV+lHfsd8d3/WNR
4q9z4n822bWOuKpDhnzWkCnQ6QJ1EocGdUQ0HIYyU5BIVFi/j9PvBhw4uiqo
V0Pi8OmqA1SdRKJwIpqFdGloxp4GnlHwUuKZIv4LnGsyYD2LS9qCM7wLrpz3
GAdI5BrhL7P2s8QH/nyF+Gd5L66NIeGrYfdZ0Q9D4Bq6PTsd9oyF4dMiM4QD
fx4S/bjGQ/RNca6zML5I+AZU2YS9TbjrnO8C55kQ2fNi4FzYOxn2XCThmxH/
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
v7Y+S/S9PUpMicQMjCIOQAALU3t8C1udb+XAq6WdqvWsqTFkasLFivbTz28V
3pnLefuwCkb9/cuKBuWOc4OZirwfJvqODbTHXDufVadcu3P9fx7uiSvJ/rKh
clODegO92NbVtEtZ+E1lyWoosdUlK6vkq4uzPrx9Kev5vbKC9D+rS1flpb5f
q/zOuFSblfTL4sw/VMlXKIs+7Kxfe3U68eDO/wJFtCLns+LUPxckfXB/Lv/a
ZJqq8Bt14crspPcLTv7x8I5/OLLzH8c79z++XCBP/bAq70tZyh9kKb8ca9tw
aTSmIOnnJad+2SBfMTu8V13w++z4v0uK+T+Pbvt3Z9pWjbeualf8MXHHvy9L
/r9ND3eFlmKjM7QQHAR6H7EcBJdwL8ghSAZ0VRFbW8BQz1u76OcV9qUmnEo1
j7gNw2HHedZ+Hp9x+64T7jYJXsKJo8Bc0DbBLHSTyE3CXUMjtwh/zWkchgQa
8c3gJK1wjYTnCDtjpXrC7gkxMO1mhnBzFjfjx4nfCcKfw7YGQYwGeIWVZnFd
k6IdYss0lGwePRCzueUn1bOjJ0gAwgVKEZnf1oHH4nyIrVeabG8kzg4o/N06
CBdthucyl7aKuLuCxloohyUpH7VvWeFelNleFnJUcXDpCITHwOJuiAwAAowI
AIHV7fIu5YtW3JSHtTbVFDb3Zx95r7lsq6Zgo+zU93mJK2tlO2+dV3jp6am+
9O7aAy0Vu8H6m46c6Uy8O6Mc60mZ6s96+6B9tDNloOXE0xv13bVxPXWH5s7k
XxzIGmyJf36rqqly+yPg2JfL6so2XxrP1j5r7qjZcXki7dntMhh9PvPgub4E
yDumN50vb1XenMx/Olc+3LD/xnhG0DAA1H1u9BhgFTB1sECrTI28HcURor3N
wYLG6hBTBxa2NENwiDhwA9HD2eNwYn1bRhxtc0Pbrw7vBI7kmS+3Pj8lQNKk
94e1uyKGPYTey+t2QvXNLW/3afMhkEKkhZIKCmr7m2Zlxpetiu3q3HXDzSe6
NQfGupJ66vffvlg0O5ZaU/J9YdJHwCLUeatTD/4mO/6DjKPvl6Z+9eKGuujk
56VpX+/84W9PHXyvLP2btLg/gKUfeu/S6Mkm5drc4+/fms5Oivl5cuwvqgpW
Zif89u7FjPQjPy9K+d21icS0w79Q53+VduhXGUd+m7Tn54Un/lx44oNTsb8o
PfXncz2xt6aTg+b2IBNtdI9SyJKOQzVkAWAUxNvEmqsEe73oaABMBFuj5Y2s
pui9q2N7NAW/40zVxcn/lLznP7TI3ys58XdT7Z/an+2M3rs0A7M9Qu8ilhiB
2uHXygLaMoDLq1UTe3eAAi49BPkOSCPxTxHPmOAasGlrTQuVJNTP2loghaEE
AxahjcTdQ3x9UIqyTAtkN8i51BMZ/UwO2VD3qNixUMVbWjlzk4/S4DN0pgFK
NvNLVNxwLyuBGnng7zJqOILrupYUfr3Gvawxv66yL9TB0aNrcurqXfqGqJyW
6O4MWhskIeB3GrhuXRnxNQNtiMqlwVES6gWrWHiQtPw4hX6ZCReZV2lvbsbN
34nTPTjy+tpm96udIrVbNOzktFvY5c1h3dYIvTO4uNGzUBIxV0syf9JGA+DS
dAtv7ZF2Qp0OWts4ZxvOF9lqsMufSRUyVjreFoUMKt5UhSK2phrgorju2lwX
AXfF5ehQm9RKExfNoq0REn3QqBItGjhGrKh5B+mJuGpRwsldBfyQBSbsrYs4
qlG42dNKggO8owvyI2dvwwZ93p6QtZlzNAetdYK7BXXWzGrUMXTWSyKk2Jia
+KqDjAzXlEoK1KKrIuKuJB41ZysHvo27em1FxFnIMqlh0wl8sGuAG98ECAjU
Vl6/RTRsC+s2e5eKOVpBbLVQYoToevgGJTGL7pC5G6DgbF2Q3wOWep+p2m9B
nTgIPpIcQAOQT/yW4S1AQXE2D5+CSUQUqxIINaxR2gLJ1AQZqYWCtRq8FI6i
DYsF3IBvl8RZnNUAAjbwt8HobsW9sQ5snw7FbNDWIj1kx2lM3Ozvqgk5qziX
mnWqUHvapYKbjTa9Yc0y3l4alR5mbSVBqDptMq8hmzPne3QpAcPJoPEEaz4e
pA9gYJRGRHRaMqzfCMbpNqBeNl2CIrMGFS6hZ1qDBqCUA8QzIdkYcY+Irn74
x3CZt60tunFJQJGL03CUTnqJY4A1duKaQ0sfa+kNmtA4y5DgGAxZW0Lmes6C
OjKsuUlSIWwB9w4wqKfDWSVhHVMN+Dy8BtgR9kyw9wDRYu1duF3X2R5ytYVc
LQFbHfhk0F7LOmsllWc1lJlgWH9h6aGSlH9RwBrqDjC3roA1y1Hm2IDLgUJM
og+KTfNhTBPSHPVPOCAI2vWml4dCdBZvKeWMSggRAX2LX3f67U3Nq6uahVuN
i/dadI/ajC86qKfN2gcaiN7Mm0b98xrT2ybDyzo4oV/Va5/iRfN8q2W5A/ik
w9DrMPTbqT4HNeik++z6dquu0U61Oul2h6HNzXQCY/SaO1y4OAQncn22jiCU
9rjH7QzvGQZnCFja/eY2hMLVEzXODdyyH9WpXH3R7vq8o5e19ADrRrEJWzf2
TcX+/B1SK4xW4u6IoIhMK2qkgstZZGFjNrFnhekE4NLR+CBQ4BJbJBDWggUM
p4KGTK8umzWWhYzVECp1D1QFCR8o01dqcv6izPy+LG2lMvPb4pMr8hL+WHTy
w+L0T7OS3odjTvIfM0+8B8eTh3+ZlfiH7MQ/FqZ/oihYpSn7S1PVtvbGvT2t
cf3tcb0tMZ31O1o0W+uU65WFq0tzvirJ+iI/9SNZ7uflhV+qSr5RFH2jKlkN
76pRbKgpX6vK+0Ke9efSjA+VuSsq8j9X5H+mLPiyouhr4Ki1pd+DQfbp0mwd
aNwz0ho73nZgpv/YbH/83MDRucG4C72x0z17L/TGzA0evD+dPNO37+7E4Vtn
9t4c2Xjn7FpiLQwsAw4H/i0Okj+sAxx82lwYFz5dYYiWoxgKg4JHi/dyH82d
enI548bE8fN9sedO7xtt3TbUtHnydOzZnoMDbXsme4+MdsQMt+090xnbXbul
v3V3R+3m9rrNrdWb6yrWquXfK4tXleR9XZT5pSxrZXHa18WpK4tOrcpP/rrg
5FeFqd/gYoaUz8DyT30Olnfqi9yUL/NOfVNwamURvCDxM7CSk1+CFSZ/DhlZ
lvoVHAuTVhQkfgzfiCrjm7rCH1vkG9uVm5pK1zbK1jSUfF9b9HVF9qfl6X9S
ZXysyf28Ovfz4oRfq1LeK4r/WXH83zYX/tw3n0qYNGnuBedmRf12Qb9F0G/i
dRvBLC/SeKbMqy3w60t4q9pvUASMFSg55Gkjvg7R2SptnGwMmurApBY9g7x9
gPjGCFBBMN8oVqYeSeTXBz+OiNKWIsJOEe4cNsDxTArAP53niftCxDEdcUHx
BefTxHMOW/t6JiM+rFV5J9iFiGeWeGYIHmeJF44XiBtef454p5FnOsbD1mHO
NIAyNJZBnB+zDEIoA+4HoSnEdPioJre23qtrgOxvflrhflvrfqP2vC63P8uy
PD2Bu1n1xwTd/nc4UFsl2wxQgLkXM3iTLEgVeZbzJQ1uKNCgsG3wAgGjKj2U
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
N7S0iafWB5dX/X87qUgJ
         "], "Byte", ColorSpace -> "RGB", ImageResolution -> {72, 72}, 
         Interleaving -> True, 
         MetaInformation -> <|
          "Source" -> 
           "http://commons.wikimedia.org/wiki/File:Memoirs_of_Franklin.jpg", 
           "URL" -> 
           "http://www.wolframcdn.com/waimage/hset065/df5/\
df590a48cfddab14b811422da07453fe_v002s.jpg"|>], 
       EntityProperty["Book", "Name"] -> 
       "The Autobiography of Benjamin Franklin", 
       EntityProperty["Book", "OriginalLanguage"] -> {
         Entity["Language", "English"]}, 
       EntityProperty["Book", "OriginalTitle"] -> Missing["NotAvailable"], 
       EntityProperty["Book", "Plaintext"] -> Missing["NotAvailable"], 
       EntityProperty["Book", "Publisher"] -> Missing["NotAvailable"]|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 12, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 12], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 12, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 12], 
     "Path" -> {}, "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 12, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["\"author\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Author"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Person", "BenjaminFranklin::k2444"]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    Entity["Person", "BenjaminFranklin::k2444"]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["Book", "Author"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Author"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"awards\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Awards"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Awards"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"English plain text\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EnglishPlaintext"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EnglishPlaintext"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"entity classes\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EntityClasses"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EntityClasses"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"entity type list\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EntityTypeList"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    EntityType["Book"]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    EntityType["Book"]}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["Book", "EntityTypeList"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "EntityTypeList"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"first publication date\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "FirstPublished"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"1791\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "FirstPublished"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"image\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Image"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              RawBoxes[
               TemplateBox[{"\"  \"", 
                 GraphicsBox[
                  TagBox[
                   RasterBox[CompressedData["
1:eJwtemdzG9m23S37iz/6F7jKH/0PXOXyB9ctP79XLt975743MxqFkTTKEkWJ
YhBJMYGZyCCIDBKBABhFUUxKTGLOOQeEjuhuRBKp+3Twge6rOjzVgljYffZe
e621u/lf/3j198f/4U9/+lPxf4Lb3++//V9v3tyv+Nf/DP/xc2HxsyeFjx7+
S2HJoyeP3vz3P/4j/PCf4M9/gz/5a47xAaqLxbVsqIkLNnChRjbYyOFawNjT
hCmFm3KMNUfrUkQziCp4RstF5FxUnqOVuXA7CGsB0cDBRcqzhJwNazi6HTAd
LNPBMe05SsHSCj6q4Rg1vM6FFRyt5BgViKg5RpGj4Rf2iVEvTxpywaZcQMYF
60GoiSeUgNZLSZsQtbBUB0e1A0rLkm3pYDlHNXARJRfVSimzEDdIVzaOkgO6
iSUbc+FmEFGCiIpllCyjYWkVDMFH4N7G0c0c3cTRjSDSykcVINqao+tZpk+M
9Yi0hUflfKgRhOp5pB5gTWmkOYO1cpQGUDqe1guUAeBqgNTw4SZ4kGiwZXvx
1dFm1e5yFcfoBbqFCzflwi2AgaHVIKIBER2Iwl3FRxQZsiFL1HBULUdVcbSM
jzRnyJpsuIaL9otxn0CZBUwJQ3PBOh6R8VgLINQsrgSEKosrRaYDLiHcIeC6
HNooxOQxv2Lq/ctxz7MRzz2OMvK0iqfUQkTDR3RCtINnDCCfc1U+dFTFUS2A
aubCjSDcwNONYqQF0A2AqhfiMOEeFtfzmBKmGoQaANLAo0qJsoqUWWRMPA2/
Wc/T7VxYmyPUubAcnk6IaaSEUbqySwlbvhawrJSco+UgqmJhKSNaEGmHuxBv
FxLtQlQnwkVrREojMiqRUYgRhcC0sYxTYDo5GBpV8mgrBwuNtvCEjidtItXF
Uw5Ad7GUhaM7WFoLoro8Zmhllm4FETkPE0sbYBQ2quRiCjbSlqNbuZgKxGC2
O/iklU9YQMzERw1CRA9g7cJqgdLwtFqAWWIUGYhhwpBD1ByiAIgcoHKAKwCh
ZXFDBjFnMGcu3J0Lu7OUJU12pDBLNmzOMu3ZqC6GKxJhbTpuyUXtbNSeYYxc
3Jyl9TnamKOsbKQrG3Xkop1CsgtGl+J6IQbr3ir+KEoee7Q8jRlzhDGHqrhg
i4C1CngbT7RlELkYs/eZbx0saa3K34/WdAtfSoKHcpvyZ/zU0td1Y2+1fvz9
y415+dexsqnxYkn4+NF393JPvzpTebytcJj+7j9pN7T+5Zp0sFEDn1DkGFmG
qBEibWJELUL4MQrAyLmwhw87eNwIQgoBaWMDLTyqAKSBi3RebumvyaGtOUPw
xH6+q04S1uCB4jrcuT5TGjyRYefNMcxwvttysqnkM737q3XBfQN6qsUujPub
bclo99znyivcDqLt+T6ia1myXoioBVjrqOpHaIXI9AthF48Z2ICcCypBUCug
FiHcyUcd0pWXSzikVC9IuMWER4g4pZidpw1SEv6vio/pJNjXKZd0PcjHnFLa
JyU9kArERJd01cvF7FLOAeImPmYCjF6M6MWo9kevqcTYvydcitg5Qsdhzblg
XcZfDxCVgJnzAKO7QMQCouYMrcuGOwBtBWE7CMPdxMKc0Joc7KaoEdC2HGPP
0EaOscN7ExibELEItB42eJZpg3jj4xZYOzFq4SP5duNo2HGw3KpcuDWNypP+
uuj528RleSpQm0MUPGHkw/B0Lo7pZMNOjrIKlEOC38nYQQwmwQsSNiHVKXF2
KePkr5zg2sWnYFq6eaZLyC8Tz6hyFOxBeMwOLtIBonou0g4bgY9C5MNOVwpR
GLolet52FVBch5Q5QsuRBp6y85QbxgV0N2C6uXAfT/sEulegu8SoMxJyT4+V
oWcde2sti9Ovdtcb9zaa1+ZqZyaK9lYr+WsLCxkAkgndzobhDdiFqDUfN6rh
Yxo+qs0TTkwpRFoEphWSTBamN+KErCLFfGK0Fy4p3s/HevioT8h/0sdHvDzj
hbfBR9xJovtoXZ4gbOSl6fxAhl5oz/bkF/tq/2EHfq7iEnoOUi7s4jyh2fmo
VYhbOFiUuEGI68W4VmCUHFkH6Fo+z2aNLA5Du2BcIdojxHsB4+UoN7wQIcsl
vELcxcedIOoCMS+8HyHhhqiTEp1S0iEkjcKVWUq7paxHynwQkx4QMUJ2EuAe
0+b3eIeYMIGojYe1jpkgpwGqLY1W5Mh3HFUHqAYWMUL8sDA5Sa907ZMS/VLU
K8GzwwsoK/DgiR7pqk9KDUrpQfEK3owDxhWjxhSuTFEK/tospOBteKRUt3TV
KcTMQtQkJaxS3CLEII0YJXjbDNQ4tZQ0wlpDrWSZZhZKGFRAyF20OUM5qYAb
PesMHpnjqD2OdeFn+iuyO453X4V7I5gPOXVE0J4o4bym3eSlIRIyp2hXNtFz
He+J0b446Q2e6kKnmhhugSuKwN2cimpTEX0MtSZIUy5hCYd0UZjhqw7ItywU
UKohF1RJtDcZem9qe9zR9ri3s8yivTXaXzQ5Uj4+WDrS/1avuGNUPRry1Wta
/1iYbvWfuLy2p27zo6nRJof56fjHltaGm277W1nlT4Oeis/DDR5bYaf+mbz2
p2yqf3+7rdv+2Ot4cnFs93Q+07XeYEJKyKgc08KSsuT5uxymTvo71r9W735v
3PneuD5ZerDUNDVcvLeq3JhrW59Tby12HG11LU2piIATO7cfbeiONjTr31tX
vjevLig3lzWHW5b5rw0rMy1jA6/nvtRuLyq/jZRvLNfRaOfowKvx928Wp+um
x6rH+l8jh3UQbzxUn3B98uJdOlSfRqCYavKL6JDCxkzIRJ1opUSvdDUgpd5L
qSEhOQCxBCkLxPOtLaU8Urpb4nrEjBt2t5R1SqxLynSKaauUtvJXRinTlWKM
IGWVsj4p2y1cW0WosGmTkNCxlBJQLRwpS5y1QAeSRhRXQWUa1WWClusLUw7x
ZFDPddB9FXQngu4U0ZOmBrLM+0zYc4270mFvlvGkKe8V1XVFQoXqviJdqXB+
ZZnuXNSbpl1XBJQtbyZqS4e7MpQtRXZkKVMuoubz+qWGTQ2I2sSZSoq4eNqZ
CDnmJ96O97z+4CmYGanss9wddDwadDzxWh4OOApmxxsn+itHe1/1dj7y2h8N
eV/5Ol/0uV588L5xme67TH9sLWjs7Xes2lsWzc35r/XDvhJF3V9h8j3mhzbN
TZvq1/qS/3mw0iymrHkTBV0WUQdCLULEyl/3Z5PvE2F3gvTRmA+7dJJ+B+F3
4BcuJjQQDgzGiNFwsJ8O+bALB436IrgvHOpGzrtorPfswEKGvJFwH3LuwS/d
RLDriumPUc4I6YmS7ijuYpAu/NyInLRfEXYhAekdGrl6jqhmZv6ML/4mxI15
WY85xJg7Q3s+D72eHC3/Mlzitf2xNqMc6n6zu9w+PlAy0lPk6Lg11vdyrP/5
yabq63DR5nzze8/zAfeLHudjq/aPj77XC1+rhr0vNxbqh3sKd5ZaPdaf0wys
sl1MG0BCIUAzAymUqOXImkDff0G+/llAmgFm4fEuAVJ3xJNmeq5JX5r2XufL
OnBN9bGRPljQa8KWIqxXhDmBGVKULc04UrQzFXElKdcV5UmS/eGgIU4YIyFn
DLOH/fokaQ37tRnGzMetLKNnGWgaddAa8VSTEK4/6Psfgr9aJI2AdPC0m4+6
uISLy/PYoJiAZrVfiA8K+Yse6dorJbukFER4p5RzSZxXYnsktg8uMdsjZQbF
ZD/EtnDdIV17RPibaROIa8WkHsTbQVwPlQvaBp6BzjAfGuA18b1GNtCeRY0Z
3JgLG1lovSgrz3gECqqGB4oIH+2HYwIkduJEdbLZfLjatLdSvzz7bvZL2eJU
9ep8486q4nhTdbqho8+72KiZi0Cj6BRiELqdfKSTZ0wAesKoTohDV6kCdJtA
NfHhOhYry4Y6WFSb9jdl/Q0AbRVQrYgYJTKvvFLcKSS6QbyHi/dJ1wORgDF4
rDvb0xxuyvfWW5dmq+ZnqnfW5Sc7Rv9h+8mONoF7pKxXunKLyU4Qy6sVH4WC
1f4jyVBQtIDWcGRjBq3kw+8AXswSJpHQg2Bb9qKBDbSCoIIPqSTcBEg7oB18
oo8Jdfd0Ppz/Klv6Wre10DzofRQ8MW8vNy/P1CzPVO9vtG3MKeH+ZfjV2GDh
5w+vPIbfj1fr+SvoVKFDVvFxaEvkANp+qBpkfQ72FFHLE5U8XprGoEGyA8wM
MMgk+gyqzmAtWUTNQ48U8YD44DX9wX/kXJ5qXZ5uPdwyrM024RfOg3XN0Zbu
aF11uKE43DSvL7cc72q2l9qmRiqHXSXokVnKDf5gPBc0KoDRCBFlfjgiZICo
E8J1AlnFY2UpzM6GXVzYAaAVpOBtGLOojiU6N6fq+m0Plr40jva+Get749/v
mhgonR4vn/30DvLzwmTDcO+rpZmmpdnG0Q/lEyOV+5vqqdHX2wu1q5MVY71P
vgwUfB58uvTtBYQWS7UJdLMAHSlRw2MVPPoWxgVoccRvZi4htfZBHyJEoRVx
8rSDo7uiIRNxYY5h3XGimwxYY7gbO7dcHEJlNIdObci5M3TmQi89mN97eeQK
HDnpoDu0r0EOVOSJzr8jD+ypAjtNyGENjAvzDJMM0EqAvBWxEgEtAsgrHn0F
JwuW7uYiXo6BNgNC2gN9Ect0inGXkIAA6xeuh/jrQS7Zf7GnOliX768p9lZV
kyOVPttjX+fTiffla9ON27N1WzMVoV04CVpZql2MG8SYES7oeOGMCYhqHq8E
oVIhVCJiRSJWyKMvebQgh1gyiIXFrDnCBsLQAzsF6EVJO3Sh0BACuh8wsLn6
+eiAGOvn4l0g0QVdKBd3ZGKdUB2yMWiGjVlSkyO1HK1jaY3A6AANbZiGhxpB
1rD4W4GoFLEKESmTsBIJLRaRIgl/LaAFbEifC7ZnA7psSM+ixhxmgk5YCFsE
0iLSsDc9IG9Q3SKEXNidwm1XkNBIuJuvCUMS017h6jSpv8aMacKcN3LQDdJm
OJz+mOzqOPwti5dyaBlAynmkVEDeCKFiES0T0NcAeQHnDoB2AKyDxfQcpge4
ESINkHoQNrCkDTAQoi4u4pASHuq0fWbkzdK3dwNdd7/0v4B24lPvo/35mo3J
+veOgvfO51tzTXzCx0WMIAKJWgbIdyxRzsGFVQCsCqDlbKiIR9/AWsOEA+Q5
i5k4wpLDjIlLJVyxc/lVAHpyczxgSAQ7r3DfFelNEK405YPEHqftyYgjybiT
dHeC7E4xvmy095rxXjG+XHIgTjjZuIeLW/i4Nm/86FqBqZYitTDtHF7NouUS
XckTrzjkGYc+47BnWVQBJ03m1GiT/23UXWCW/2Vnvv6j79lQ96uPvpI+R2G3
9Wm/q/Bk2+7rfLa/pe73PIaGZ/27ost439J+d2SgYny45GhX96Hnldt2d3q8
Aj1VfZ8o2Jgp+9D5u6f9r93a//eh85dhx9/OVt6Zm/73wfTvYqQ4G3oMsCcc
phHC1izujl56D1cMC58al7+1fP8km/vSuDDZMjMh21vV7yy3r8+p5r42rs23
zX2pW/uu2Pyumfvaujqvn/2m/DJeu79pXpvXTY7JZj+V7CzX7yxX7Sy+W58r
HnLdG/U+nxstWp8uXpss3Jh+GTsrFchiDn0KkIds0MYTcLayZ0jb97GX8+Pl
U0Pli58bJ0eq1mbk4wOlu0vaxa+N4/0ls59qxwaKRnpfTY9XT468G+kvOdqx
Tn+u73MXfP5Yub/WMeB8erjZPOi6d7LZ9KH79vJ0YUfzPw12/u41/Npjutln
/ilyWcPTVQCDOX/MhR5kQwoOV7GkNo3rxVjvxmTjqKu03/Z6xFve31X0ebB2
tKdyZqTpdMMx6HjzZah2YrCqx14w2ls+7H07Plg1/al52FcxPdr8abD6cs86
7H61/K16EP5Cd9HWnHzxS9nZZsvK55rNyfJcWJlAygBZxhOveewJjz7MhtQQ
2zxp5ciuHOGkTg3nm23Bg3b01Bg86vAftAcO9eSlDTk2nO9pLg90Jzuq/Y0W
/3H7ya7Sf9J+tNN2vK0429ef7bVeHLaufi8722lcn363vyQLHevW5gr31ytW
vpUuTTxjiSaeqgD4GwEvBOjjH6E7RMoh0l6B8nHhbo5x8slOJmg4WG/dXWkK
HukPNtq2lxvQM9PFvuZgrdl/1H62pz7ZlZ8fqM4OVDHScbytQi9N+KU+Stjx
y3b0xExc6tBT7flOC3KqjBIKIaWREmqeaOLQUpDnsecAeSBgD7OYDZoiOIAI
tCcvVVG3lOs92dKO974b9b0923Juz3UMOt/sLZmXvirHfW9HfWUfuosHu99M
vK8a6S073+lymZ6cbJnHB8u2FjXLk4oBR9FYX9H4QJFde2O4+/nmQqWU1gtx
KJSl/+hoHnvGhf4AoQcZXJPF2wFl4cI2IdYb3NWO+QqgMh6sq7YWW1an62Yn
yvfWVGe7HRvzTeuzNaszVdAnHO+qDrflm0sNZ7vatfnGzeWW3Y2mxZmq9fmW
vQ3l1rLs4qT5dK/hdLt5+7tsYfR1YKOUJ2sFpDIfHbZV6AFA/uBwbSakS6PG
PHfRrnjQfrnTjhx17q/qNmabT7c7thcVq9NNuyvajTn59nLr5mLLwZr8aAtK
SfP2QtPhmu775+aFydb9DfXWUuvSdMvOonZtRra/1rA8Xb03X38wV7P1rWTv
+6sc0chhkEtfCCjEGAx9J4fq+LAFElo+NNUJdVOCPpDpX/32dmH89flm6+la
8+fBFxMDBZ+GCrcXarbmagL7mtXpsu+fCs622+Ym3s6OV395X7w0XYmddqxM
1s6NVcyOFE4NP/ngvfN99IEQ0UlXGjHakMPfAOyFgDzmQ/f50B0e+Q2GhpQi
UdAnWEHYAqPncAdEuxjtkq68YtSVDTt+TFsfJW4sb70ynvwYxXbnh6ysO+9I
xRFJHPr3T4BPAtCd2qWcScy0c5GWDA4td10WLc8GX4roMwl5LCL3hdAtEPwl
H5qEOmUDBPRjJo60ZhArh/tyWP8nzwun5rcB29Mhx6tR79tP/e/GeotGvK8H
up6/dz71We869be6dHes6jsWzW/dxlvDrocfXQ97DDd8Hf827Lo9/eERRBGH
tbFILcCrAVLGB16J/idi6KEYvMsH4am1PNQ70sbDFbZBNyjFB/KPFJI9OJzW
j9phWyFnVv+x6eLAcLKtPdpq31vT7K4qdldbd1aat5fg3rGzYtxd0mzPtWxN
121MVW9MV+0tyI5X6lMhFYfLRKgaTAkgX4rEczH4TAw9FZGHQuj3LKoG/3ha
RXXlSPt1yLbxpep4ufVguYE4t5zuaC/2OiDagydWBnHFww7Sb6GCndiFEXZx
PGyP4V1RwkHhNjhoSNcOKWmS8iOAXkobxCtNLtzM4U34bhFzWhY9L0pevuCR
lyLyXMxX/G4aEimRf5wC/Qk8LEv3LU/UDNoejnQ/3/kuH+t5MzNa8975bLT7
5fexyq25hvfOh0ufaz64H/Z13pqbKJ7of97vvPvec39m+LkAbRWj5ymFAMdY
Rg1+PJaUEoadqYfTgz9PDfy08flGdP+BgD4DoT+40B0omoAy8owrQ3gOlpTr
020Hyyby2MVcOJB9s3/PfLlnQE+syJExuKdN4l3kpZk4NyQJO3osZwK6SNCI
neopvyWOdSFH6sBeSwIxYody8ljJnKvxw1ZkV4Yf1VKn1dRxBbFbnL189YNS
7ueCd1IBFUeaWKozGrCtTMpWvrWM9lbMjtctT8qGPM+HegoXpxtmJio/eJ58
7Hu+v942M1H2aejl7mrj2MCDpamSpamKT/3Pv4+UnGyo+7ruuk2/zo2VLIyW
fHTeXv1cMOG79a3/3tTQ7yOu/7vx5f6E81+Izd957BEXuschMOFNImMLbCqd
6lsDtsKZj7KLna5BiOGuZ8Pdr5a+ts2ONfRan310v/488Hb6Y8XUcPmI5+Xk
h+LVqeqVr+++vi+eGiwbcTxdHq8M7GqkVD8fgUD98fAqCndHjjQfLZaie7Jv
PT9vfX4UP3ogILd55A5AbmdDcthWadQe9dsTqIu6bCcv5dhBA7YrIw6a6CM5
XOcr1f4NGbLdQJ80kwcNwc2q8JEM26sgDqtDO9WXmw2XWy3BvZYkZszSpiyl
y1GaHK1iaUUu3JYmWwK7xeGTyvO1pyeLtxMnt3jkBhf6BYR+zSCNHKFl4bwf
6ZcSQ1JqQEy6pASEHBzcevMrNSBlh6XrISkznMdw2i1xkFLg7pQ4l8T3SuJH
SYDrff5zOPyyXVLGKqXM0pXxB9T1UqZDSqqkVJOUKOWx+yB0A4R+ZoM/XQff
ZtAWFrfPDpQMdxZ8dLzsN9/vt9/r77rvs97pNt302SCAn430F40Ploz2Fgy6
n/TY73ttd/pc9/rdD4Z7Ct67HvTZbr533Rvq/uOj99GY7+n0UNHCSNnap7er
n94sjLxY/fR6feLF0vCvzGGBgD/lQzfzoQN/SwVkaaQpR6pjfgV+1HKxVXO8
Un6x2XC+Kb/Ykp+uNh2vNh6sNOyuNG4tNm7N1G9ONq59q1+brFubrFmdqlud
bFyfbNz41rD+Tbb+rW5jsnb1S+XedN0xVJaF+t3Zio1vxVtfS9dHC1c+3KT3
ngoY7OgbAvILH/q32GlpJtTEkR0Cbc2Suiyh4hmdxJgkxi7FuiTGIkVtEkRO
wi1deaQrh3TtljJeKQsT68ivrEfKefOL80gpm3RlklImKWmQkjDbxny2Uzop
3i7F2iWmQcILIJMIoZsCcoMP/ZI4K2CRJhG6cVR/7ZdlArJcQMEG1bmQkiPU
HK7IYQoW17C4PunXz4wXHW4ovwy9XposW5oq/jL0cHtGNjVcCFts/mvRFa7P
EUoWb2aJNjasBGQrCP+YqdEqDn0LAi+E4AMxdE9EIIHfZgO/xk8fcmi1SGhY
rC3hf8uS1VJMJcGDR/WAVklRjRTTAkrDMx08YzlZl9F+Q+BQfr5Xi5zW7C0X
4Ef1R2tV/sO284PGJKGW4hox0iwlFFJSLURaAd0gxpqkWL0QLgbofQH5Ox/8
VQrdA/7fspc/J04fZIOVItHOocY0YlgcfjI/WLg8XLQyVnjwvWLtU+HGlyLi
QH2x2rwzVXm0JNueqwzsN7Mx2/FmEXZaRZxVRYJK6lJzud90sS07W6kk95vO
V+pOV+q2pl5i+7Lg9rvjhZf49gsu9JwP3uADN8XQXRG5zQV+SRxBbqnhUS2H
mnKY5Wy55mC25miubmey1L/WsDNduj1V6l9vulhtXB5/s/Ht3cJE6dx4yfG6
evJjyfx49fzEu+XPpfhB29Zs+f58xcbnF4G1mtVPhVvTxcuf7h4uvzxYfLky
fut84V72AmL7thC88w/F5AL/Gt2/zYWgUWzIoW2wuFLUKDAmgTZIUZNId0gR
kxQ3g/wbDYMQMfExu5RxX+zXTn9+ur5QvrVUtTTz+nS9RIzrxKRBjGvzqY40
SVdy6VohXTXn6BqWqRUjMiH8FiCPROwmPK8Q/F0I3WD9P5Fbf+VCBRxSyaLN
LKZm0fZsEE67Og5V87gWjkU5DGJMw+HwQg17MEMqQdwQxzrmPxV+GXp8udcC
qYOlW1lIX2EFwJp5rBEQrTmINLyeC8u4cDVLVuawYg5qJQphdp+HB0d+Y/1/
Jdd/yfoL2dA7gDYBrI3HFAJ0zphKxHUCphXxdh7T8piGxzU8oRMILR9WAQqO
Kjr8sO1opZw8beajei6shZkRwhqRaBaJOoDDiV4mEHIh3AKoOp6qAngpgEqN
PhHRvEkQQr9ygb+G5/8CfUvyrDiHNrJIG4fIeVzJo0oBz4fLhpTw7PBaxNQC
rhYIpRhW8rSSo5T5V3tJgxDVcvkQaoFUi4RcJBuE/JOEdxxeK+It+U+oJg6v
gMM1H4RD/VMRgxh7wF3+ygb+Ofjpz/xFQeqylMWac/mXuSp4RhgLXrCIKhOS
w4mMx+DNKHi0lQ01cDCllBzk31YrubAawgOQCkDAVLcCpBFgddBv5/A6DpMJ
8OB4C0/WwxkfoFUiUiFhzwByk/X/AQJ3sv7/czn+Z3BekAlU5JBmFlXxiIaH
lgmFobUAg7VW51AFi7Tm/3Yi1AiQejZUx6JQcWA1W1lSmX+zT8KBsY1DWwHa
yGN1AlnHkTKWkMHoHN7MwYswTEIVj5YD5HEmcCN2ADF2O335z/8f9Zi/Tg==

                    "], {{0, 70.}, {41., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> {72, 72}], 
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    MetaInformation -> <|
                    "Source" -> 
                    "http://commons.wikimedia.org/wiki/File:Memoirs_of_\
Franklin.jpg", "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset065/df5/\
df590a48cfddab14b811422da07453fe_v002s.jpg"|>], Selectable -> False], 
                  DefaultBaseStyle -> "ImageGraphics", 
                  ImageSizeRaw -> {41., 70.}, 
                  PlotRange -> {{0, 41.}, {0, 70.}}]}, "RowDefault"]], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"title\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Name"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["The Autobiography of Benjamin Franklin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Name"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"original language\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "OriginalLanguage"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Language", "English"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Language", "English"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["Book", "OriginalLanguage"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "OriginalLanguage"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"original title\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "OriginalTitle"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "OriginalTitle"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"plain text\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Plaintext"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Plaintext"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"publisher\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Publisher"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Book", "Publisher"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{602., {258.91754150390625`, 266.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{602., {258.91754150390625`, 266.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.922754541674224*^9, 3.922754550363523*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"f93c8d71-2b94-4594-a1f6-88b3b24ac1d1"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{360, Automatic}, {Automatic, 34}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification->1.25,
FrontEndVersion->"14.0 for Mac OS X x86 (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.603711768164369*^9, 
            3.60371176831959*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "14.0 for Mac OS X x86 (64-bit) (December 12, 2023)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"50fa627d-991f-41be-8608-d1d5e92b2b1e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 391, 9, 31, "Input",ExpressionUUID->"9b43d192-dd6e-497f-854f-c1f10f200994"],
Cell[952, 31, 401, 9, 42, "Input",ExpressionUUID->"45a88f7c-1e77-46be-82e6-8a940bd68fd1"],
Cell[1356, 42, 495, 10, 42, "Input",ExpressionUUID->"7e782338-c52a-4359-a35e-723be0ab5fc2"],
Cell[1854, 54, 270, 5, 31, "Input",ExpressionUUID->"73297194-ccf1-4487-9f8a-21d8feabc4de"],
Cell[2127, 61, 227, 3, 31, "Input",ExpressionUUID->"f83489c8-77d4-406e-a99b-85094e927cd3"],
Cell[2357, 66, 490, 10, 58, "Input",ExpressionUUID->"ead8427b-4f80-4883-a776-1b754933a2fa"],
Cell[2850, 78, 292, 5, 31, "Input",ExpressionUUID->"a8de99d3-e549-4f9a-a861-67ed8b038f82"],
Cell[3145, 85, 481, 11, 42, "Input",ExpressionUUID->"8bb471bb-6a1b-41f8-b8a1-99d6933ea8c2"],
Cell[3629, 98, 647, 14, 42, "Input",ExpressionUUID->"118a7e5d-7811-47ff-98d0-50fc01730b4d"],
Cell[4279, 114, 582, 12, 31, "Input",ExpressionUUID->"3ee91d8c-5e07-45d6-b50f-8e81ad1a34d0"],
Cell[4864, 128, 338, 7, 31, "Input",ExpressionUUID->"e1695f4b-7810-4822-9cec-e580db791095"],
Cell[5205, 137, 352, 9, 31, "Input",ExpressionUUID->"f05236e8-a45b-46f4-9e3f-1a35e51ca3e6"],
Cell[5560, 148, 252, 5, 31, "Input",ExpressionUUID->"c5384ef7-6a1a-42bb-aba8-81b7711a0d6d"],
Cell[5815, 155, 252, 5, 31, "Input",ExpressionUUID->"f7cc0e16-95c8-4aa9-997c-26b0287abd06"],
Cell[6070, 162, 315, 6, 31, "Input",ExpressionUUID->"60d9d17c-f7c8-4362-a0fa-57d98a057355"],
Cell[6388, 170, 185, 4, 31, "Input",ExpressionUUID->"544f31e9-35d5-4e2d-a6ed-7f72524f1b3e"],
Cell[6576, 176, 463, 9, 42, "Input",ExpressionUUID->"9cfb9db7-9ce4-4d2e-ab55-c8c95f0df846"],
Cell[7042, 187, 310, 7, 31, "Input",ExpressionUUID->"674c83a9-75e2-482e-a150-cf5371f1d3f8"],
Cell[7355, 196, 997, 21, 148, "Code",ExpressionUUID->"9e5fa0a7-93e1-4476-8d56-e045201aa03d"],
Cell[8355, 219, 256, 5, 43, "Code",ExpressionUUID->"eb039111-9022-4a6b-98e4-30f1f866332e"],
Cell[8614, 226, 212, 4, 43, "Code",ExpressionUUID->"087acf1b-85a5-49b6-9203-2ea3b888f60a"],
Cell[8829, 232, 608, 12, 96, "Code",ExpressionUUID->"0dd680d6-65ae-45cf-b0a0-4a5d97dcdca7"],
Cell[9440, 246, 426, 9, 43, "Code",ExpressionUUID->"459c29cf-0f53-4cc1-874b-766a528a185a"],
Cell[9869, 257, 992, 21, 148, "Code",ExpressionUUID->"d86d4892-64ec-4b66-88ec-ad4e80b44456"],
Cell[10864, 280, 277, 5, 43, "Code",ExpressionUUID->"fa458687-18df-4eb2-95da-8597810bc9b0"],
Cell[11144, 287, 395, 8, 42, "Input",ExpressionUUID->"d55fdaf7-da7d-4715-808f-62f864e544ba"],
Cell[11542, 297, 504, 12, 42, "Input",ExpressionUUID->"01378e79-7e27-441b-91d1-5d2ea24ddfb9"],
Cell[12049, 311, 313, 7, 43, "Code",ExpressionUUID->"248047f4-94fb-456b-aa81-74a6b934449c"],
Cell[12365, 320, 231, 3, 43, "Code",ExpressionUUID->"69deee70-01f2-474e-b8b1-f143e91bdc03"],
Cell[12599, 325, 1439, 30, 122, "Code",ExpressionUUID->"70e89fc4-f01f-4efc-90cd-ddfe7893de1c"],
Cell[14041, 357, 342, 8, 43, "Code",ExpressionUUID->"668c18fc-1778-4ef9-b1fb-7bacc8151d92"],
Cell[14386, 367, 517, 11, 70, "Code",ExpressionUUID->"1c042642-e083-4bf9-89b0-3fddc6bb49c4"],
Cell[14906, 380, 706, 16, 148, "Code",ExpressionUUID->"2cc31855-e89f-4723-8258-7ff57717dd60"],
Cell[15615, 398, 1514, 27, 160, "Code",ExpressionUUID->"0c46a444-40ac-46cb-b2c6-afa368219544"],
Cell[17132, 427, 414, 7, 43, "Code",ExpressionUUID->"91ed5489-8199-40a7-855b-6e6d9ecf40a7"],
Cell[17549, 436, 1119, 18, 54, "Code",ExpressionUUID->"9e1f33ca-d53f-4e85-be4b-af1e54885eba"],
Cell[18671, 456, 527, 11, 54, "Code",ExpressionUUID->"06a71b07-601e-435d-8bad-c51daf867575"],
Cell[19201, 469, 315, 6, 43, "Code",ExpressionUUID->"3747a101-a07e-4490-a8ff-76fd93f4a2e1"],
Cell[19519, 477, 301, 5, 43, "Code",ExpressionUUID->"8332d650-bc76-4c57-9091-f36f988a2d42"],
Cell[19823, 484, 211, 3, 43, "Code",ExpressionUUID->"0ad0761b-d1d6-44d6-8f36-33f4233c3c7b"],
Cell[20037, 489, 384, 7, 43, "Code",ExpressionUUID->"64c0ef4a-6082-4708-9346-23832b8ae7f1"],
Cell[20424, 498, 331, 6, 43, "Code",ExpressionUUID->"0c4bcbbc-f5ac-4830-80f1-11d3b8117be9"],
Cell[20758, 506, 455, 9, 70, "Code",ExpressionUUID->"2944e1f2-4887-4d24-87d4-292670171d75"],
Cell[21216, 517, 409, 9, 43, "Code",ExpressionUUID->"1b4378fc-39bd-48a4-8e85-f5b12154efb3"],
Cell[21628, 528, 840, 22, 96, "Code",ExpressionUUID->"6a632fdf-bc7c-4d93-808a-99fe45952ea7"],
Cell[22471, 552, 445, 10, 43, "Code",ExpressionUUID->"c7d5df4b-26d7-4b3b-bff0-bd1e26a92422"],
Cell[22919, 564, 493, 13, 43, "Code",ExpressionUUID->"a7c807b0-05ea-44fb-a238-14667369a172"],
Cell[23415, 579, 369, 8, 43, "Code",ExpressionUUID->"160fad4f-3e0c-42ea-a6b3-6a7c7e566442"],
Cell[CellGroupData[{
Cell[23809, 591, 246, 4, 43, "Code",ExpressionUUID->"e63c2a2d-5802-4247-884f-d5344dc0f611"],
Cell[24058, 597, 196, 2, 33, "Output",ExpressionUUID->"d908ee5b-fca1-4701-8461-4d517f10fede"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24291, 604, 263, 4, 43, "Code",ExpressionUUID->"6d9ab01a-2440-450d-ae4b-8757246de015"],
Cell[24557, 610, 4867, 97, 68, "Output",ExpressionUUID->"35165ea1-c092-4d2a-8916-db17acd21ae5"]
}, Open  ]],
Cell[29439, 710, 382, 8, 42, "Input",ExpressionUUID->"9386ad96-6169-4a95-a784-b1a2ec607907"],
Cell[CellGroupData[{
Cell[29846, 722, 500, 10, 42, "Input",ExpressionUUID->"f4ad3e9a-e879-40aa-8021-84796c28472f"],
Cell[30349, 734, 25381, 423, 373, "Output",ExpressionUUID->"52eb29d2-ea0a-4489-97bc-081ab513f1c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55767, 1162, 657, 14, 54, "Code",ExpressionUUID->"22a8f6cd-351e-4e6f-92e6-ac6546eb4131"],
Cell[56427, 1178, 729, 15, 45, "Output",ExpressionUUID->"14b985cb-3e69-4f8a-9d60-a24c9a894af3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57193, 1198, 445, 8, 54, "Code",ExpressionUUID->"6644a4c7-0d23-446f-8dd9-d9a887fd1f56"],
Cell[57641, 1208, 38578, 717, 474, "Output",ExpressionUUID->"bce3e7fa-508b-42a2-99e6-00610a27da40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96256, 1930, 485, 9, 54, "Code",ExpressionUUID->"f26cd521-d48a-4afe-8f61-78edff75fd52"],
Cell[96744, 1941, 92723, 1612, 540, "Output",ExpressionUUID->"f93c8d71-2b94-4594-a1f6-88b3b24ac1d1"]
}, Open  ]]
}
]
*)

