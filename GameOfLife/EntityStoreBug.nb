(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    297043,       5662]
NotebookOptionsPosition[    291365,       5558]
NotebookOutlinePosition[    291803,       5575]
CellTagsIndexPosition[    291760,       5572]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Scratchpad", "Subsection",
 CellChangeTimes->{{3.95565789493983*^9, 
  3.955657898406231*^9}},ExpressionUUID->"835d6e6e-89af-4d35-9e07-\
6f43d4d68ffe"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9556462291817293`*^9, 3.955646234572817*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"56cee6b1-7926-48f5-b842-d96c33f8c7ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  TagBox["\"\<LifeWiki Entity Store 2025\>\"",
   #& ,
   BoxID -> "ResourceTag-LifeWiki Entity Store 2025-Input",
   AutoDelete->True], "]"}]], "Input",
 CellChangeTimes->{{3.955645713207437*^9, 3.9556457132137938`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"d4a822e8-784a-4b76-8565-6547f05329a7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["EntityStore", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GameOfLife2025\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Entities: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Beehive\"", ",", "\"Blinker\"", ",", "\"Block\"", ",", 
                    "\"\[Ellipsis]\"", ",", "\"Period-35 glider gun\"", ",", 
                    "\"p12rpentominohassler-01\"", ",", 
                    "\"p12rpentominohassler-02\""}], "}"}], "SummaryItem"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\" (\"", "1396", "\")\""}, "RowDefault"], 
                    "SummaryItemAnnotation"]}]}, {
                    RowBox[{
                    TagBox["\"Properties: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Name\"", ",", "\"Year\"", ",", "\"Class\"", ",", 
                    "\"\[Ellipsis]\"", ",", "\"MatrixData\"", ",", 
                    "\"InitialWeight\"", ",", "\"Speed\""}], "}"}], 
                    "SummaryItem"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\" (\"", "9", "\")\""}, "RowDefault"], 
                    "SummaryItemAnnotation"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GameOfLife2025\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Entities: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Beehive\"", ",", "\"Blinker\"", ",", "\"Block\"", ",", 
                    "\"\[Ellipsis]\"", ",", "\"Period-35 glider gun\"", ",", 
                    "\"p12rpentominohassler-01\"", ",", 
                    "\"p12rpentominohassler-02\""}], "}"}], "SummaryItem"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\" (\"", "1396", "\")\""}, "RowDefault"], 
                    "SummaryItemAnnotation"]}]}, {
                    RowBox[{
                    TagBox["\"Properties: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Name\"", ",", "\"Year\"", ",", "\"Class\"", ",", 
                    "\"\[Ellipsis]\"", ",", "\"MatrixData\"", ",", 
                    "\"InitialWeight\"", ",", "\"Speed\""}], "}"}], 
                    "SummaryItem"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\" (\"", "9", "\")\""}, "RowDefault"], 
                    "SummaryItemAnnotation"]}]}, {
                    RowBox[{
                    TagBox["\"Entity classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"none\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Property classes: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"none\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[EntityStore, 21946880, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", EntityStore, 21946880, 
            9459809296710194456952249917347262959994710214287860450016, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("EntityStore[<1>]"& )],
  False,
  BoxID -> 9459809296710194456952249917347262959994710214287860450016,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.955645721999899*^9, 3.955645837645659*^9, 
  3.955646329250935*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"968e4707-27bc-40ea-bd73-8ed276c4b65c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityRegister", "[", 
  RowBox[{"ResourceData", "[", 
   TagBox["\"\<LifeWiki Entity Store 2025\>\"",
    #& ,
    BoxID -> "ResourceTag-LifeWiki Entity Store 2025-Input",
    AutoDelete->True], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.955646325141457*^9, 3.955646325146847*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"847a1c8d-eff0-41a4-8140-b8287bb5dc67"],

Cell[BoxData[
 TemplateBox[{
  "EntityRegister", "shadow", 
   "\"Types \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"\\\\\\\"GameOfLife2025\\\\\\\"\\\", \\\"}\\\"}]\\) in \
\\!\\(\\*TagBox[TemplateBox[List[RowBox[List[StyleBox[TagBox[\\\"EntityStore\\\
\", \\\"SummaryHead\\\"], \\\"NonInterpretableSummary\\\"], \
StyleBox[\\\"[\\\", \\\"NonInterpretableSummary\\\"], \
DynamicModuleBox[List[Set[Typeset`open$$, False], Set[Typeset`embedState$$, \
\\\"Ready\\\"]], \
TemplateBox[List[TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Type: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"GameOfLife2025\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Entities: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Beehive\\\\\\\"\\\", \\\
\",\\\", \\\"\\\\\\\"Blinker\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Block\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\[Ellipsis]\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Period-35 \
glider gun\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"p12rpentominohassler-01\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"p12rpentominohassler-02\\\\\\\"\\\"]], \\\"}\\\"]], \
\\\"SummaryItem\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\"\\\\\\\" (\\\\\\\"\\\", \\\"1396\\\", \
\\\"\\\\\\\")\\\\\\\"\\\"], \\\"RowDefault\\\"], \
\\\"SummaryItemAnnotation\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Properties: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Name\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"Year\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Class\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"\\\\[Ellipsis]\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"MatrixData\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"InitialWeight\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Speed\\\\\\\"\\\
\"]], \\\"}\\\"]], \\\"SummaryItem\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\"\\\\\\\" (\\\\\\\"\\\", \\\"9\\\", \
\\\"\\\\\\\")\\\\\\\"\\\"], \\\"RowDefault\\\"], \
\\\"SummaryItemAnnotation\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Type: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"GameOfLife2025\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Entities: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Beehive\\\\\\\"\\\", \\\
\",\\\", \\\"\\\\\\\"Blinker\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Block\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\[Ellipsis]\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Period-35 \
glider gun\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"p12rpentominohassler-01\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"p12rpentominohassler-02\\\\\\\"\\\"]], \\\"}\\\"]], \
\\\"SummaryItem\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\"\\\\\\\" (\\\\\\\"\\\", \\\"1396\\\", \
\\\"\\\\\\\")\\\\\\\"\\\"], \\\"RowDefault\\\"], \
\\\"SummaryItemAnnotation\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Properties: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Name\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"Year\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Class\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"\\\\[Ellipsis]\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"MatrixData\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"InitialWeight\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Speed\\\\\\\"\\\
\"]], \\\"}\\\"]], \\\"SummaryItem\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\"\\\\\\\" (\\\\\\\"\\\", \\\"9\\\", \
\\\"\\\\\\\")\\\\\\\"\\\"], \\\"RowDefault\\\"], \
\\\"SummaryItemAnnotation\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Entity \
classes: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\"none\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Property \
classes: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\"none\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[2]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], \
ButtonBox[DynamicBox[ToBoxes[If[Or[Less[$VersionNumber, 11.2`], \
UnsameQ[CurrentValue[\\\"RunningEvaluator\\\"], \\\"Local\\\"]], \
Style[\\\"This object cannot be used as input.\\\", \\\"SummaryEmbed\\\"], \
BoxForm`EmbedSummaryLabel[EntityStore, 21979040, \
Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], \
RuleDelayed[ButtonFunction, \
BoxForm`EmbedSummaryInterpretation[\\\"Choose\\\", EntityStore, 21979040, \
9459809296710194456952249917347262960013156958361686192160, EvaluationBox[], \
Dynamic[Typeset`embedState$$], StandardForm, \
ElisionsDump`embedSummaryBoxes]], Rule[DefaultBaseStyle, \
\\\"SummaryEmbedButton\\\"], Rule[ImageSize, Inherited], Rule[BaseStyle, \
List[\\\"DialogStyle\\\"]], Rule[Enabled, \
Dynamic[And[GreaterEqual[$VersionNumber, 11.2`], \
SameQ[CurrentValue[\\\"RunningEvaluator\\\"], \\\"Local\\\"], \
SameQ[Typeset`embedState$$, \\\"Ready\\\"]]]], Rule[Appearance, Inherited], \
Rule[Method, Inherited], Rule[Evaluator, Automatic]]], \\\"SummaryEmbedGrid\\\
\"], RuleDelayed[DynamicModuleValues, List[]]], StyleBox[\\\"]\\\", \
\\\"NonInterpretableSummary\\\"]]]], \\\"CopyTag\\\", Rule[DisplayFunction, \
Function[Slot[1]]], Rule[InterpretationFunction, \
Function[\\\"EntityStore[<1>]\\\"]]], False, Rule[Selectable, False], \
Rule[Editable, False], Rule[SelectWithContents, True], Rule[BoxID, \
9459809296710194456952249917347262960013156958361686192160]]\\) already \
exist. The existing ones will be shadowed.\"", 2, 79, 48, 
   27799880970347475460, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.9556573108717127`*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"50877c8f-107b-4466-b542-978cb832fc46"],

Cell[BoxData[
 RowBox[{"{", "\<\"GameOfLife2025\"\>", "}"}]], "Output",
 CellChangeTimes->{3.955646329981902*^9, 3.955657311096244*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"f5a43dae-67da-4358-8fee-e6921d1bc4b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapAt", "[", 
  RowBox[{"ArrayPlot", ",", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"EntityValue", "[", 
      RowBox[{
       RowBox[{"EntityClass", "[", 
        RowBox[{"\"\<GameOfLife2025\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Class\>\"", "->", "\"\<Oscillator\>\""}], ",", 
           RowBox[{"\"\<InitialWeight\>\"", "->", 
            RowBox[{"TakeSmallest", "[", "5", "]"}]}]}], "}"}]}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"\"\<Period\>\"", ",", "\"\<InitialWeight\>\"", 
         ",", "\"\<MatrixData\>\"", ",", "\"\<Year\>\""}], "}"}], 
       ",", "\"\<Dataset\>\""}], "]"}], ",", 
     RowBox[{"#InitialWeight", "&"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", 
     RowBox[{"Key", "[", "\"\<MatrixData\>\"", "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.955646131067718*^9, 3.955646131071892*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"1fc8077f-4058-484b-873f-d7d7d7ce0fd8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["GameOfLife2025", "Blinker"] -> <|
        "Period" -> 2, "InitialWeight" -> 3, "MatrixData" -> Graphics[
           Raster[{{0, 0, 0}}, {{0, 0}, {3, 1}}, {0, 1}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic}], "Year" -> 1969|>, 
       Entity["GameOfLife2025", "Beacon"] -> <|
        "Period" -> 2, "InitialWeight" -> 6, "MatrixData" -> Graphics[
           Raster[
           SparseArray[
            Automatic, {4, 4}, 1., {
             1, {{0, 2, 3, 4, 6}, {{3}, {4}, {4}, {1}, {1}, {2}}}, {0., 0., 
              0., 0., 0., 0.}}], {{0, 0}, {4, 4}}, {0, 1}], Frame -> 
           Automatic, FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic}], "Year" -> 1970|>, 
       Entity["GameOfLife2025", "Clock"] -> <|
        "Period" -> 2, "InitialWeight" -> 6, "MatrixData" -> Graphics[
           Raster[
           SparseArray[
            Automatic, {4, 4}, 1., {
             1, {{0, 1, 3, 5, 6}, {{2}, {2}, {4}, {1}, {3}, {3}}}, {0., 0., 
              0., 0., 0., 0.}}], {{0, 0}, {4, 4}}, {0, 1}], Frame -> 
           Automatic, FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic}], "Year" -> 1970|>, 
       Entity["GameOfLife2025", "Toad"] -> <|
        "Period" -> 2, "InitialWeight" -> 6, "MatrixData" -> Graphics[
           Raster[
           SparseArray[
            Automatic, {2, 4}, 1., {
             1, {{0, 3, 6}, {{1}, {2}, {3}, {2}, {3}, {4}}}, {0., 0., 0., 0., 
              0., 0.}}], {{0, 0}, {4, 2}}, {0, 1}], Frame -> Automatic, 
           FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic}], "Year" -> 1970|>, 
       Entity["GameOfLife2025", "Bipole"] -> <|
        "Period" -> 2, "InitialWeight" -> 8, "MatrixData" -> Graphics[
           Raster[
           SparseArray[
            Automatic, {5, 5}, 1., {
             1, {{0, 2, 4, 4, 6, 8}, {{4}, {5}, {3}, {5}, {1}, {3}, {1}, {
               2}}}, {0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {5, 5}}, {0,
             1}], Frame -> Automatic, FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic}], "Year" -> 1970|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "Period"} -> 
        1, {All, "InitialWeight"} -> 1, {All, "MatrixData"} -> 
        1, {All, "Year"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Period" -> TypeSystem`PackageScope`AtomShape[34], 
             "InitialWeight" -> TypeSystem`PackageScope`AtomShape[34], 
             "MatrixData" -> TypeSystem`PackageScope`AtomShape[60], "Year" -> 
             TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 4, {All}]]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["GameOfLife2025"]], 
       TypeSystem`Struct[{"Period", "InitialWeight", "MatrixData", "Year"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Graphics], 
         TypeSystem`Atom[Integer]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "Period"} -> 
        1, {All, "InitialWeight"} -> 1, {All, "MatrixData"} -> 
        1, {All, "Year"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Period" -> TypeSystem`PackageScope`AtomShape[34], 
             "InitialWeight" -> TypeSystem`PackageScope`AtomShape[34], 
             "MatrixData" -> TypeSystem`PackageScope`AtomShape[60], "Year" -> 
             TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 4, {All}]]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["GameOfLife2025"]], 
       TypeSystem`Struct[{"Period", "InitialWeight", "MatrixData", "Year"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Graphics], 
         TypeSystem`Atom[Integer]}], 5], "Path" -> {}, "DisplayedRowCount" -> 
     5, "DisplayedColumnCount" -> 4, "DataRowCount" -> 5, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Period", 
                  Style[
                  "Period", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Period"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Period"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["InitialWeight", 
                  Style[
                  "InitialWeight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "InitialWeight"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "InitialWeight"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MatrixData", 
                  Style[
                  "MatrixData", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MatrixData"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MatrixData"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Year", 
                  Style[
                  "Year", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Year"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Year"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Blinker\""], 
                  Style[
                   RawBoxes["\"Blinker\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["GameOfLife2025", "Blinker"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Blinker"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Blinker"]], 
                 Key["Period"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Blinker"]], 
                 Key["InitialWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[
                 RasterBox[{{0, 0, 0}}, {{0, 0}, {3, 1}}, {0, 1}], {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, Frame -> Automatic, 
                  FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Blinker"]], 
                 Key["MatrixData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1969"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Blinker"]], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Beacon\""], 
                  Style[
                   RawBoxes["\"Beacon\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["GameOfLife2025", "Beacon"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Beacon"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Beacon"]], 
                 Key["Period"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Beacon"]], 
                 Key["InitialWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {4, 4}, 1., {
                   1, {{0, 2, 3, 4, 6}, {{3}, {4}, {4}, {1}, {1}, {2}}}, {0., 
                    0., 0., 0., 0., 0.}}], {{0, 0}, {4, 4}}, {0, 1}], {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, Frame -> Automatic, 
                  FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Beacon"]], 
                 Key["MatrixData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1970"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Beacon"]], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Clock\""], 
                  Style[
                   RawBoxes["\"Clock\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["GameOfLife2025", "Clock"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Clock"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Clock"]], 
                 Key["Period"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Clock"]], 
                 Key["InitialWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {4, 4}, 1., {
                   1, {{0, 1, 3, 5, 6}, {{2}, {2}, {4}, {1}, {3}, {3}}}, {0., 
                    0., 0., 0., 0., 0.}}], {{0, 0}, {4, 4}}, {0, 1}], {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, Frame -> Automatic, 
                  FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Clock"]], 
                 Key["MatrixData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1970"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Clock"]], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Toad\""], 
                  Style[
                   RawBoxes["\"Toad\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["GameOfLife2025", "Toad"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Toad"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Toad"]], 
                 Key["Period"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Toad"]], 
                 Key["InitialWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {2, 4}, 1., {
                   1, {{0, 3, 6}, {{1}, {2}, {3}, {2}, {3}, {4}}}, {0., 0., 
                    0., 0., 0., 0.}}], {{0, 0}, {4, 2}}, {0, 1}], {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, Frame -> Automatic, 
                  FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Toad"]], 
                 Key["MatrixData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1970"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Toad"]], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Bipole\""], 
                  Style[
                   RawBoxes["\"Bipole\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["GameOfLife2025", "Bipole"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Bipole"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Bipole"]], 
                 Key["Period"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Bipole"]], 
                 Key["InitialWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {5, 5}, 1., {
                   1, {{0, 2, 4, 4, 6, 8}, {{4}, {5}, {3}, {5}, {1}, {3}, {
                    1}, {2}}}, {0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {
                  5, 5}}, {0, 1}], {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, Frame -> Automatic, 
                  FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Bipole"]], 
                 Key["MatrixData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1970"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Bipole"]], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       389.90999999999997`, {251.39295288085935`, 257.12488647460935`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      389.90999999999997`, {251.39295288085935`, 257.12488647460935`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9556461318364973`*^9, {3.955646216274831*^9, 3.955646241886849*^9}, 
   3.955646309559767*^9, 3.9556463804500504`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"99864180-c0ca-4ef1-b43d-0d95e3cce0e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"EntityClass", "[", 
    RowBox[{"\"\<GameOfLife2025\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Class\>\"", "->", "\"\<Oscillator\>\""}], ",", 
       RowBox[{"\"\<InitialWeight\>\"", "->", 
        RowBox[{"TakeSmallest", "[", "5", "]"}]}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Period\>\"", ",", "\"\<InitialWeight\>\"", 
     ",", "\"\<MatrixData\>\"", ",", "\"\<Year\>\""}], "}"}], 
   ",", "\"\<Dataset\>\""}], "]"}]], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"88c908c6-cb76-4795-ac23-7a80443aeb10"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["GameOfLife2025", "Beacon"] -> <|
        "Period" -> 2, "InitialWeight" -> 6, "MatrixData" -> 
         SparseArray[
          Automatic, {4, 4}, 0, {
           1, {{0, 2, 3, 4, 6}, {{1}, {2}, {1}, {4}, {3}, {4}}}, {1, 1, 1, 1, 
            1, 1}}], "Year" -> 1970|>, 
       Entity["GameOfLife2025", "Bipole"] -> <|
        "Period" -> 2, "InitialWeight" -> 8, "MatrixData" -> 
         SparseArray[
          Automatic, {5, 5}, 0, {
           1, {{0, 2, 4, 4, 6, 8}, {{1}, {2}, {1}, {3}, {3}, {5}, {4}, {
             5}}}, {1, 1, 1, 1, 1, 1, 1, 1}}], "Year" -> 1970|>, 
       Entity["GameOfLife2025", "Blinker"] -> <|
        "Period" -> 2, "InitialWeight" -> 3, "MatrixData" -> 
         SparseArray[
          Automatic, {1, 3}, 0, {1, {{0, 3}, {{1}, {2}, {3}}}, {1, 1, 1}}], 
         "Year" -> 1969|>, 
       Entity["GameOfLife2025", "Clock"] -> <|
        "Period" -> 2, "InitialWeight" -> 6, "MatrixData" -> 
         SparseArray[
          Automatic, {4, 4}, 0, {
           1, {{0, 1, 3, 5, 6}, {{3}, {1}, {3}, {2}, {4}, {2}}}, {1, 1, 1, 1, 
            1, 1}}], "Year" -> 1970|>, 
       Entity["GameOfLife2025", "Toad"] -> <|
        "Period" -> 2, "InitialWeight" -> 6, "MatrixData" -> 
         SparseArray[
          Automatic, {2, 4}, 0, {
           1, {{0, 3, 6}, {{2}, {3}, {4}, {1}, {2}, {3}}}, {1, 1, 1, 1, 1, 
            1}}], "Year" -> 1970|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "Period"} -> 
        1, {All, "InitialWeight"} -> 1, {All, "MatrixData"} -> 
        1, {All, "Year"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Period" -> TypeSystem`PackageScope`AtomShape[34], 
             "InitialWeight" -> TypeSystem`PackageScope`AtomShape[34], 
             "MatrixData" -> TypeSystem`PackageScope`UnknownShape[False], 
             "Year" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 4, {All}]]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["GameOfLife2025"]], 
       TypeSystem`Struct[{"Period", "InitialWeight", "MatrixData", "Year"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], TypeSystem`AnyType, 
         TypeSystem`Atom[Integer]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "Period"} -> 
        1, {All, "InitialWeight"} -> 1, {All, "MatrixData"} -> 
        1, {All, "Year"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Period" -> TypeSystem`PackageScope`AtomShape[34], 
             "InitialWeight" -> TypeSystem`PackageScope`AtomShape[34], 
             "MatrixData" -> TypeSystem`PackageScope`UnknownShape[False], 
             "Year" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 4, {All}]]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["GameOfLife2025"]], 
       TypeSystem`Struct[{"Period", "InitialWeight", "MatrixData", "Year"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], TypeSystem`AnyType, 
         TypeSystem`Atom[Integer]}], 5], "Path" -> {}, "DisplayedRowCount" -> 
     5, "DisplayedColumnCount" -> 4, "DataRowCount" -> 5, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Period", 
                  Style[
                  "Period", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Period"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Period"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["InitialWeight", 
                  Style[
                  "InitialWeight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "InitialWeight"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "InitialWeight"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MatrixData", 
                  Style[
                  "MatrixData", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MatrixData"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MatrixData"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Year", 
                  Style[
                  "Year", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Year"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Year"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Beacon\""], 
                  Style[
                   RawBoxes["\"Beacon\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["GameOfLife2025", "Beacon"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Beacon"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Beacon"]], 
                 Key["Period"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Beacon"]], 
                 Key["InitialWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["SparseArray", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Beacon"]], 
                 Key["MatrixData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1970"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Beacon"]], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Bipole\""], 
                  Style[
                   RawBoxes["\"Bipole\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["GameOfLife2025", "Bipole"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Bipole"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Bipole"]], 
                 Key["Period"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Bipole"]], 
                 Key["InitialWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["SparseArray", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["8", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Bipole"]], 
                 Key["MatrixData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1970"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Bipole"]], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Blinker\""], 
                  Style[
                   RawBoxes["\"Blinker\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["GameOfLife2025", "Blinker"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Blinker"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Blinker"]], 
                 Key["Period"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Blinker"]], 
                 Key["InitialWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["SparseArray", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Blinker"]], 
                 Key["MatrixData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1969"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Blinker"]], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Clock\""], 
                  Style[
                   RawBoxes["\"Clock\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["GameOfLife2025", "Clock"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Clock"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Clock"]], 
                 Key["Period"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Clock"]], 
                 Key["InitialWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["SparseArray", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Clock"]], 
                 Key["MatrixData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1970"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Clock"]], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Toad\""], 
                  Style[
                   RawBoxes["\"Toad\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["GameOfLife2025", "Toad"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Toad"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Toad"]], 
                 Key["Period"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Toad"]], 
                 Key["InitialWeight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["SparseArray", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Toad"]], 
                 Key["MatrixData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1970"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["GameOfLife2025", "Toad"]], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       518.6674218750001, {138.16542358398436`, 143.89735717773436`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      518.6674218750001, {138.16542358398436`, 143.89735717773436`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9556464581039543`*^9, 3.9556573220071373`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"e8ff1c87-9b48-46c5-aedf-f58ad47a39fa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EntityValEntityClass", "[", "\"\<GameOfLife2025\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.955646110244131*^9, 
  3.955646116374107*^9}},ExpressionUUID->"e100792b-29cf-4763-ae7d-\
f0263cbcc46f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{"EntityClass", "[", 
   RowBox[{"\"\<GameOfLife2025\>\"", ",", 
    RowBox[{"\"\<Class\>\"", "->", "\"\<Oscillator\>\""}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.95564601582012*^9, 3.955646037468751*^9}, {
  3.9556460811169443`*^9, 3.955646104818885*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"140c9c78-85d4-4719-a4a6-3bb8546d97f4"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"UnknownType\"\>", ",", "\<\"GameOfLife2025\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.955646021270494*^9, 3.9556460377595587`*^9}, {
  3.955646081465671*^9, 3.955646105130616*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"13628969-ef6c-48b9-b891-a83f776b14cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EntityValue", "[", "]"}]], "Input",
 CellChangeTimes->{{3.955645957897893*^9, 
  3.95564596148701*^9}},ExpressionUUID->"36e4fb7c-ac50-4728-92c2-\
ddc0b4074ce3"],

Cell[BoxData[
 RowBox[{"ResourceData", "[", "\"\<\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9556457294853687`*^9, 
  3.9556457315091753`*^9}},ExpressionUUID->"409f0022-396c-4f8b-a13f-\
2609d8be500f"],

Cell[BoxData[
 RowBox[{"MapAt", "[", 
  RowBox[{"ArrayPlot", ",", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"EntityValue", "[", 
      RowBox[{
       RowBox[{"EntityClass", "[", 
        RowBox[{"\"\<GameOfLife2025\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Class\>\"", "->", "\"\<Oscillator\>\""}], ",", 
           RowBox[{"\"\<InitialWeight\>\"", "->", 
            RowBox[{"TakeSmallest", "[", "5", "]"}]}]}], "}"}]}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"\"\<Period\>\"", ",", "\"\<InitialWeight\>\"", 
         ",", "\"\<MatrixData\>\"", ",", "\"\<Year\>\""}], "}"}], 
       ",", "\"\<Dataset\>\""}], "]"}], ",", 
     RowBox[{"#InitialWeight", "&"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", 
     RowBox[{"Key", "[", "\"\<MatrixData\>\"", "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.955645784090602*^9, 
  3.955645784094969*^9}},ExpressionUUID->"0d890a19-c926-457f-8bdb-\
0cfe3cc31349"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SortBy", "[", 
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{
     RowBox[{"EntityClass", "[", 
      RowBox[{"\"\<GameOfLife2025\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Class\>\"", "->", "\"\<Oscillator\>\""}], ",", 
         RowBox[{"\"\<InitialWeight\>\"", "->", 
          RowBox[{"TakeSmallest", "[", "5", "]"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Period\>\"", ",", "\"\<InitialWeight\>\"", 
       ",", "\"\<MatrixData\>\"", ",", "\"\<Year\>\""}], "}"}], 
     ",", "\"\<Dataset\>\""}], "]"}], ",", 
   RowBox[{"#InitialWeight", "&"}]}], "]"}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"ceeb7992-c20f-4d39-8950-f8feafe74a30"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"\\!\\(\\*TagBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"#InitialWeight\\\", \\\"&\\\"}], \\\")\\\"}], \\\"[\\\", \\\"\\\\\
\\\"UnknownType\\\\\\\"\\\", \\\"]\\\"}], Function[Short[Slot[1], 5]]]\\) is \
expected to have an Association as the first argument.\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Function", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"\\!\\(\\*TagBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"#InitialWeight\\\", \\\"&\\\"}], \\\")\\\"}], \\\"[\\\", \\\"\\\\\
\\\"UnknownType\\\\\\\"\\\", \\\"]\\\"}], Function[Short[Slot[1], 5]]]\\) is \
expected to have an Association as the first argument.\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Function", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  Function, <|
   "MessageTemplate" :> MessageName[Function, "slot1"], "MessageParameters" -> {
      HoldForm["InitialWeight"], 
      HoldForm[Slot["InitialWeight"]& ], 
      HoldForm[
       (Slot["InitialWeight"]& )["UnknownType"]]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.955645790559224*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"b43a34de-33ad-4778-81cd-33078ca1e38d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SortBy", "[", 
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{
     RowBox[{"EntityClass", "[", 
      RowBox[{"\"\<GameOfLife2025\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Class\>\"", "->", "\"\<Oscillator\>\""}], ",", 
         RowBox[{"\"\<InitialWeight\>\"", "->", 
          RowBox[{"TakeSmallest", "[", "5", "]"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Period\>\"", ",", "\"\<InitialWeight\>\"", 
       ",", "\"\<MatrixData\>\"", ",", "\"\<Year\>\""}], "}"}], 
     ",", "\"\<Dataset\>\""}], "]"}], ",", 
   RowBox[{"#InitialWeight", "&"}]}], "]"}]], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"a88be604-5b77-43dc-b69b-78866771de7f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"\\!\\(\\*TagBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"#InitialWeight\\\", \\\"&\\\"}], \\\")\\\"}], \\\"[\\\", \\\"\\\\\
\\\"UnknownType\\\\\\\"\\\", \\\"]\\\"}], Function[Short[Slot[1], 5]]]\\) is \
expected to have an Association as the first argument.\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Function", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"\\!\\(\\*TagBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"#InitialWeight\\\", \\\"&\\\"}], \\\")\\\"}], \\\"[\\\", \\\"\\\\\
\\\"UnknownType\\\\\\\"\\\", \\\"]\\\"}], Function[Short[Slot[1], 5]]]\\) is \
expected to have an Association as the first argument.\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Function", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  Function, <|
   "MessageTemplate" :> MessageName[Function, "slot1"], "MessageParameters" -> {
      HoldForm["InitialWeight"], 
      HoldForm[Slot["InitialWeight"]& ], 
      HoldForm[
       (Slot["InitialWeight"]& )["UnknownType"]]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.955645803547161*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"2c19e723-459f-44e5-82a6-2265215711fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"EntityClass", "[", 
    RowBox[{"\"\<GameOfLife2025\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Class\>\"", "->", "\"\<Oscillator\>\""}], ",", 
       RowBox[{"\"\<InitialWeight\>\"", "->", 
        RowBox[{"TakeSmallest", "[", "5", "]"}]}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Period\>\"", ",", "\"\<InitialWeight\>\"", 
     ",", "\"\<MatrixData\>\"", ",", "\"\<Year\>\""}], "}"}], 
   ",", "\"\<Dataset\>\""}], "]"}]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"47515005-1a87-4eaa-870c-d353aa0c8692"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> Missing["UnknownType", "GameOfLife2025"], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`AtomShape[10], "InitialType" -> 
     TypeSystem`UnknownType, "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`AtomShape[10], 
     "Type" -> TypeSystem`UnknownType, "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 2, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{}, "Item",
                 False], "Mouse"], ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       20.200000000000003`, {10.932952880859375`, 16.664886474609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      20.200000000000003`, {10.932952880859375`, 16.664886474609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.955645818670068*^9, 3.955645838882351*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"b6682b98-c45c-4416-b697-761b4ff07ac1"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXGl0FNexTvLej5ecvHP8I79e8uxjZ49jO3H8stl5iRMn3hK8L4ltbLAB
GySxGNvgfTd4wca7wQYbxKJdQhIISYgdhASS2CWhfUW7BmlWzXS9qurumd6n
exaW8+hzrqan+3bd6rr13a+qujUXT519+/RvfO1rX3v8P/DP7VOeunbevCkL
77gAv9yV9vhjM9KmPXJj2vxpM6bN++3Uf8ODv8fWiO3fsYHpJmg+49jMREQV
HaWDwWnDKwTtUcFg32osRZ94zWFXZ1u9rHUWjProbGEkz06fKN3sbGdi/izl
RtUkYd0dXSIod6Jf5Vyu/ati0zkZcu1ddd4W6h5nj87JtIXykLEEwVKy0fpi
Y0DDw9GvNxzNYMmL6Gx0Z5o1znghNdHFajO2hS1JBrYwmw35w5Yt4HTawtn8
mR7UYVVrC2udw3dpwxbGA1uhP15bJPfSMyI3mbLPNbnJlH2uyU2mbKdyHRG6
8QCma5eTpcIyjrYj24ypHdxgAmzhWK6pLeKR7SwncTx/NuXG0lV/K6d3/uL2
ZSf3FqWDvUjJgW0SsWkDqtO0jtkLv2zGljGaMyrMziRfOPY7G/OXQF+2d2Uy
DZjMMaPFzInezlTwYH7e+sr/D4GUE7nnms7G8gVBH3PZXIFNZdo/F59cLY3F
vH7K3wzi16TbIp71GQzmT2ULO3dtfzTnM2nTFgmeP6UtnM+f077nt/Pb+e1M
bfEj1WDNF6yWTxtrmkneY10eiZ9DE2kLpc7JsIUdCbFuiYnOkm8LJxLsbcbx
i0UoEKPUs387F3VO1nbeFpHtnLVFQlIsi9w/Zm7S9DBOJPUHztBEWOcDUv6Q
KFvYvexssoVmItW2SBB7n1Fftr8JFt9U9Qdb15vL0UpMnDtY34ETCY5tYav+
cG7aItpRq2XPwSlFn+TaInFX2CjkJGFzPFrc6tmbtQQN5miLj3uSpbO13ISN
Zplr2hjFqS2SMLXORCrzSu0aEX3NsGBQ231t9TSyq+LDSVRhPiv6wNM61rM7
ov3etqTYtoX9+XNmC0cKmh6Kdsq5xc+8Lex7vcnFRt2dmdNctk0hjmQ7mLxk
6pwQufHqfJbY4qzQ+SzxZctTQiQutq+QsyjW9KCTAF/TLR4InAlbxEudjnW2
ucVlizjmL57zZ40vJ/lKJ7ITO4o6hkjslix7nLeFkdxz0RZW+LajQzIR53iL
dY20dZm5Lczj+Nh1iNuuSZ2Y02ULp3mgyTCWPGrrVExbMqbA6jlBUsY7CyQk
R1ZiRo9VIzt1Aeuzp8sW9sdxjG4LerF3l3HGk3HSQ9Sc67RsNgYU9LvJVTMB
nJf8cC3uZ+YJUMHxBWfEl9FQgrY5UsHODZhdGgIh6AdhwgsQcIOADbiNS5/6
JkjnhPB3s37m58DiWrvXRetjNZ6Z7oLFOTvyrGyXPFuMO7KFoLgu+bZwOn/j
ljLCxyc8AEEf+m9Q5fRWyOnoaIeaAweguqoKqqqrof74cfD6vBbXJWITRIx5
RyDYsR0CR9LBX7tMap+Bv+4z8VPRAuF9bZ9lkX51YgvU6fsHFOfV12k/lW1Z
pL8sWyVXP7ZWXkApr85Cblj2Mr3OOltodK6z1ileWwTMdDa1xTJDW6iaLVtY
6azXPaAdI6rOiu8m86e1J/UPHPoSJpqKITTaDhAK2vL41JRU+OY3vwlf//rX
4RvYrrzySjh58qQSEWp8mEJHfy7y/1hC5Fr6wPUg2FsNns2PgbvwX+Auuh88
xQ+CG5tHam75e5F0bCN9PoR96fjkSJ+Nk7HR/kPifvh4RJ74OVk1hrvoIVH2
RrnPQ5Frpf5huYrjSrlanWU5niLl2NL1RYo+rHOkn7aZ2cKdAFt4DHQP28JU
54hclT5RbfFgxBayXkWaaySdPQp5xvNnzxbq+ZtsMH+TrW1RHM0WdOwB9Nv7
wFP4AASOZYDgPxUVISmIs+985zswffp0ePOtN2F1ejq43e7E1GCMan3It8GW
UsaWb/vTMNFYAKGBQyCMtuD60MKfZk113mV9HuzIcak/o8k3khsy2ZdlRLsn
W/dqQy+rZktnl7n8UCJsYdO+jprLQn4sttDawETH0FA9BNsrwL/vTcT5FPDX
fAyCz8Uxmpnrp6SkwPf++3tQVFQEo6Oj4PMjDoL2uNAxCClWHOsBT3kaYmwh
3kcrgHcIwD9q2gR530efrvAxQdXPxU2QzjtqvtHwdYLuvEvz6bSprzPS2Yls
+7YYjc0Wfru2iMXOLsUY8c+fE1vEO3+GtvCNgODuxRhyBbg33AMTrWXIIX5T
109FnF100YVQWloKAX/ANmRi2kITEDi4ErwYL4YGj6Ouwzbuy7mNBJ0Pa2VY
+QoeD5hhw0hPl6Fccz+1kqmV5cAWAZPjOhucPlsIptdZ20JImi2MbGI8f+bX
KBphzdUG3q1PgHfbAhCIM4w2QeSziy68iHHmDwR056MBzhEWQwHwlMxAvn2b
1wLzuTPzA/29Cpp95Xyby9bK1I+hXBvV66QrilztGOY6C361zvr12FhvvU8r
5Wn1P1tskcj502JRb+dYbCFYzp+JLTwDMNG8Edz5d2Ks1m2KkFQFzrR8FhOW
jC6WBUx4YDz3VuS0LzCeHVbNl3qNi8ZhRucjPqj1BXvrlWZcn348ax+z0tn4
nKDR2ah/PLYw0jkxttDq7NLgxbnOdmwRLbZxOn925kh3zqcZDzktNHAUxjOu
A2GkRYcW+VuKIm70BzTxZUIDR4GfmYzn3sIxLelnen+UMxEne6kNi/s+/Tok
Hpf6heVJMqm/Vz4/DCGfUtaIgQ1d4hja88pjPs28kY1RJpj0F8ePzI14fFg8
ZnYvsizNvQkqe0WJixX2M/I36xjSmW/bi+uNuN2c44zXADPdrORY6RqPLdR9
Q0PHEWd/gdBwkylo1Dgz5jMt9Oz+37Wg2hH4OV8YZ+E1QfJxSfcQ+obPdRIa
arZC1mcvwwfPTYU17y2E5kO78Hgk1qT9hpoKWP3uk/DZqzOhqjwTPEOdYbnt
x/fBm/Puhqen/BkWPvQneGbKX+DN+ffAhi/fgsHO4zwOaPy99che2PDVW9x6
m+sg5BmC8cEO+PD5h+GVWZPgeHV5uG9grB9Ksz5G2ddCScaH4MfvIc8wDHU1
wM6iVbD8tVRY/noq6+VGvQLjA7Dq3afgxRk3QuGqt1XjkqxPXn4UXnrsZthd
vJrvb2ygDbbmfw4fvTgNMj9+ETrqq7ifpR9J90M6bF7/AeStXAxHKzfDhHtQ
7R8+l2ksocK+Rq6RH4bnLxCZR3VcaxErWsjVjWNTZ60trHAmJMIWvgjOghLO
VK9OCkqcmeRnCd2Mcaa1QWC8H8qyPoGnJv8vPHHf72HBg3+EtDuvhCfvuxp2
b0yHCfTXIPr/1oIvGD/z//U7WPjgn+Bx/Fz30fPgGe5i3mqs2YbXXw2zbvk5
PD/9eng1ZZIo644rYfG8uxiHIanWSfKGOuvx+N0w69bLsM8v4OCuIvbP0ZMt
8MKMG2DOXb+Cuh0bwnoSzmkdePj6SyDn89d43NYje2DJgvtRl9+ybnPuugpm
3/0ryPz0JZTTDJvWvg+pt/8CMfsPXktkPhxoP8rHSd+2o5Uw1N0An77yGMy7
99fwzNQ/w7x7fg0vIwZJJ23cI2jm3HfqJOL4HUi945fw2KRLIfeLNzT4tMdP
Irfb4YPocgVHdYmIXxvFMJY6Gx4341H7tohqJ8TZGPHZSJMpCanqICb5WQQp
0c4Zv0stHxUm3OAO42xEpbdsIz/6Se32Alg89y70q0JoPLAVPnlpBky78Ufw
4QuPMGf1tx2B5x75K/rhb2D7hpVwaM9G5oLU23+J+8WIjwHE2VbG6ZP3/wFq
tudDT8tBaKzdynySctsVzCnsf+Sbo71QvHoJ+/oj138fHr35J1CLmCJMjyA+
Xph2Pcy581d4rCCsr3e0B7IQP1P/djFkL3+Nea9hfwUswPUhb8UiOFG3HUqQ
U2YibglzzYd2Ih+WwZMPXAPz7/sdtB2rZHyTDrs2roYZOObSZx+C4Z4TsDXv
c0hFHd+afy/U79+Cur0Ls3F9eD3tVh43HKcqcUDrKmK2/dg+Xk8eueEH8PDf
LoFsXAvIpkobG/mjuLaLuA+MD4JrsBtGB7t4n7lfuo7OT7iHUffhyDG8bsJD
x4fCfcX1C/thX46t8Tudn0B5/EnNI8bzWj0m0C6+U/0w1NfBn0FFP3F8koO2
cw/yWsi6hGNzMSYiGdpYm64NSseDkhw/6hOQ9KFzJIf2A5KedI7vwTdiasNI
3HjC9L1FQz6z+h8CW5vxe14in01S5GcG9RyyE9kZ1/sg2pD8iuKwR//+U3h3
wQPgQn6p3LwOZiO/LFlwH8ZX7cyB2cteRi66HNZ/9Bx4RrolnF0NT0+9ln2c
bExyKSaktX7Za7PQ//rYtp0YkxEvPnH/NejLt8GMv0dwRjz0POJs9l1XSjgT
dfahXsRTU/96MeQgzkhPihsHMCb1S7q7hzsRV1fjeFfCod3FMNBxHLFzD6Td
9gvYWfgVYqwPxnHdWPZaCky/+ceMy+GeRo4hCfPl2Z+iDv1wsvUwvJZ6C+tY
f6BCHwdybjkC42iLN+bcwTz6/rNTcM24hDmX7tOcOyKfvrEBaKo/DDk5mZCV
uR4yM9ZDUWE+nBrqFn0T76+58QisW7sG9u3ZEbaFF+UX5OVCcWEB9u0Jz2PD
0VpYj3172k+wX28q3gCrvvoKZWdAVlYGXpMDI4glQYERr6sPqit3QRaOnZW1
HtavXwsHqvbA+Egv69Df0wpr16ZDxvp1ohzUc+e2LWF8EzbqavbBltIS8Lj6
VPfYgrqTPqMDXTA23APr163le5HlbMjPY3zl5ebAqlVfQbZ0vCA/V7SBEcdJ
fEY4ExBnZuBR4czv1/XwBSZgy4EGeCezAt7OqIC31ouf72Vvg4NNRnVMs4qL
iDO3CmfGHE32Jv/vajwAuzelw6K5d6LfXYEYeZtzndKMj3i9X/nmXDHfR27c
XrCSfZNytVP9rRGcYf5E3CL6dAf68AyWRTEmcckI8sd7T0/G+PIyqMhbzvFa
GGfuCM5mTvo55lspsHHNUm6FiNdFyLnEZznLX43kjlK9hHxyGOO/+f/6PeL3
atRhB/NK+tKnIeXWK2D1ews41uzGPJC4mLj5yN5NnFstmnMnx6nE0ySPMLz0
mYd4banaksXY08439eG4FNeQj5H/C1e/gzHAD1V8Zhajyf7S1nSM/bd63y44
2dkMvR1NUHegEjyjfSLPoA/v3L4FshEjRRvy2Y9pruh8dlYmY4gwFZIwuaEg
F1ajv3a1NfI6V4Q4LC0phv7uFm6DvW3MJzI3EHccqq1CfK+DY4cOcJ+Go3WM
g5rqPSyzD/XKzcmG9ubj0CfJIdzIWKU1qG5/JZRt3gju0ZMRrsbP5obDsGZN
Ooz2d4ILr6H7OHZoP9+rrE8Q8ZqTnQkV5Zv5WF93Kx8PjA+Z2k9Q8Jk2bpS/
0fuNkbhR+zxbAC/ibG3ZfpixJAOmvb1eahkw671s2HGw2YS7pKu1/6Sh4jPN
XCvrpbhPPkp51GyM18jv30UsdDfVMldRXJaCnLAesSJfU1WWwXkcYWaktxka
Dog4m4u5TT72p1jsi8VzUB7meshbFEt6R3qQQz7k66jeQLWP5W+kMbcc2JbH
OBztbWKczcBjMyddJuVcV4n5zz8uhSkSn1HsGV7ffKLfl2Z+wv3eeeo+GET8
kP/tK8tkHV6dNYm5+eDuInj8n7+D15BHT7Yc4hrNC9NvYL1P1G4X4xJccz5G
/WgdoTiZ1gwlbmhNonzzmal/gScQ15THlecug+k3/Yg510tcoMGU1lcIQ7t3
bIUCxIZfihXJ58j35XovxXDZ2Rnox3vR17OgW8IP4wyxsDY9HblnN/jHBmGg
txUxtoo5Q+5HfLe9opx9luMxj/o9BRdyRnFRAexEPYhbOSbFPtu3lkNhQR6M
IVf2djbxvgv3JyQZytiT5NaifoQzz6gcL4v32VR/hHUcGRBxRvfQ2VLPHCbK
Geb7zsnOgj07t/FxMW4etnhWgbYZlHA2ItUbDXK0lFkRPjN6fkZXBENB5LUg
c5vc/Pg9GHISUKrrIJbPICkGGmyHovQlnJuRH1LMVJz+LtfhClYuFjnpw2fD
vlJZup5rHEufeZCxQbXI+Xjdw5SnYPxEedcjN3wfnn3kOo7HPCNd0NmwH7nk
JsTs5VxXoXriBxhvEc5KMz/mOG9YwtnMSZciBlM5jyO9SIc35t4R5jOvxGdi
XjKEueA2eOqBPzA2KP+Sc4X+9mNcA330Hz+D7hM1UIbjPDrpZ5CO/OZGfhvs
rIcXid8QZ1TLESR5HzLOroAdhV+iH6txRrZavigN7/P7sOb9hXAM7yMXsT/t
ph/y2tKOuSBxs9HzBLl5EEOl6JuHa6vFmi9+J18krvBKOVIbckh+bjb0dJxg
P67BeI58nXBGsSZdX4hx5gjyRW31XihEzivckBfhM/xO/ar27uRG/KnMoYg3
MjFWpP5BbwSDLQ1HIB9jzJPIL8SxxDfEew3H6jjO9Ui8RY34TI2zCD6akM/W
pq8O81kmxoQU/9YfqUE5hxjHhNlslE/jyXp2tjYYPAuSGuW0zGd/Fuv6Cowp
Hx2LdZALTfgMxfgnIHNbLaR+kAOzlmZzS1maA3M/yoNdh1vUgFRJVhxS4Izq
IH7DuHFUegdOel5JaynG/e6hLmg6uJPrgPP/+VvoajgAZYgT8t8vFs0WnxHh
tdvyxdoBYWGsv42fC1AdhLBWlvUpHKncDL0tB7leQfkK5V67MO8j3yX8UW1u
5i2XIsZ+Ag//Tfye+/nrzC+EM+Kl6i3ZXM+j/Iti03UfPof52SWRuNEn6t12
pJIxRhyY98Ui5k05dqH9Ne8/zTUKyscoT3wMMReuu2AcSzncnDuvQl4qFuOy
4W7maeLSAxU5UtwY4aXWo3sRl79BmRcj9/+U1wSSORXXF6qvvDTzZo5Hxedp
Sh+RP4l/+zl/ojiNcHb8cA1kYPy2Bv2SYkf3yEkoR9/luA9zpBrE0QbMW/zI
O4SzPMSffIz6lxQXsayS4kLkswbGDeV6xCH7kfP279sN7YgzJReRXIpb+7qa
VTjraK6HPIwVict6EGfEkTQOySY8jfR3hG3BfFat5jO5btFcr4gbB7tYDum9
Ee+7tGQjx4jMZ1lZnDvux/iZ9OxsrUc9jeuPgs/k+ZmGgtTvXfl1fQITQaio
bYSlOds5J5PbB3k74VBzj5ayLOhMjhu19UZ1vEtrNcVLHRgHUexFrbuxBnOa
yzneoniQ6hFU86a8jTiHagnEB7OQl/KRZyiGa5DzsynXcm4UkutP0nzQ+kp5
W8bHL2DOtJDbl2/PZ66Zhhz43sLJsB99mvyTngvMDtcb5TpIr1gHkfMz/E5r
KT3no3iX9KV6Rn/HMY51ac3gWgL2oWdaxJn0rGHhg3/k/I1wSzigdWDlW/N4
HaH6POGS+IieLVCtkjBFdR/CP9VWRnoaoa/1MOZhr4Tv46slT7BtaP0gvqY4
m+QK4dqT3mcoVty6pZTzL6rVUe5Ffl2ysZBzI+Iwypso9iMf3ojxXfrqVTB0
sp1rFOSvhM09u7ZBLsZdhCmqcWzeVAzdrY1hnFEMKMdjkTqhqAv5f0F+DnJq
lZgP+cRaZs1+Eb/DfZ3MZ1SXIM70uvpZ70j86eJ6JvNZCeVnfar7FPOz1Xwt
4Yx4kbBO9xoYG+S4gcbTxY2KeqbuWYFPmZ9ZP6e+0OQ9YjnUDOGfiWAIW1DR
Qnxc/TBaMBwmXO1nnN1qWgehNacLY6lXUm9hHyzCGG1n0Vfw/nNTMM76KTz7
8HUwiHmb62Qz1w7m3v0/zDnbN6xgPFHtgOI18neqg9Azt2cQNy2Hd+vfx+I8
SqzzhtziJ/ni55ifEQfI+ZmL4sbp+rq+zyXWG+X8jGI+yq9efPQm5rFZt13G
Pk/P1vJXLuJYlbGO1xJG6LnY9Jt+zLxD9ZyAxFE0JsfAuKa8/NjfYS/ur3zr
ccY51VupHz0TpzrifOTrzE9eYCySL9A9UKO1aUvucik/e1F6FqC2s9YWtO4c
rquGdbjeU9xGPDU+3AsVZZvZz+kccdswYoeOE/dQHEhrPj0DyM/NgfqjtYwD
rkdivEWxGfFfhM8KwjijujzhOeSNYMR3agBzxArGbD9yC/Wj8aj+t62ilLmK
ahY0Lukg1sDkOCiSZxKfEb5PoV7ycwTiqaaGQyo+I47sam/kPDRcr/eJdZC9
u7ZJeeSgpKe4RqmfBbrCOBvjemMkbtTCIDUcN24OPz9TP8+O4+UrTR1EnZ/p
38egNoJ+TbVAivkIW9PQV8hfaN3fVrCCYyuyxf6tOfAC+v8M6Tz1J3/mmjfK
5Xrj/VczPxHOjDCtHduLvLNi8Vyuu9Qp6/oqPpNwxnz2IvNZLmKJahrEa/T8
gWJCygmn3fgDzpEIt1TbkOsXlE99vng2j5N25y+ZN4NSrZ7ujeJE4tY5d1/F
90a4XYS5YMvhXeLzPoxbKR+jseidE8pZlfERxcWUb9K1xHOReqPxO06yLSg/
IRxkYDxFvLWxaAPHccRTO7ZtgfLSTcwdFCsRj1RhbpObm8V1v/y8bK7jE8dQ
vEi5FtXORZyJfEb5GmF1E8Z71CgOpfqknDcSl1A+SONS/ZK4lGqNJZuKmDfJ
16neSLw4NtJr6D+EKcobiWsJ1zROSUkR69B4/CCsJZzhGIwzyjWpPuqNxFac
n2Vl8FpBcTQ1uu++rhbj3FbKz8aUdRCDLVWZnxk8P4vnFUddvXHCg/kZ8Zn4
HrE+rxRzfuIG4qWq8ix+N2RPyRqOx/hdD4kHyXfo3Ql6R4TeT6Lnue7h7ojP
oO8d3beZaxvEU1rfMrIZ+Xr78Sp+Pj7a18LvlRA2jldv4Zo7rQGRvkNc/6Rn
6j3NdezbPfi9bmchH6vdkS99io30EN8/cfE43Y0HuC5IeeMp1FVQPN8lv6M4
8jCOuSVnGewry2DZ8nsdZKOO+mquPVItJRh+nib5K2KB6imkC11HPKq1s5Et
iFvo+RXx2Qn0SaobEH9Q7Y/4heJAOc4j3yS+ID+l+jn1G0OO4bqdd0R8Vox6
DSDvefjdl1HuQ7UPqsl3tNTjOA1i7d0XwTv5OT2Do/P1iFfqS3iV8U01GfJ5
wpPRHNK4hCOq2XRgo3piZ0sDx7akH+EtID2fJn1oXRCUXI/7dE9tzcdYB9az
tYFzUL3vSHWQwaOIs+sQZy1mUHD8fqM9gBl9F/j/YtybpoK/+l0Ad5+BnVy6
eZdb+Fmm8l75XWH5vMV7yVHfFbXGn3V/a9819+9o44rPnkOeYV2tS/Ar3mGO
Qa6dexfffzaoVUWVnThbCGY5kcYW9ufPTN84/MI7AMHWcnDn3QrCqS5LnF2o
eR9EUzE0hE5MW2iCf8/EW5aGsWyD+E66o/nR+BrtByLPIY3/79IuViLnRLkK
nzM6b2teNb5r4Ov6/4tKpC3s+Jk1BuzZIhp2jG2hfd849vlT76ttodc5Ubbg
Y6c6wLvzefBWPI5r4qAlzihuLOM6iPn/XUfbouFQpLQQhFyo1+aZ4N31MsB4
r+p/qo19Q+9Txj5v1/eNZKnnWycjzKV2ZGuvN/ED/6iCow3qxTHYIrouybVF
PPMXvy1iwZITW2h1pt8t6IOJY+vAXXAvTDQVib81Z4IHaz5L9EY5mhcmGvP4
d678e1+HYNsWEIbq+f+/hVPt6uZSfJrtR+kL0nnQyjYbRyv3lEauSz2GKFfW
vc1UpxDr0qbSyVR/I53l67TXx2yLNmnfQmcjWxjYIKG2MLknM1vodEq2LaiN
NEGoey//fp5n08Pgq3yT8xfl7/BoN/q9q8j7IPb4TNDtWJ8XNH3pd7gIX/Rb
Qe6iyeApfZRjSQ+18lTxsyxV3OfvqeFzXmnfG+6Xxtd6y9P49334s0zqJ30X
z6UqjivlSscV46pky3KlMcPnDGSLctMUcmWd0yI6l0d0luV7w/oo7qE8ii3K
bNqiPGILj1ZfE511tijX2KLc2BYqnVWfJvOntIVm/jwm86e3RaraFsr7sKtz
FFvo5g/jMfbdDfdC4NBKEAziRS0GtHym/d9Mx5udS/ih3ATybj//3qR//wfg
27tI1/zaY5V4rFLeXxw5Xyk15XcjWQbHza7xG50zu77S5DrtNWY6a/W3YwuV
Xs5sYXncSmetLZzqbMcW0XSLprNWrtZ/Ypw/v1J21RIIYLwYGmoUf+PKgsfk
LVX1nFrms+RFjuGNn3GHRD3pN5WR46waaI/5DPoZHTuDTadznP1i7X82NFvz
l0QbJ7TR74PTb9XTbxGr3tUw31KsfofHTnHDEST1nQ0vt5Jr+K9tDpQwlG38
DN9MEcc6mypis9sZsIXdARMyf04MZ9FVfysOJiXJvsxx44UXQklJCXg9HgiF
QvG9A2IyTsK3ZMmVZSdL7rloi3NR52TJjVE2xY3f/e5/wYoVK+DokaPQ0d4O
E8GJiFzLQe2eEsxOaI6ay7Tuo5Fv/Mq0w00AlWGTbQvdMPHYQmqWfhGHznHZ
Ipb5S5AtbEiJfio2XyY++89vfxu+9a1vwQUXXADXXHMNDA2ZP287v53t22nI
rc9vjreCggJ47tlnYcGCBdyWvv8+jI2NxSTLOiSPZf4Fw12zPuE9h3Gv1Qpr
QwHDfta9Dc46zavsdjmHbBGTztGoymAcB6JNjsXuy6aUrul5PlSPyI1ftrEH
25kLByLtnIprS5pfWGLIasTo2pyVvuz4wvhsYGdVtbfuJnJLguPHfBf2/MiR
yNO8JY6DnHHr6beFw7mKp7NtQRarV6x5rLaHYHTQ4MAZ8s3oeX0CbWH3srPJ
FpqJ1P3vlYmEGAd2ds5mx+hhcSysaDe6jzN/OyNyz9sidtlngy3i1zm+fpH+
/weohbSz
    "], {{0, 29.}, {109., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144, 144}],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlwdUk8kWgOf//3QSWkIoUkJv0lsAKSG0ANK7jZCEEEqIKSDYlcUVXAsq
IljRRREF1wLIWhHFtigW7C7IoqKsiwUblvcDh+DuO++98+45959vbu7cuTNn
JueOcXpebAYMAJAR0E8st4AllXIL49TRToJYJhKKBXyOWC4QCqTMdAg1qlPQ
D6CocyWSHBj1yhXLpbEhAYzklFQGfgDAAAMQoA1UuTyZhBUdHTHqPdH+Xd51
g9GA4IbdaKx///2/igZfIOMBAEWjnM6X8XJRPoLqc55EKgcA2YHaTQvkklFu
R5kmRRNE+c4oC8d5cJTTxxgDxnziY9ko0wAgkLlcqRAAMgO1M/J5QjQO2R9l
RzFfJEZZgrJvbm4eH+WDKFuhPqiNPBqfmf5dHOHfYqYrY3K5QiWPr2VMCIEi
mSSHW/h/bsf/ltwcxcQcFqiSM6WhsWirie7Zney8cCWL0yOjJljEH/Mf40xF
aMIE82Ts1AnmcwPDlWNzIiMmOEMUzFHGkXPiJ1ggC4qbYGlerHKuDCmbNcFc
6eS8iuwEpT1TwFHGL8qMT5rgfFFi5ATLsuPCJ33YSrtUEavMXyAOCZicN1i5
9lzZd+sVcZRj5Znxocq1cyfzF4hZkzFlycrc+ILAoEmfBKW/RB6gnEuSE630
F+SEKO2y/DjlWDl6ICfHRiv3MIsbFj3BgA3yQA6qUsAAEWgvEAC5YJ58dCHs
PEmhVCTMlDNY6A0TMDhinv1UhrOjsxsAo/d1/Di8oY/dQ4h+adKWF4Me45vo
HamYtHEdAGg2Qv8B/py0WSSifVUATtbxFNL8cdvYXcICElADNKALDIEpsAJ2
wBm4A2/gD4JAGIgC8SAFzAY8kAly0cwLwAKwFJSAMrAWbARVYDvYBfaCA+AQ
aAbHwRlwHlwG18AtcB/0gH7wAgyBd2AEgiA8RIGokC5kBJlDtpAzxIR8oSAo
AoqFUqA0SAiJIQW0AFoOlUHlUBW0E6qDfoGOQWegi1AXdBfqhQag19AnGIHJ
MA02gC1gB5gJs+BwOB6eBQvhuXARXAyvhivhGng/3ASfgS/Dt+Ae+AU8jABE
BaEjxogdwkTYSBSSimQgUmQRUopUIDVIA9KKdCA3kB5kEPmIwWGoGAbGDuON
CcUkYHiYuZhFmFWYKsxeTBOmHXMD04sZwnzFUrD6WFusF5aDTcYKsQXYEmwF
thZ7FHsOewvbj32Hw+HoOEucBy4Ul4LLws3HrcJtxTXiTuO6cH24YTwer4u3
xfvgo/BcvBxfgt+M348/hb+O78d/IKgQjAjOhGBCKkFMWEaoIOwjnCRcJzwl
jBDVieZEL2IUkU8sJK4h7ia2Eq8S+4kjJA2SJcmHFE/KIi0lVZIaSOdID0hv
VFRUTFQ8VWJURCpLVCpVDqpcUOlV+UjWJNuQ2eSZZAV5NXkP+TT5LvkNhUKx
oPhTUilyympKHeUs5RHlgypV1V6Vo8pXXaxardqkel31pRpRzVyNpTZbrUit
Qu2w2lW1QXWiuoU6W52rvki9Wv2Y+m31YQ2qhpNGlEauxiqNfRoXNZ5p4jUt
NIM0+ZrFmrs0z2r2URGqKZVN5VGXU3dTz1H7aTiaJY1Dy6KV0Q7QOmlDWppa
rlqJWvO0qrVOaPXQEboFnUPPoa+hH6J30z9pG2iztAXaK7UbtK9rv9eZouOv
I9Ap1WnUuaXzSZehG6SbrbtOt1n3oR5Gz0YvRq9Ab5veOb3BKbQp3lN4U0qn
HJpyTx/Wt9GP1Z+vv0v/iv6wgaFBiIHEYLPBWYNBQ7qhv2GW4QbDk4YDRlQj
XyOR0QajU0bPGVoMFiOHUcloZwwZ6xuHGiuMdxp3Go+YWJokmCwzaTR5aEoy
ZZpmmG4wbTMdMjMym262wKze7J450Zxpnmm+ybzD/L2FpUWSxQqLZotnljqW
HMsiy3rLB1YUKz+ruVY1VjetcdZM62zrrdbXbGAbN5tMm2qbq7awrbutyHar
bddU7FTPqeKpNVNv25HtWHb5dvV2vfZ0+wj7ZfbN9i8dzBxSHdY5dDh8dXRz
zHHc7XjfSdMpzGmZU6vTa2cbZ55ztfNNF4pLsMtilxaXV662rgLXba533Khu
091WuLW5fXH3cJe6N7gPeJh5pHls8bjNpDGjmauYFzyxngGeiz2Pe370cveS
ex3y+svbzjvbe5/3s2mW0wTTdk/r8zHx4frs9OnxZfim+e7w7fEz9uP61fg9
9jf15/vX+j9lWbOyWPtZLwMcA6QBRwPes73YC9mnA5HAkMDSwM4gzaCEoKqg
R8EmwcLg+uChELeQ+SGnQ7Gh4aHrQm9zDDg8Th1nKMwjbGFYezg5PC68Kvxx
hE2ENKJ1Ojw9bPr66Q8izSPFkc1RIIoTtT7qYbRl9NzoX2NwMdEx1TFPYp1i
F8R2xFHj5sTti3sXHxC/Jv5+glWCIqEtUS1xZmJd4vukwKTypJ5kh+SFyZdT
9FJEKS2p+NTE1NrU4RlBMzbO6J/pNrNkZvcsy1nzZl2crTc7Z/aJOWpzuHMO
p2HTktL2pX3mRnFruMPpnPQt6UM8Nm8T7wXfn7+BPyDwEZQLnmb4ZJRnPBP6
CNcLBzL9MisyB0VsUZXoVVZo1vas99lR2Xuyv+Uk5TTmEnLTco+JNcXZ4vY8
w7x5eV0SW0mJpGeu19yNc4ek4dJaGSSbJWuR09DC6IrCSvGDojffN786/0NB
YsHheRrzxPOuFNoUrix8WhRc9PN8zHze/LYFxguWLuhdyFq4cxG0KH1R22LT
xcWL+5eELNm7lLQ0e+lvyxyXlS97uzxpeWuxQfGS4r4fQn6oL1EtkZbcXuG9
YvuPmB9FP3audFm5eeXXUn7ppTLHsoqyz6t4qy795PRT5U/fVmes7lzjvmbb
Wtxa8drudX7r9pZrlBeV962fvr5pA2ND6Ya3G+dsvFjhWrF9E2mTYlNPZURl
y2azzWs3f67KrLpVHVDduEV/y8ot77fyt17f5r+tYbvB9rLtn3aIdtzZGbKz
qcaipmIXblf+rie7E3d3/Mz8ua5Wr7as9sse8Z6evbF72+s86ur26e9bUw/X
K+oH9s/cf+1A4IGWBruGnY30xrKD4KDi4PNf0n7pPhR+qO0w83DDEfMjW45S
j5Y2QU2FTUPNmc09LSktXcfCjrW1erce/dX+1z3HjY9Xn9A6seYk6WTxyW+n
ik4Nn5acHjwjPNPXNqft/tnkszfbY9o7z4Wfu3A++PzZDlbHqQs+F45f9Lp4
7BLzUvNl98tNV9yuHP3N7bejne6dTVc9rrZc87zW2jWt6+R1v+tnbgTeOH+T
c/PyrchbXd0J3Xduz7zdc4d/59ndnLuv7uXfG7m/5AH2QelD9YcVj/Qf1fxu
/Xtjj3vPid7A3iuP4x7f7+P1vfhD9sfn/uInlCcVT42e1j1zfnZ8IHjg2vMZ
z/tfSF6MDJb8qfHnlpdWL4/85f/XlaHkof5X0lffXq96o/tmz1vXt23D0cOP
3uW+G3lf+kH3w96PzI8dn5I+PR0p+Iz/XPnF+kvr1/CvD77lfvsm4Uq5Y6UA
giqckQHA6z3omyEFAOo1AEgzxuvpMYHG3wBjBP4Tj9fcY+IOwK7TAMQvASAS
1R2jNQjaqvkDMFoSxfsD2MVFqRO171idPio49MWyY7SeBN21K5eAf8h4Df9d
3v9swWhUV/DP9l+k7w+b
      "], "RGB", "XYZ"], Interleaving -> True, 
    MetaInformation -> <|"XMP" -> <||>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{311.28955078125, Automatic},
  ImageSizeRaw->{109., 29.},
  PlotRange->{{0, 109.}, {0, 29.}}]], "Input",ExpressionUUID->"ad53442a-8793-\
47a1-9843-dd3a4e049f54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"EntityClass", "[", 
    RowBox[{"\"\<GameOfLife2025\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Class\>\"", "->", "\"\<Oscillator\>\""}], "}"}]}], "]"}], 
   ","}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.955657288764309*^9, 
  3.955657342076413*^9}},ExpressionUUID->"6ab7ca12-d9d5-4788-b72e-\
657b687637fa"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"UnknownEntityClass\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GameOfLife2025\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Class\"\>", "\[Rule]", "\<\"Oscillator\"\>"}], "}"}]}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.955657306378734*^9, 3.955657335393755*^9}},
 CellLabel->"Out[81]=",ExpressionUUID->"4e1ca6d5-9594-4438-9db1-8ea667e62455"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"EntityClass", "[", 
    RowBox[{"\"\<GameOfLife2025\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Class\>\"", "->", "\"\<Oscillator\>\""}], ",", 
       RowBox[{"\"\<InitialWeight\>\"", "->", 
        RowBox[{"TakeSmallest", "[", "5", "]"}]}]}], "}"}]}], "]"}], ",", 
   " ", "\"\<Name\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.955657352179398*^9, 3.955657388151608*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"07076997-b051-41e4-9b7d-2120c7029b78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Beacon\"\>", ",", "\<\"Bipole\"\>", ",", "\<\"Blinker\"\>", 
   ",", "\<\"Clock\"\>", ",", "\<\"Toad\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.955657350531136*^9, 3.9556573886878147`*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"c3f16468-3526-4f4d-be93-423e6c1df658"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", 
  RowBox[{
   RowBox[{"#Name", "&"}], "/@", 
   RowBox[{"ResourceData", "[", "\"\<LifeWiki Dataset 2025\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9556573993831053`*^9, 3.955657425816383*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"31ace441-9f1e-4a03-b89a-034d5d674f97"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Beehive\"\>", ",", "\<\"Blinker\"\>", ",", "\<\"Block\"\>", 
   ",", "\<\"Crotchet\"\>", ",", "\<\"Domino\"\>", ",", "\<\"Dot\"\>", 
   ",", "\<\"Duoplet\"\>", ",", "\<\"Glider\"\>", 
   ",", "\<\"Line of three\"\>", ",", "\<\"Loaf\"\>", 
   ",", "\<\"Pre-block\"\>", ",", "\<\"R-pentomino\"\>", 
   ",", "\<\"Short table\"\>", ",", "\<\"Traffic light\"\>", 
   ",", "\<\"Aircraft carrier\"\>", ",", "\<\"Banana spark\"\>", 
   ",", "\<\"Barge\"\>", ",", "\<\"Beacon\"\>", ",", "\<\"B-heptomino\"\>", 
   ",", "\<\"Bi-block\"\>", ",", "\<\"Bipole\"\>", ",", "\<\"Blockade\"\>", 
   ",", "\<\"Boat\"\>", ",", "\<\"Bookend\"\>", ",", "\<\"Bun\"\>", 
   ",", "\<\"Cavity\"\>", ",", "\<\"Century\"\>", ",", "\<\"C-heptomino\"\>", 
   ",", "\<\"Claw\"\>", ",", "\<\"Clock\"\>", 
   ",", "\<\"Crinkly heptomino\"\>", ",", "\<\"Cuphook\"\>", 
   ",", "\<\"Diagonal on-off\"\>", ",", "\<\"E-heptomino\"\>", 
   ",", "\<\"F-heptomino\"\>", ",", "\<\"Figure eight\"\>", 
   ",", "\<\"Gosper glider gun\"\>", ",", "\<\"Heavyweight spaceship\"\>", 
   ",", "\<\"Herschel\"\>", ",", "\<\"Hertz oscillator\"\>", 
   ",", "\<\"Honey farm\"\>", ",", "\<\"House\"\>", ",", "\<\"Leg\"\>", 
   ",", "\<\"Lightweight spaceship\"\>", ",", "\<\"Line-of-six spark\"\>", 
   ",", "\<\"Long barge\"\>", ",", "\<\"Long boat\"\>", 
   ",", "\<\"Long ship\"\>", ",", "\<\"Long snake\"\>", 
   ",", "\<\"Middleweight spaceship\"\>", ",", "\<\"Pentadecathlon\"\>", 
   ",", "\<\"Period-60 glider gun\"\>", ",", "\<\"Phi spark\"\>", 
   ",", "\<\"Pi-heptomino\"\>", ",", "\<\"Pinwheel\"\>", 
   ",", "\<\"Pole 2\"\>", ",", "\<\"Pole 3\"\>", ",", "\<\"Pole 4\"\>", 
   ",", "\<\"Pond\"\>", ",", "\<\"Pulsar\"\>", ",", "\<\"Quadpole\"\>", 
   ",", "\<\"Queen bee\"\>", ",", "\<\"Queen bee shuttle\"\>", 
   ",", "\<\"Ship\"\>", ",", "\<\"Snake\"\>", ",", "\<\"Table\"\>", 
   ",", "\<\"Tail\"\>", ",", "\<\"Toad\"\>", ",", "\<\"Tripole\"\>", 
   ",", "\<\"Tub\"\>", ",", "\<\"Tumbler\"\>", ",", "\<\"V spark\"\>", 
   ",", "\<\"Z-hexomino\"\>", ",", "\<\"3c/10 pi wave\"\>", 
   ",", "\<\"Almosymmetric\"\>", ",", "\<\"Big S\"\>", 
   ",", "\<\"Block-laying switch engine\"\>", ",", "\<\"Blonk-tie\"\>", 
   ",", "\<\"Boat-bit\"\>", ",", "\<\"Breeder 1\"\>", 
   ",", "\<\"Candelabra\"\>", ",", "\<\"Canoe\"\>", ",", "\<\"Cap\"\>", 
   ",", "\<\"Cauldron\"\>", ",", "\<\"Cis-boat with tail\"\>", 
   ",", "\<\"Double ewe\"\>", ",", "\<\"Eater 1\"\>", 
   ",", "\<\"Ecologist\"\>", ",", "\<\"Flutter\"\>", 
   ",", "\<\"French kiss\"\>", ",", "\<\"Glider-producing switch engine\"\>", 
   ",", "\<\"Gliders by the dozen\"\>", ",", "\<\"Gray counter\"\>", 
   ",", "\<\"Hat\"\>", ",", "\<\"Hook with tail\"\>", ",", "\<\"Hustler\"\>", 
   ",", "\<\"Integral sign\"\>", ",", "\<\"Interchange\"\>", 
   ",", "\<\"Iwona active region\"\>", ",", "\<\"Kok's galaxy\"\>", 
   ",", "\<\"Light bulb\"\>", ",", "\<\"Long canoe\"\>", 
   ",", "\<\"Long\.b3 snake\"\>", ",", "\<\"Mango\"\>", 
   ",", "\<\"Negentropy\"\>", ",", "\<\"New gun 1\"\>", 
   ",", "\<\"Noah's ark\"\>", ",", "\<\"Octagon 2\"\>", 
   ",", "\<\"Orthogonal on-off\"\>", ",", "\<\"p60 glider shuttle\"\>", 
   ",", "\<\"Phoenix 1\"\>", ",", "\<\"Pi ship 1\"\>", ",", "\<\"Piston\"\>", 
   ",", "\<\"Pressure cooker\"\>", ",", "\<\"Puffer 1\"\>", 
   ",", "\<\"Quad\"\>", ",", "\<\"Quasar\"\>", ",", "\<\"Scrubber\"\>", 
   ",", "\<\"Shillelagh\"\>", ",", "\<\"Spark coil\"\>", 
   ",", "\<\"Spiral\"\>", ",", "\<\"Squaredance\"\>", 
   ",", "\<\"Switch engine\"\>", ",", "\<\"Thunderbird\"\>", 
   ",", "\<\"Titanic toroidal traveler\"\>", 
   ",", "\<\"Trans-boat with tail\"\>", ",", "\<\"Tub with tail\"\>", 
   ",", "\<\"Twin bees shuttle\"\>", ",", "\<\"Twin bees shuttle spark\"\>", 
   ",", "\<\"Two eaters\"\>", ",", "\<\"Two-glider octomino\"\>", 
   ",", "\<\"U-turner\"\>", ",", "\<\"Very long boat\"\>", 
   ",", "\<\"Very long snake\"\>", ",", "\<\"Washerwoman\"\>", 
   ",", "\<\"1-2-3\"\>", ",", "\<\"Airforce\"\>", 
   ",", "\<\"Barge siamese loaf\"\>", ",", "\<\"Beehive with tail\"\>", 
   ",", "\<\"Biting off more than they can chew\"\>", 
   ",", "\<\"Block on griddle\"\>", ",", "\<\"Block on table\"\>", 
   ",", "\<\"Boat-tie\"\>", ",", "\<\"Boat with long tail\"\>", 
   ",", "\<\"Boss\"\>", ",", "\<\"Broken snake\"\>", 
   ",", "\<\"Burloaferimeter\"\>", ",", "\<\"Carrier siamese carrier\"\>", 
   ",", "\<\"Cis-barge with tail\"\>", ",", "\<\"Cis-shillelagh\"\>", 
   ",", "\<\"Cis-very long hook with tail\"\>", ",", "\<\"Claw with tail\"\>",
    ",", "\<\"Diamond ring\"\>", ",", "\<\"Dinner table\"\>", 
   ",", "\<\"En retard\"\>", ",", "\<\"Four skewed blocks\"\>", 
   ",", "\<\"Frog II\"\>", ",", "\<\"Germ\"\>", 
   ",", "\<\"Hooked integral\"\>", ",", "\<\"Loading dock\"\>", 
   ",", "\<\"Long hook with tail\"\>", ",", "\<\"Long integral\"\>", 
   ",", "\<\"Long shillelagh\"\>", ",", "\<\"Long\:2074 snake\"\>", 
   ",", "\<\"Loop\"\>", ",", "\<\"Mathematician\"\>", ",", "\<\"Melusine\"\>",
    ",", "\<\"Multum in parvo\"\>", ",", "\<\"Penny lane\"\>", 
   ",", "\<\"Prodigal\"\>", ",", "\<\"Protein\"\>", 
   ",", "\<\"Pyrotechnecium\"\>", ",", "\<\"RF28B\"\>", 
   ",", "\<\"Roteightor\"\>", ",", "\<\"Schick engine\"\>", 
   ",", "\<\"Snacker\"\>", ",", "\<\"Snake dance\"\>", 
   ",", "\<\"Snake pit\"\>", ",", "\<\"Snake siamese snake\"\>", 
   ",", "\<\"Sombreros\"\>", ",", "\<\"Surprise\"\>", 
   ",", "\<\"Trans-barge with tail\"\>", 
   ",", "\<\"Trans-very long hook with tail\"\>", 
   ",", "\<\"Tub with long tail\"\>", ",", "\<\"Tub with very long tail\"\>", 
   ",", "\<\"Two-glider mess\"\>", ",", "\<\"Very long shillelagh\"\>", 
   ",", "\<\"Worker bee\"\>", ",", "\<\"$rats\"\>", 
   ",", "\<\"Asymmetric amphisbaena\"\>", ",", "\<\"aVerage\"\>", 
   ",", "\<\"Barge with very long tail\"\>", 
   ",", "\<\"Beehive at beehive\"\>", ",", "\<\"Beehive at claw\"\>", 
   ",", "\<\"Beehive on table\"\>", ",", "\<\"Beehive with hooked tail\"\>", 
   ",", "\<\"Beehive with nine\"\>", ",", "\<\"Block on cap\"\>", 
   ",", "\<\"Block on cover\"\>", ",", "\<\"Boat tie eater head\"\>", 
   ",", "\<\"Boat tie eater tail\"\>", ",", "\<\"Boat tie long boat\"\>", 
   ",", "\<\"Boat tie long snake\"\>", ",", "\<\"Broken elevener\"\>", 
   ",", "\<\"Bun with feather\"\>", ",", "\<\"Canoe siamese snake\"\>", 
   ",", "\<\"Carrier bridge carrier\"\>", ",", "\<\"Carrier bridge snake\"\>",
    ",", "\<\"Carrier bridge table\"\>", ",", "\<\"Carrier siamese canoe\"\>",
    ",", "\<\"Carrier siamese hook-with-tail hook\"\>", 
   ",", "\<\"Carrier siamese hook-with-tail tail\"\>", 
   ",", "\<\"Carrier siamese shillelagh\"\>", 
   ",", "\<\"Carrier siamese tub with tail\"\>", 
   ",", "\<\"Carrier siamese very long snake\"\>", 
   ",", "\<\"Carrier tie ship\"\>", ",", "\<\"Chemist\"\>", 
   ",", "\<\"Circle of fire\"\>", ",", "\<\"Cis-barge with nine\"\>", 
   ",", "\<\"Cis-block on long bookend\"\>", 
   ",", "\<\"Cis-boat amphisbaena\"\>", 
   ",", "\<\"Cis-boat trans-line tub\"\>", 
   ",", "\<\"Cis-boat with long\.b3 tail\"\>", 
   ",", "\<\"Cis-carrier down on table\"\>", ",", "\<\"Cis-carrier-tie\"\>", 
   ",", "\<\"Cis-carrier tie snake\"\>", 
   ",", "\<\"Cis-carrier up on table\"\>", 
   ",", "\<\"Cis-fuse with two tails\"\>", 
   ",", "\<\"Cis-long barge with tail\"\>", 
   ",", "\<\"Cis-long\:2074 hook with tail\"\>", 
   ",", "\<\"Cis-mango with tail\"\>", ",", "\<\"Cis-ship on table\"\>", 
   ",", "\<\"Cis-snake-tie\"\>", ",", "\<\"Cis-tub with long\:2074 tail\"\>", 
   ",", "\<\"Cis-very long hook with nine\"\>", ",", "\<\"Claw at claw\"\>", 
   ",", "\<\"Claw siamese tub with cape\"\>", 
   ",", "\<\"Claw with boat with tail\"\>", ",", "\<\"Claw with nine\"\>", 
   ",", "\<\"Crowd\"\>", ",", "\<\"Double claw\"\>", 
   ",", "\<\"Down snake on table\"\>", 
   ",", "\<\"Eater head siamese eater head\"\>", 
   ",", "\<\"Eater head siamese eater tail\"\>", 
   ",", "\<\"Eater head siamese long snake\"\>", ",", "\<\"Eater plug\"\>", 
   ",", "\<\"Eater tail siamese eater tail\"\>", 
   ",", "\<\"Eater tail siamese long snake\"\>", 
   ",", "\<\"Eater with head feather\"\>", 
   ",", "\<\"Eater with tail feather\"\>", ",", "\<\"Egyptian walk\"\>", 
   ",", "\<\"Fuse with tail and nine\"\>", 
   ",", "\<\"Fuse with tail and very long tail\"\>", 
   ",", "\<\"Fuse with two long tails\"\>", ",", "\<\"Gull with tub\"\>", 
   ",", "\<\"Honeybarge\"\>", 
   ",", "\<\"Hook-with-tail hook siamese snake\"\>", 
   ",", "\<\"Hook-with-tail tail siamese snake\"\>", 
   ",", "\<\"Hook with tail with cape\"\>", 
   ",", "\<\"Hook with two tails\"\>", ",", "\<\"Inflexion\"\>", 
   ",", "\<\"Integral with hook and tail\"\>", 
   ",", "\<\"Integral with tub and tail\"\>", 
   ",", "\<\"Long boat with long tail\"\>", ",", "\<\"Long hook line tub\"\>",
    ",", "\<\"Long\.b3 integral\"\>", ",", "\<\"Long integral with boat\"\>", 
   ",", "\<\"Long snake siamese long snake\"\>", 
   ",", "\<\"Long snake with feather\"\>", 
   ",", "\<\"Long tub-claw with tail\"\>", ",", "\<\"Mazing\"\>", 
   ",", "\<\"Newshuttle\"\>", ",", "\<\"p54 shuttle\"\>", 
   ",", "\<\"Pedestle\"\>", ",", "\<\"Pulsar quadrant\"\>", 
   ",", "\<\"Rotated table\"\>", ",", "\<\"Shillelagh siamese snake\"\>", 
   ",", "\<\"Ship tie snake\"\>", ",", "\<\"Siesta\"\>", 
   ",", "\<\"Snake bridge snake\"\>", 
   ",", "\<\"Snake siamese very long snake\"\>", ",", "\<\"Snorkel loop\"\>", 
   ",", "\<\"Teardrop with cape\"\>", ",", "\<\"Teardrop with claw\"\>", 
   ",", "\<\"Technician\"\>", ",", "\<\"Trans-barge with nine\"\>", 
   ",", "\<\"Trans-block on long bookend\"\>", 
   ",", "\<\"Trans-boat amphisbaena\"\>", 
   ",", "\<\"Trans-boat trans-line tub\"\>", 
   ",", "\<\"Trans-boat with long\.b3 tail\"\>", 
   ",", "\<\"Trans-carrier down on table\"\>", 
   ",", "\<\"Trans-carrier-tie\"\>", ",", "\<\"Trans-carrier tie snake\"\>", 
   ",", "\<\"Trans-carrier up on table\"\>", 
   ",", "\<\"Trans-long barge with tail\"\>", 
   ",", "\<\"Trans-mango with tail\"\>", ",", "\<\"Trans-ship on table\"\>", 
   ",", "\<\"Trans-snake-tie\"\>", 
   ",", "\<\"Trans-tub with long\:2074 tail\"\>", 
   ",", "\<\"Trans-very long hook with nine\"\>", 
   ",", "\<\"Tub bend line tub\"\>", 
   ",", "\<\"Tub with tail siamese snake\"\>", 
   ",", "\<\"Tub with tail with cape\"\>", 
   ",", "\<\"Tub with two down cis tails\"\>", 
   ",", "\<\"Tub with two down trans tails\"\>", 
   ",", "\<\"Tub with two up cis tails\"\>", 
   ",", "\<\"Tub with two up trans tails\"\>", ",", "\<\"Twelve loop\"\>", 
   ",", "\<\"Two pulsar quadrants\"\>", ",", "\<\"Up snake on table\"\>", 
   ",", "\<\"Very long claw with tail\"\>", ",", "\<\"Very long melusine\"\>",
    ",", "\<\"Very long prodigal\"\>", ",", "\<\"Buckingham's p13\"\>", 
   ",", "\<\"Extremely impressive\"\>", ",", "\<\"Pentant\"\>", 
   ",", "\<\"Unix\"\>", ",", "\<\"38P11.1\"\>", ",", "\<\"44P7.2\"\>", 
   ",", "\<\"Blinkers bit pole\"\>", ",", "\<\"Eater 3\"\>", 
   ",", "\<\"Four eaters hassling lumps of muck\"\>", ",", "\<\"Fox\"\>", 
   ",", "\<\"Pentoad\"\>", ",", "\<\"Tritoad\"\>", ",", "\<\"Why not\"\>", 
   ",", "\<\"Gourmet\"\>", ",", "\<\"Harbor\"\>", ",", "\<\"Sixty-nine\"\>", 
   ",", "\<\"Octagon 4\"\>", ",", "\<\"Eureka\"\>", 
   ",", "\<\"Heavyweight emulator\"\>", ",", "\<\"Lightweight emulator\"\>", 
   ",", "\<\"Middleweight emulator\"\>", 
   ",", "\<\"p29 pre-pulsar shuttle\"\>", ",", "\<\"Heart\"\>", 
   ",", "\<\"p47 pre-pulsar shuttle\"\>", ",", "\<\"Trice tongs\"\>", 
   ",", "\<\"p10 traffic light hassler\"\>", 
   ",", "\<\"p26 pre-pulsar shuttle\"\>", ",", "\<\"Tumbling T-tetson\"\>", 
   ",", "\<\"Two pre-L hasslers\"\>", ",", "\<\"6 bits\"\>", 
   ",", "\<\"Blinker puffer 1\"\>", ",", "\<\"Carnival shuttle\"\>", 
   ",", "\<\"Hectic\"\>", ",", "\<\"Jack\"\>", 
   ",", "\<\"p36 toad hassler\"\>", ",", "\<\"Sailboat\"\>", 
   ",", "\<\"Pulshuttle V\"\>", ",", "\<\"Stillater\"\>", 
   ",", "\<\"p55 pre-pulsar hassler\"\>", ",", "\<\"Achim's p4\"\>", 
   ",", "\<\"Jam\"\>", ",", "\<\"Mold\"\>", ",", "\<\"106P135\"\>", 
   ",", "\<\"119P4H1V0\"\>", ",", "\<\"1-2-3-4\"\>", 
   ",", "\<\"25P3H1V0.1\"\>", ",", "\<\"64P2H1V0\"\>", 
   ",", "\<\"84P3H1V0.1\"\>", ",", "\<\"Baker's dozen\"\>", 
   ",", "\<\"Bent keys\"\>", ",", "\<\"Big glider\"\>", 
   ",", "\<\"Caterer\"\>", ",", "\<\"Cross\"\>", 
   ",", "\<\"Double caterer\"\>", ",", "\<\"Fumarole\"\>", 
   ",", "\<\"Monogram\"\>", ",", "\<\"Odd keys\"\>", 
   ",", "\<\"p165 glider shuttle\"\>", ",", "\<\"Short keys\"\>", 
   ",", "\<\"Skewed traffic light\"\>", ",", "\<\"Statorless p6\"\>", 
   ",", "\<\"Tempest\"\>", ",", "\<\"T-nosed p4\"\>", 
   ",", "\<\"Triple caterer\"\>", ",", "\<\"Turning toads\"\>", 
   ",", "\<\"Turtle\"\>", ",", "\<\"Twirling T-tetsons 2\"\>", 
   ",", "\<\"Windmill\"\>", ",", "\<\"22P4.3\"\>", 
   ",", "\<\"Crystallization and decay oscillator\"\>", 
   ",", "\<\"Gunstar\"\>", ",", "\<\"Loaflipflop\"\>", 
   ",", "\<\"New five\"\>", ",", "\<\"P94S\"\>", 
   ",", "\<\"Two blockers hassling R-pentomino\"\>", 
   ",", "\<\"10-engine Cordership\"\>", ",", "\<\"13-engine Cordership\"\>", 
   ",", "\<\"44P5H2V0\"\>", ",", "\<\"Caber tosser 1\"\>", 
   ",", "\<\"Cord puller\"\>", ",", "\<\"Gunstar 2\"\>", 
   ",", "\<\"Parabolic sawtooth\"\>", ",", "\<\"Period-808 glider gun\"\>", 
   ",", "\<\"Period-856 glider gun\"\>", ",", "\<\"Sawtooth 1212\"\>", 
   ",", "\<\"Switchwave\"\>", ",", "\<\"117P9H3V0\"\>", ",", "\<\"20P4\"\>", 
   ",", "\<\"25P3H1V0.2\"\>", ",", "\<\"60P3H1V0.3\"\>", 
   ",", "\<\"70P2H1V0.1\"\>", ",", "\<\"70P5H2V0\"\>", 
   ",", "\<\"Blinker puffer 2\"\>", ",", "\<\"Brain\"\>", ",", "\<\"Dart\"\>",
    ",", "\<\"Edge-repair spaceship 1\"\>", ",", "\<\"Fly\"\>", 
   ",", "\<\"Hacksaw\"\>", ",", "\<\"Hivenudger\"\>", 
   ",", "\<\"Hivenudger 2\"\>", ",", "\<\"Laputa\"\>", 
   ",", "\<\"Middleweight volcano\"\>", 
   ",", "\<\"Non-monotonic spaceship 1\"\>", ",", "\<\"p120-based PRNG\"\>", 
   ",", "\<\"p44 pi-heptomino hassler\"\>", ",", "\<\"p50 glider shuttle\"\>",
    ",", "\<\"Pushalong 1\"\>", ",", "\<\"Ring of fire\"\>", 
   ",", "\<\"Sawtooth 1163\"\>", ",", "\<\"Sawtooth 1846\"\>", 
   ",", "\<\"Sawtooth 362\"\>", ",", "\<\"Sawtooth 562\"\>", 
   ",", "\<\"Sawtooth 633\"\>", ",", "\<\"Sidecar\"\>", ",", "\<\"Sparky\"\>",
    ",", "\<\"Toaster\"\>", ",", "\<\"Wickstretcher 1\"\>", 
   ",", "\<\"x66\"\>", ",", "\<\"2.3.3\"\>", 
   ",", "\<\"7-engine Cordership\"\>", ",", "\<\"A for all\"\>", 
   ",", "\<\"Boatstretcher 1\"\>", ",", "\<\"Bracket pulsar\"\>", 
   ",", "\<\"Bracket quasar\"\>", ",", "\<\"Cross 2\"\>", 
   ",", "\<\"Electric fence\"\>", ",", "\<\"Enterprise\"\>", 
   ",", "\<\"Glider pusher\"\>", ",", "\<\"Muttering moat 1\"\>", 
   ",", "\<\"Orion\"\>", ",", "\<\"Slow puffer 1\"\>", 
   ",", "\<\"Slow puffer 2\"\>", ",", "\<\"Spacefiller 1\"\>", 
   ",", "\<\"Star\"\>", ",", "\<\"Wing (spaceship)\"\>", ",", "\<\"101\"\>", 
   ",", "\<\"134P25\"\>", ",", "\<\"186P24\"\>", ",", "\<\"233P3H1V0\"\>", 
   ",", "\<\"Achim's other p16\"\>", ",", "\<\"Achim's p11\"\>", 
   ",", "\<\"Achim's p144\"\>", ",", "\<\"Achim's p16\"\>", 
   ",", "\<\"Achim's p8\"\>", ",", "\<\"Bistable switch\"\>", 
   ",", "\<\"Bottle\"\>", ",", "\<\"Crown\"\>", ",", "\<\"Fore and back\"\>", 
   ",", "\<\"Fountain\"\>", ",", "\<\"Four blinkers around four blocks\"\>", 
   ",", "\<\"Jason's p6\"\>", ",", "\<\"Metamorphosis II\"\>", 
   ",", "\<\"New gun 2\"\>", ",", "\<\"p110 traffic jam\"\>", 
   ",", "\<\"p124 lumps of muck hassler\"\>", ",", "\<\"p200 traffic jam\"\>",
    ",", "\<\"p42 glider shuttle\"\>", ",", "\<\"p48 toad hassler\"\>", 
   ",", "\<\"p50 traffic jam\"\>", ",", "\<\"p58 toadsucker\"\>", 
   ",", "\<\"Period-14 glider gun\"\>", ",", "\<\"Pseudo-barberpole\"\>", 
   ",", "\<\"Rumbling river 1\"\>", ",", "\<\"Ship in a bottle\"\>", 
   ",", "\<\"Smiley\"\>", ",", "\<\"Three-block shifter\"\>", 
   ",", "\<\"T-nosed p6\"\>", ",", "\<\"Traffic circle\"\>", 
   ",", "\<\"Trivial p6-1\"\>", 
   ",", "\<\"Twin bees shuttles hassling blinker\"\>", ",", "\<\"Vex\"\>", 
   ",", "\<\"124P21\"\>", ",", "\<\"145P20\"\>", ",", "\<\"22P36\"\>", 
   ",", "\<\"Coe ship\"\>", ",", "\<\"Four molds hassling eight blocks\"\>", 
   ",", "\<\"Heavyweight volcano\"\>", ",", "\<\"Max\"\>", 
   ",", "\<\"p156 Hans Leo hassler\"\>", ",", "\<\"p18 bi-block hassler\"\>", 
   ",", "\<\"p35 beehive hassler\"\>", ",", "\<\"p46-based PRNG\"\>", 
   ",", "\<\"p60 traffic light hassler\"\>", 
   ",", "\<\"Period-256 glider gun\"\>", ",", "\<\"Pi orbital\"\>", 
   ",", "\<\"R64\"\>", ",", "\<\"Spacefiller 2\"\>", ",", "\<\"Zweiback\"\>", 
   ",", "\<\"46P4H1V0\"\>", ",", "\<\"49P88\"\>", ",", "\<\"60P5H2V0\"\>", 
   ",", "\<\"B-52 bomber\"\>", ",", "\<\"Conduit 1\"\>", ",", "\<\"F117\"\>", 
   ",", "\<\"Fx119\"\>", ",", "\<\"Fx119 inserter\"\>", ",", "\<\"Fx158\"\>", 
   ",", "\<\"Fx77\"\>", ",", "\<\"Glider stopper\"\>", 
   ",", "\<\"Glider to block\"\>", ",", "\<\"Herschel receiver\"\>", 
   ",", "\<\"Herschel stopper\"\>", ",", "\<\"L112\"\>", ",", "\<\"L156\"\>", 
   ",", "\<\"p52 R-pentomino hassler\"\>", 
   ",", "\<\"p5760 unit Life cell\"\>", ",", "\<\"p61 Herschel loop 1\"\>", 
   ",", "\<\"p67 Herschel loop\"\>", ",", "\<\"Period-184 glider gun\"\>", 
   ",", "\<\"Period-246 glider gun\"\>", ",", "\<\"Period-50 glider gun\"\>", 
   ",", "\<\"Period-690 glider gun\"\>", ",", "\<\"R190\"\>", 
   ",", "\<\"RR56H\"\>", ",", "\<\"Snail\"\>", ",", "\<\"Star gate\"\>", 
   ",", "\<\"Swan\"\>", ",", "\<\"168P22.1\"\>", ",", "\<\"258P3\"\>", 
   ",", "\<\"258P3 on Achim's p11\"\>", ",", "\<\"29P9\"\>", 
   ",", "\<\"44P14\"\>", ",", "\<\"54P17.1\"\>", 
   ",", "\<\"Babbling brook 1\"\>", ",", "\<\"Champagne glass\"\>", 
   ",", "\<\"Coe's p8\"\>", ",", "\<\"Elkies' p5\"\>", ",", "\<\"F116\"\>", 
   ",", "\<\"F166\"\>", ",", "\<\"Fx153\"\>", ",", "\<\"Fx176\"\>", 
   ",", "\<\"Hebdarole\"\>", ",", "\<\"Herschel transmitter\"\>", 
   ",", "\<\"HF95P\"\>", ",", "\<\"HFx58B\"\>", ",", "\<\"Jaws\"\>", 
   ",", "\<\"Lx200\"\>", ",", "\<\"p15 pre-pulsar spaceship\"\>", 
   ",", "\<\"p57 Herschel loop 1\"\>", ",", "\<\"p59 Herschel loop 1\"\>", 
   ",", "\<\"p61 Herschel loop 2\"\>", ",", "\<\"p6 pipsquirter\"\>", 
   ",", "\<\"Period-24 glider gun\"\>", ",", "\<\"Period-44 glider gun\"\>", 
   ",", "\<\"Period-44 MWSS gun\"\>", ",", "\<\"PF35W\"\>", 
   ",", "\<\"RF48H\"\>", ",", "\<\"Rx202\"\>", ",", "\<\"Spider\"\>", 
   ",", "\<\"Vacuum (gun)\"\>", ",", "\<\"Waveguide 1\"\>", 
   ",", "\<\"28P7.1\"\>", ",", "\<\"28P7.2\"\>", ",", "\<\"37P10.1\"\>", 
   ",", "\<\"41P7.2\"\>", ",", "\<\"6-engine Cordership\"\>", 
   ",", "\<\"7-in-a-row Cordership\"\>", ",", "\<\"8-engine Cordership\"\>", 
   ",", "\<\"Bx125\"\>", ",", "\<\"Bx222\"\>", ",", "\<\"Callahan G-to-H\"\>",
    ",", "\<\"Deep cell\"\>", ",", "\<\"Diuresis\"\>", 
   ",", "\<\"p5 bouncer\"\>", ",", "\<\"p6 bouncer\"\>", 
   ",", "\<\"p7 bouncer\"\>", ",", "\<\"p8 bouncer\"\>", 
   ",", "\<\"Pre-pulsar spaceship\"\>", ",", "\<\"RNE-19T84\"\>", 
   ",", "\<\"Silver G-to-H\"\>", ",", "\<\"Silver's reflector\"\>", 
   ",", "\<\"Superfountain\"\>", ",", "\<\"Thumb 1\"\>", ",", "\<\"Wasp\"\>", 
   ",", "\<\"Canada goose\"\>", ",", "\<\"Glider emulator\"\>", 
   ",", "\<\"Orion 2\"\>", ",", "\<\"p49 bouncer loop\"\>", 
   ",", "\<\"p7 pipsquirter\"\>", ",", "\<\"134P39.1\"\>", 
   ",", "\<\"295P5H1V1\"\>", ",", "\<\"30P5H2V0\"\>", ",", "\<\"72P6H2V0\"\>",
    ",", "\<\"Catacryst\"\>", ",", "\<\"Crab\"\>", ",", "\<\"Dragon\"\>", 
   ",", "\<\"Edge-repair spaceship 2\"\>", ",", "\<\"Jason's p22\"\>", 
   ",", "\<\"Jason's p33\"\>", ",", "\<\"Metacatacryst\"\>", 
   ",", "\<\"p6 thumb\"\>", ",", "\<\"Period-22 glider gun\"\>", 
   ",", "\<\"Silver's p5\"\>", ",", "\<\"Weekender\"\>", ",", "\<\"Wings\"\>",
    ",", "\<\"55P9H3V0\"\>", ",", "\<\"Backrake 1\"\>", 
   ",", "\<\"Boojum reflector\"\>", ",", "\<\"Coolout Conjecture\"\>", 
   ",", "\<\"Frothing puffer\"\>", ",", "\<\"p130 shuttle\"\>", 
   ",", "\<\"Quad pseudo still life\"\>", 
   ",", "\<\"Triple pseudo still life\"\>", ",", "\<\"123P27.1\"\>", 
   ",", "\<\"31P8H4V0\"\>", ",", "\<\"50P35\"\>", ",", "\<\"69P48\"\>", 
   ",", "\<\"98P25\"\>", ",", "\<\"Blom\"\>", 
   ",", "\<\"Four eaters hassling four bookends\"\>", 
   ",", "\<\"Gabriel's p138\"\>", ",", "\<\"Karel's p15\"\>", 
   ",", "\<\"p15 bouncer\"\>", ",", "\<\"p24 shuttle\"\>", 
   ",", "\<\"(13,1)c/31 Pseudo-B climber\"\>", 
   ",", "\<\"6-engine Cordership gun\"\>", ",", "\<\"Fire-spitting\"\>", 
   ",", "\<\"Jason's p11\"\>", ",", "\<\"p4 pipsquirter\"\>", 
   ",", "\<\"p60 B-heptomino hassler\"\>", 
   ",", "\<\"Period-435 glider gun\"\>", ",", "\<\"V gun\"\>", 
   ",", "\<\"160P10H2V0\"\>", ",", "\<\"35P4H1V1\"\>", 
   ",", "\<\"3-engine Cordership\"\>", ",", "\<\"B29\"\>", 
   ",", "\<\"Blonker\"\>", ",", "\<\"Iwona\"\>", ",", "\<\"Jason's p36\"\>", 
   ",", "\<\"Justyna\"\>", ",", "\<\"p59 Herschel loop 2\"\>", 
   ",", "\<\"p6 shuttle\"\>", ",", "\<\"Period-156 glider gun\"\>", 
   ",", "\<\"23334M\"\>", ",", "\<\"33P4H1V1\"\>", ",", "\<\"37P7.1\"\>", 
   ",", "\<\"4-engine Cordership\"\>", ",", "\<\"5-engine Cordership\"\>", 
   ",", "\<\"7468M\"\>", ",", "\<\"86P5H1V1\"\>", ",", "\<\"94P27.1\"\>", 
   ",", "\<\"Crane\"\>", ",", "\<\"Halfmax\"\>", ",", "\<\"Lidka\"\>", 
   ",", "\<\"Moving sawtooth\"\>", ",", "\<\"One per generation\"\>", 
   ",", "\<\"p72 quasi-shuttle\"\>", ",", "\<\"Seal\"\>", 
   ",", "\<\"Switch engine channel\"\>", ",", "\<\"T-nosed p5\"\>", 
   ",", "\<\"(23,5)c/79 Herschel climber\"\>", 
   ",", "\<\"26-cell quadratic growth\"\>", ",", "\<\"274P6H1V0\"\>", 
   ",", "\<\"67P5H1V1\"\>", ",", "\<\"Cyclic\"\>", 
   ",", "\<\"Demultiplexer\"\>", ",", "\<\"F171\"\>", ",", "\<\"Honeybit\"\>",
    ",", "\<\"OTCA metapixel\"\>", ",", "\<\"Riley's breeder\"\>", 
   ",", "\<\"Ship+fishhook\"\>", ",", "\<\"Sidewinder\"\>", 
   ",", "\<\"52P84\"\>", ",", "\<\"78P70\"\>", ",", "\<\"Four eaters\"\>", 
   ",", "\<\"Karel's p177\"\>", ",", "\<\"Karel's p28\"\>", 
   ",", "\<\"Land of lakes\"\>", ",", "\<\"p25 pre-pulsar shuttle\"\>", 
   ",", "\<\"35201M\"\>", ",", "\<\"Bulldozer\"\>", ",", "\<\"Eve\"\>", 
   ",", "\<\"p1 megacell\"\>", ",", "\<\"Scot's p5\"\>", 
   ",", "\<\"128P10.2\"\>", ",", "\<\"38P7.2\"\>", ",", "\<\"44P12.3\"\>", 
   ",", "\<\"46P10\"\>", ",", "\<\"487-tick reflector\"\>", 
   ",", "\<\"48P22.1\"\>", ",", "\<\"56P6H1V0\"\>", ",", "\<\"68P32\"\>", 
   ",", "\<\"Beluchenko's p13\"\>", ",", "\<\"Beluchenko's p37\"\>", 
   ",", "\<\"Beluchenko's p40\"\>", ",", "\<\"Beluchenko's p51\"\>", 
   ",", "\<\"Maximum volatility gun\"\>", ",", "\<\"p11 pinwheel\"\>", 
   ",", "\<\"Period-59 glider gun\"\>", ",", "\<\"Period-88 glider gun\"\>", 
   ",", "\<\"Rectifier\"\>", ",", "\<\"110P62\"\>", ",", "\<\"24P10\"\>", 
   ",", "\<\"32829M\"\>", ",", "\<\"44P10\"\>", ",", "\<\"56P27\"\>", 
   ",", "\<\"58P5H1V1\"\>", ",", "\<\"6-in-a-row Cordership\"\>", 
   ",", "\<\"74P8H2V0\"\>", ",", "\<\"Beluchenko's other p37\"\>", 
   ",", "\<\"c/5 diagonal rake\"\>", ",", "\<\"Ed\"\>", ",", "\<\"Edna\"\>", 
   ",", "\<\"Ellison p4 HW emulator\"\>", ",", "\<\"Flying wing\"\>", 
   ",", "\<\"Fred\"\>", ",", "\<\"Merzenich's p11\"\>", 
   ",", "\<\"Merzenich's p31\"\>", ",", "\<\"Merzenich's p64\"\>", 
   ",", "\<\"p32 blinker hassler\"\>", ",", "\<\"p32 blinker hassler 2\"\>", 
   ",", "\<\"p44 traffic light hassler\"\>", 
   ",", "\<\"Period-45 glider gun\"\>", ",", "\<\"Sawtooth 260\"\>", 
   ",", "\<\"1\[Times]N quadratic growth\"\>", ",", "\<\"40514M\"\>", 
   ",", "\<\"5blink\"\>", ",", "\<\"77P6H1V1\"\>", ",", "\<\"G4 receiver\"\>",
    ",", "\<\"Glider to 2 blocks\"\>", ",", "\<\"Lobster\"\>", 
   ",", "\<\"Merzenich's p18\"\>", ",", "\<\"Montana\"\>", 
   ",", "\<\"p11 double-length signal injector\"\>", 
   ",", "\<\"p48 pi-heptomino hassler\"\>", ",", "\<\"R126\"\>", 
   ",", "\<\"Swine\"\>", ",", "\<\"37P4H1V0\"\>", ",", "\<\"86P6H3V0\"\>", 
   ",", "\<\"HLx111R\"\>", ",", "\<\"p26 dependent reflector loop\"\>", 
   ",", "\<\"p31 dependent reflector loop\"\>", ",", "\<\"p4 reflector\"\>", 
   ",", "\<\"Statorless p3\"\>", ",", "\<\"135-degree MWSS-to-G\"\>", 
   ",", "\<\"31.4\"\>", ",", "\<\"31c/240 Herschel-pair climber\"\>", 
   ",", "\<\"(34,7)c/156 Herschel climber\"\>", ",", "\<\"AK-94\"\>", 
   ",", "\<\"CC semi-Snark\"\>", ",", "\<\"Century eater\"\>", 
   ",", "\<\"Loafer\"\>", ",", "\<\"p43 Snark loop\"\>", 
   ",", "\<\"p67 Snark loop\"\>", ",", "\<\"Pi splitter\"\>", 
   ",", "\<\"Snark\"\>", ",", "\<\"24-cell quadratic growth\"\>", 
   ",", "\<\"25-cell quadratic growth\"\>", ",", "\<\"50P9\"\>", 
   ",", "\<\"65P48\"\>", ",", "\<\"90P51\"\>", 
   ",", "\<\"c/12 R-pentomino crawler\"\>", ",", "\<\"Honey thieves\"\>", 
   ",", "\<\"Jaydot\"\>", ",", "\<\"Pufferfish\"\>", 
   ",", "\<\"Pufferfish spaceship\"\>", 
   ",", "\<\"Switch engine ping-pong\"\>", ",", "\<\"Weekender distaff\"\>", 
   ",", "\<\"34P5H2V0\"\>", ",", "\<\"35P12.1\"\>", 
   ",", "\<\"45-degree MWSS-to-G\"\>", ",", "\<\"50P92.1\"\>", 
   ",", "\<\"53P13\"\>", ",", "\<\"B60\"\>", ",", "\<\"Beehive stopper\"\>", 
   ",", "\<\"BLx19R\"\>", ",", "\<\"BNE14T30\"\>", ",", "\<\"BRx46B\"\>", 
   ",", "\<\"CBx37C\"\>", ",", "\<\"G-to-LWSS\"\>", ",", "\<\"HL75P\"\>", 
   ",", "\<\"H-to-MWSS\"\>", ",", "\<\"Ocellus\"\>", 
   ",", "\<\"p18 honey farm hassler\"\>", 
   ",", "\<\"p29 traffic-farm hassler\"\>", 
   ",", "\<\"p58 pre-pulsar shuttle\"\>", ",", "\<\"Pony express\"\>", 
   ",", "\<\"Quadratic sawtooth\"\>", ",", "\<\"Rx262\"\>", 
   ",", "\<\"Sawtooth 177\"\>", ",", "\<\"Sawtooth 181\"\>", 
   ",", "\<\"Sawtooth 201\"\>", ",", "\<\"Sidesnagger\"\>", 
   ",", "\<\"Simkin glider gun\"\>", ",", "\<\"Simkin's p60\"\>", 
   ",", "\<\"SW1T43\"\>", ",", "\<\"Syringe\"\>", ",", "\<\"112P15\"\>", 
   ",", "\<\"132P7\"\>", ",", "\<\"(27,1)c/72 Herschel climber\"\>", 
   ",", "\<\"600P6H1V0\"\>", ",", "\<\"84P87\"\>", 
   ",", "\<\"Birthday puffer\"\>", ",", "\<\"Bx106\"\>", 
   ",", "\<\"Cloverleaf interchange\"\>", ",", "\<\"Copperhead\"\>", 
   ",", "\<\"Cthulhu\"\>", ",", "\<\"Fireship\"\>", 
   ",", "\<\"Grandfather problem\"\>", ",", "\<\"p11 bumper\"\>", 
   ",", "\<\"p15 bumper\"\>", ",", "\<\"p21 honey farm hassler\"\>", 
   ",", "\<\"p28 pre-pulsar shuttle\"\>", 
   ",", "\<\"p35 honey farm hassler\"\>", ",", "\<\"p4 bumper\"\>", 
   ",", "\<\"p5 bumper\"\>", ",", "\<\"p6 bumper\"\>", 
   ",", "\<\"p7 bumper\"\>", ",", "\<\"p8 bumper\"\>", 
   ",", "\<\"p9 bumper\"\>", ",", "\<\"Period-61 glider gun (2016)\"\>", 
   ",", "\<\"Professor\"\>", ",", "\<\"Rattlesnake\"\>", 
   ",", "\<\"Rich's p16\"\>", ",", "\<\"Scorbie Splitter\"\>", 
   ",", "\<\"Spaghetti monster\"\>", ",", "\<\"Statorless p5\"\>", 
   ",", "\<\"24827M\"\>", ",", "\<\"28P7.3\"\>", 
   ",", "\<\"2-engine Cordership\"\>", ",", "\<\"339P7H1V0\"\>", 
   ",", "\<\"CC semi-cenark\"\>", ",", "\<\"CP semi-cenark\"\>", 
   ",", "\<\"CP semi-Snark\"\>", ",", "\<\"F131\"\>", 
   ",", "\<\"p46 gliderless MWSS gun\"\>", ",", "\<\"p4 CC cenark\"\>", 
   ",", "\<\"p4 CP cenark\"\>", ",", "\<\"Period-92 glider gun\"\>", 
   ",", "\<\"Quadri-Snark\"\>", ",", "\<\"Runny nose\"\>", 
   ",", "\<\"Tanner's p46\"\>", ",", "\<\"Tremi-Snark\"\>", 
   ",", "\<\"209P8\"\>", ",", "\<\"33P3.1\"\>", ",", "\<\"34P14 shuttle\"\>", 
   ",", "\<\"42100M\"\>", ",", "\<\"54P3H1V0\"\>", ",", "\<\"55P10\"\>", 
   ",", "\<\"68P16\"\>", ",", "\<\"68P9\"\>", ",", "\<\"Bronco\"\>", 
   ",", "\<\"Cottonmouth\"\>", ",", "\<\"Homer\"\>", 
   ",", "\<\"Jormungant's G-to-H\"\>", ",", "\<\"MWSS behind Coe ship\"\>", 
   ",", "\<\"p13-assisted period-52 glider gun\"\>", 
   ",", "\<\"p36 shuttle\"\>", ",", "\<\"p3 bumper\"\>", 
   ",", "\<\"p46 gliderless LWSS gun\"\>", ",", "\<\"p4 bouncer\"\>", 
   ",", "\<\"p5 pipsquirter\"\>", ",", "\<\"p5 quinti-Snark\"\>", 
   ",", "\<\"p64 thunderbird hassler\"\>", ",", "\<\"p9 bouncer\"\>", 
   ",", "\<\"Period-33 glider gun\"\>", ",", "\<\"Period-52 glider gun\"\>", 
   ",", "\<\"Sir Robin\"\>", ",", "\<\"Wilma\"\>", ",", "\<\"180P8\"\>", 
   ",", "\<\"47575M\"\>", ",", "\<\"64P6\"\>", ",", "\<\"66P13\"\>", 
   ",", "\<\"74P85\"\>", ",", "\<\"David Hilbert\"\>", 
   ",", "\<\"Dueling banjos\"\>", ",", "\<\"p49 skewed pulsar hassler\"\>", 
   ",", "\<\"R49\"\>", ",", "\<\"Scholar\"\>", ",", "\<\"104P9\"\>", 
   ",", "\<\"186P7H2V0\"\>", ",", "\<\"409P6H1V0\"\>", ",", "\<\"49768M\"\>", 
   ",", "\<\"4-in-a-row Cordership\"\>", ",", "\<\"Anura\"\>", 
   ",", "\<\"Bandersnatch\"\>", ",", "\<\"Beehive push catalyst\"\>", 
   ",", "\<\"Doo-dah\"\>", ",", "\<\"L122\"\>", 
   ",", "\<\"p143 Bandersnatch loop\"\>", 
   ",", "\<\"p7-assisted period-28 glider gun\"\>", ",", "\<\"Rob's p16\"\>", 
   ",", "\<\"Silverfish\"\>", ",", "\<\"Soba\"\>", 
   ",", "\<\"Unnamed tagalong 23P4H2V0\"\>", ",", "\<\"50093M\"\>", 
   ",", "\<\"52513M\"\>", ",", "\<\"62P7\"\>", ",", "\<\"66P62\"\>", 
   ",", "\<\"72P21\"\>", ",", "\<\"754P7\"\>", ",", "\<\"Gallus\"\>", 
   ",", "\<\"Nihonium\"\>", ",", "\<\"p11 bouncer\"\>", 
   ",", "\<\"p11 domino sparker\"\>", ",", "\<\"p128 wing shuttle\"\>", 
   ",", "\<\"p196 pi-heptomino hassler\"\>", 
   ",", "\<\"p21 B-heptomino hassler\"\>", 
   ",", "\<\"p32 honey farm hassler\"\>", ",", "\<\"p3 pipsquirter\"\>", 
   ",", "\<\"p486 R-pentomino hassler\"\>", ",", "\<\"p4 syringe\"\>", 
   ",", "\<\"p576 R-pentomino hassler\"\>", 
   ",", "\<\"p76 pi-heptomino hassler\"\>", 
   ",", "\<\"p96 honey farm hassler\"\>", 
   ",", "\<\"Period-117 glider gun\"\>", ",", "\<\"Period-144 glider gun\"\>",
    ",", "\<\"Period-54 glider gun\"\>", ",", "\<\"Period-55 glider gun\"\>", 
   ",", "\<\"Raucci's p217\"\>", ",", "\<\"Raucci's p74\"\>", 
   ",", "\<\"Sprayer\"\>", ",", "\<\"Strictly volatile p4\"\>", 
   ",", "\<\"T-nosed p7\"\>", ",", "\<\"Traffic stop\"\>", 
   ",", "\<\"112P57\"\>", ",", "\<\"120P34\"\>", 
   ",", "\<\"20-cell quadratic growth\"\>", 
   ",", "\<\"21-cell quadratic growth\"\>", 
   ",", "\<\"22-cell quadratic growth\"\>", ",", "\<\"232P7H3V0\"\>", 
   ",", "\<\"255P132\"\>", ",", "\<\"30P25\"\>", ",", "\<\"30P3\"\>", 
   ",", "\<\"32P21\"\>", ",", "\<\"32P4H2V0\"\>", ",", "\<\"34P20\"\>", 
   ",", "\<\"34P7\"\>", ",", "\<\"35P12H6V0\"\>", ",", "\<\"36P25\"\>", 
   ",", "\<\"42P14\"\>", ",", "\<\"43P54\"\>", ",", "\<\"52P44\"\>", 
   ",", "\<\"54P94\"\>", ",", "\<\"55P23\"\>", ",", "\<\"58P8H4V0\"\>", 
   ",", "\<\"62P83\"\>", ",", "\<\"66P106\"\>", ",", "\<\"70P23\"\>", 
   ",", "\<\"70P26\"\>", ",", "\<\"74P127\"\>", ",", "\<\"74P34\"\>", 
   ",", "\<\"76P86\"\>", ",", "\<\"84P199\"\>", ",", "\<\"92P23\"\>", 
   ",", "\<\"92P59\"\>", ",", "\<\"Charity's p16\"\>", 
   ",", "\<\"Chucklebait\"\>", ",", "\<\"CL48C\"\>", 
   ",", "\<\"Diamondback\"\>", ",", "\<\"Grid's p16\"\>", 
   ",", "\<\"HRx65R\"\>", ",", "\<\"HRx74B\"\>", ",", "\<\"Meatball\"\>", 
   ",", "\<\"NW-2T16\"\>", ",", "\<\"P10 domino fountain\"\>", 
   ",", "\<\"p111 R-pentomino hassler\"\>", ",", "\<\"p112 puffer\"\>", 
   ",", "\<\"p11 thumb\"\>", ",", "\<\"p129 R-pentomino hassler\"\>", 
   ",", "\<\"p146 pi-heptomino hassler\"\>", 
   ",", "\<\"P16-assisted period-32 glider gun\"\>", 
   ",", "\<\"p23 honey farm hassler\"\>", ",", "\<\"p28 block puffer\"\>", 
   ",", "\<\"p39 pi-heptomino hassler\"\>", 
   ",", "\<\"p43 pi-heptomino hassler\"\>", 
   ",", "\<\"p45 pi-heptomino hassler\"\>", 
   ",", "\<\"p49 R-pentomino hassler\"\>", 
   ",", "\<\"p4-assisted period-28 glider gun\"\>", 
   ",", "\<\"p58 pi-heptomino hassler\"\>", 
   ",", "\<\"p59 dependent reflector loop\"\>", 
   ",", "\<\"P6 domino fountain\"\>", ",", "\<\"p6 honey farm hassler\"\>", 
   ",", "\<\"p71 honey farm hassler\"\>", 
   ",", "\<\"p73 lumps of muck hassler\"\>", 
   ",", "\<\"p75 I-heptomino hassler\"\>", 
   ",", "\<\"p79 pi-heptomino hassler\"\>", 
   ",", "\<\"p82 pi-heptomino hassler\"\>", 
   ",", "\<\"p84 honey farm hassler\"\>", 
   ",", "\<\"p85 R-pentomino hassler\"\>", 
   ",", "\<\"p86 R-pentomino hassler\"\>", ",", "\<\"p8 glider reflector\"\>",
    ",", "\<\"p94 R-pentomino hassler\"\>", 
   ",", "\<\"Period-113 glider gun\"\>", ",", "\<\"Period-25 glider gun\"\>", 
   ",", "\<\"Period-27 glider gun\"\>", ",", "\<\"Period-34 glider gun\"\>", 
   ",", "\<\"Period-43 glider gun\"\>", ",", "\<\"Period-48 glider gun\"\>", 
   ",", "\<\"Period-51 glider gun\"\>", ",", "\<\"Quartermax\"\>", 
   ",", "\<\"Raucci's p102\"\>", ",", "\<\"Raucci's p38\"\>", 
   ",", "\<\"Speed tunnel\"\>", ",", "\<\"Taco\"\>", 
   ",", "\<\"Twin bees shuttle on 21P4.1\"\>", 
   ",", "\<\"Unique father problem\"\>", 
   ",", "\<\"Unsynthesizable oscillator 1\"\>", 
   ",", "\<\"0-degree colour-preserving reflector (March 2023)\"\>", 
   ",", "\<\"112P23\"\>", ",", "\<\"116P101\"\>", ",", "\<\"204P41\"\>", 
   ",", "\<\"246P41\"\>", ",", "\<\"32P21 phase-shifting p5\"\>", 
   ",", "\<\"42P38\"\>", ",", "\<\"44P49\"\>", ",", "\<\"51P384\"\>", 
   ",", "\<\"72P119\"\>", ",", "\<\"86P107\"\>", ",", "\<\"94P53\"\>", 
   ",", "\<\"Charity's p25\"\>", ",", "\<\"Charity's p30\"\>", 
   ",", "\<\"Cribbage\"\>", ",", "\<\"G-to-LWSS (2023)\"\>", 
   ",", "\<\"G-to-pi catalyst (August 2023)\"\>", 
   ",", "\<\"Mold on fire-spitting\"\>", ",", "\<\"Odd traffic stop\"\>", 
   ",", "\<\"p126 R-pentomino hassler\"\>", ",", "\<\"p13 domino sparker\"\>",
    ",", "\<\"p140 two-glider octomino hassler\"\>", 
   ",", "\<\"p16 century shuttle\"\>", ",", "\<\"p17 R-pentomino hassler\"\>",
    ",", "\<\"p224 lumps of muck hassler\"\>", 
   ",", "\<\"p24 gliderless LWSS gun\"\>", 
   ",", "\<\"p26 honey farm hassler\"\>", 
   ",", "\<\"p280 U-turner hassler\"\>", 
   ",", "\<\"p41 pi-heptomino hassler\"\>", 
   ",", "\<\"p47 lumps of muck hassler\"\>", 
   ",", "\<\"p49 pi-heptomino hassler\"\>", 
   ",", "\<\"p59 pi-heptomino hassler\"\>", 
   ",", "\<\"p67 B-heptomino hassler\"\>", ",", "\<\"p68 century hassler\"\>",
    ",", "\<\"p76 pi-heptomino shuttle\"\>", 
   ",", "\<\"p82 lumps of muck hassler\"\>", 
   ",", "\<\"p93 R-pentomino hassler\"\>", 
   ",", "\<\"Period-201 glider gun\"\>", ",", "\<\"Period-41 glider gun\"\>", 
   ",", "\<\"Period-49 glider gun (April 2023)\"\>", 
   ",", "\<\"Period-61 glider gun (2023)\"\>", ",", "\<\"Snark64\"\>", 
   ",", "\<\"Walrus\"\>", ",", "\<\"tnosep8sparker\"\>", 
   ",", "\<\"50p8sparker\"\>", ",", "\<\"36p8sparker\"\>", 
   ",", "\<\"p10lonedotsparker\"\>", ",", "\<\"p7honeyfarmhassler\"\>", 
   ",", "\<\"p8honeyfarmhassler\"\>", ",", "\<\"p9honeyfarmhassler\"\>", 
   ",", "\<\"p9honeyfarmhassler2\"\>", ",", "\<\"p9honeyfarmhassler3\"\>", 
   ",", "\<\"p10honeyfarmhassler\"\>", ",", "\<\"p11honeyfarmhasslers\"\>", 
   ",", "\<\"p12honeyfarmhassler\"\>", ",", "\<\"p12honeyfarmsparker\"\>", 
   ",", "\<\"p12honeyfarmhassler2\"\>", ",", "\<\"p12honeyfarmhassler3\"\>", 
   ",", "\<\"p22honeyfarmhassler\"\>", ",", "\<\"p27bananasparker\"\>", 
   ",", "\<\"p27honeyfarmhassler\"\>", ",", "\<\"p27d2honeyfarmhassler\"\>", 
   ",", "\<\"p33honeyfarmhassler2\"\>", ",", "\<\"p34honeyfarmhassler\"\>", 
   ",", "\<\"p34mod17honeyfarmhassler\"\>", 
   ",", "\<\"p34honeyfarmhassler2\"\>", ",", "\<\"p39honeyfarmhassler\"\>", 
   ",", "\<\"p43honeyfarmhassler\"\>", ",", "\<\"p44honeyfarmhassler2\"\>", 
   ",", "\<\"p46honeyfarmhassler2\"\>", ",", "\<\"p46longbunhassler\"\>", 
   ",", "\<\"p47honeyfarmhassler\"\>", ",", "\<\"p49honeyfarmhassler\"\>", 
   ",", "\<\"84p51\"\>", ",", "\<\"p51honeyfarmhassler\"\>", 
   ",", "\<\"p52honeyfarmhassler2\"\>", ",", "\<\"p52honeyfarmhassler3\"\>", 
   ",", "\<\"p52honeyfarmhassler4\"\>", 
   ",", "\<\"p54honeyfarmandbhassler\"\>", ",", "\<\"p56honeyfarmhassler\"\>",
    ",", "\<\"p56c2honeyfarmhassler\"\>", ",", "\<\"p57honeyfarmhassler\"\>", 
   ",", "\<\"p58honeyfarmhassler\"\>", ",", "\<\"p62honeyfarmhassler\"\>", 
   ",", "\<\"p64honeyfarmhassler\"\>", ",", "\<\"p64honeyfarmhassler2\"\>", 
   ",", "\<\"p65honeyfarmhassler\"\>", ",", "\<\"p65honeyfarmhassler2\"\>", 
   ",", "\<\"p66honeyfarmhassler\"\>", ",", "\<\"p69honeyfarmhassler\"\>", 
   ",", "\<\"p70vsparker\"\>", ",", "\<\"p70honeyfarmhassler\"\>", 
   ",", "\<\"p72honeyfarmhassler\"\>", ",", "\<\"p72honeyfarmhassler2\"\>", 
   ",", "\<\"p73honeyfarmhassler\"\>", ",", "\<\"p74honeyfarmhassler\"\>", 
   ",", "\<\"cappedp74gun\"\>", ",", "\<\"p75honeyfarmhassler\"\>", 
   ",", "\<\"p77honeyfarmhassler\"\>", ",", "\<\"p77honeyfarmhassler2\"\>", 
   ",", "\<\"p80honeyfarmhassler\"\>", ",", "\<\"p80honeyfarmhassler2\"\>", 
   ",", "\<\"p84honeyfarmdiagonalflipper\"\>", 
   ",", "\<\"p90honeyfarmhassler\"\>", ",", "\<\"p90honeyfarmhassler2\"\>", 
   ",", "\<\"p91honeyfarmhassler\"\>", ",", "\<\"cappedp91gun\"\>", 
   ",", "\<\"p96honeyfarmhassler2\"\>", ",", "\<\"p96honeyfarmhassler3\"\>", 
   ",", "\<\"p97honeyfarmhassler\"\>", ",", "\<\"p100honeyfarmhassler2\"\>", 
   ",", "\<\"p102honeyfarmhassler\"\>", ",", "\<\"p106almostglidergun\"\>", 
   ",", "\<\"p108honeyfarmhassler\"\>", ",", "\<\"p110honeyfarmhassler\"\>", 
   ",", "\<\"p110honeyfarmhassler2\"\>", ",", "\<\"p110honeyfarmhassler3\"\>",
    ",", "\<\"p120honeyfarmhassler\"\>", ",", "\<\"p120honeyfarmhassler2\"\>",
    ",", "\<\"p128honeyfarmhassler\"\>", ",", "\<\"p130honeyfarmhassler\"\>", 
   ",", "\<\"p143honeyfarmhassler\"\>", ",", "\<\"p147honeyfarmhassler\"\>", 
   ",", "\<\"p182honeyfarmhassler\"\>", ",", "\<\"p30honeyfarmshuttle\"\>", 
   ",", "\<\"p32doubleshuttle\"\>", ",", "\<\"p36honeyfarmhassler\"\>", 
   ",", "\<\"p36honeyfarmhassler2\"\>", ",", "\<\"p36honeyfarmhassler6\"\>", 
   ",", "\<\"p36honeyfarmshuttlejp21\"\>", ",", "\<\"p38honeyfarmshuttle\"\>",
    ",", "\<\"p38honeyfarmshuttle2\"\>", ",", "\<\"p40honeyfarmhassler4\"\>", 
   ",", "\<\"p40honeyfarmhassler\"\>", 
   ",", "\<\"p40andp50dominofountains\"\>", 
   ",", "\<\"p40honeyfarmshuttle\"\>", ",", "\<\"p44honeyfarmhassler\"\>", 
   ",", "\<\"p48honeyfarmhassler\"\>", ",", "\<\"p52honeyfarmhassler\"\>", 
   ",", "\<\"p60honeyfarmshuttle\"\>", ",", "\<\"p60honeyfarmshuttle2\"\>", 
   ",", "\<\"p136honeyfarmshuttle\"\>", ",", "\<\"p156honeyfarmhassler\"\>", 
   ",", "\<\"p168honeyfarmhassler\"\>", ",", "\<\"p220honeyfarmshuttle\"\>", 
   ",", "\<\"p8rpentominohassler\"\>", ",", "\<\"p13rpentominohassler\"\>", 
   ",", "\<\"p23rpentominohassler\"\>", ",", "\<\"p24rpentominohassler\"\>", 
   ",", "\<\"p24rpentominohassler2\"\>", ",", "\<\"p30rpentominohassler\"\>", 
   ",", "\<\"p30rpentominohassler2\"\>", ",", "\<\"p31rpentominohassler\"\>", 
   ",", "\<\"p32rpentominohassler\"\>", ",", "\<\"p32rpentominohassler2\"\>", 
   ",", "\<\"p35rpentominohassler\"\>", ",", "\<\"p35rpentominohassler2\"\>", 
   ",", "\<\"p35rpentominohassler3\"\>", ",", "\<\"p38rpentominohassler\"\>", 
   ",", "\<\"p44rpentominohassler\"\>", ",", "\<\"p45rpentominohassler\"\>", 
   ",", "\<\"p49singlerpentominohassler\"\>", 
   ",", "\<\"p50rpentominohassler\"\>", ",", "\<\"p54rpentominohassler\"\>", 
   ",", "\<\"p57rpentominohassler\"\>", ",", "\<\"p60rpentominohassler\"\>", 
   ",", "\<\"p60rpentominohassler2\"\>", ",", "\<\"p64rpentominohassler2\"\>",
    ",", "\<\"p70rpentominoshuttle\"\>", ",", "\<\"p76rpentominoshuttle\"\>", 
   ",", "\<\"p78rpentominohassler\"\>", ",", "\<\"p86rpentominohassler2\"\>", 
   ",", "\<\"p88rpentominoshuttle\"\>", ",", "\<\"p88rpentominohassler\"\>", 
   ",", "\<\"p90rpentominohassler\"\>", ",", "\<\"p91rpentominohasslers\"\>", 
   ",", "\<\"p96rpentominohassler\"\>", ",", "\<\"p102rpentominohassler\"\>", 
   ",", "\<\"p104rpentominohassler\"\>", ",", "\<\"p105rpentominohassler\"\>",
    ",", "\<\"period108glidergun\"\>", ",", "\<\"p109rpentominohassler\"\>", 
   ",", "\<\"p112rpentominohassler\"\>", ",", "\<\"p120rpentominohassler\"\>",
    ",", "\<\"p122rpentominohassler\"\>", 
   ",", "\<\"p127rpentominohassler\"\>", ",", "\<\"p135rpentominohassler\"\>",
    ",", "\<\"p140rpentominohassler\"\>", 
   ",", "\<\"p140rpentominoshuttle\"\>", ",", "\<\"cappedp140gun\"\>", 
   ",", "\<\"p146rpentominohassler\"\>", ",", "\<\"p147rpentominohassler\"\>",
    ",", "\<\"p150rpentominohasslerglidergun\"\>", 
   ",", "\<\"p150rpentominohassler\"\>", ",", "\<\"p156rpentominohassler\"\>",
    ",", "\<\"p166rpentominohassler\"\>", 
   ",", "\<\"p175rpentominohassler\"\>", ",", "\<\"p176rpentominoloop\"\>", 
   ",", "\<\"98p201\"\>", ",", "\<\"p253rpentominohassler\"\>", 
   ",", "\<\"p444rpentominoshuttle\"\>", ",", "\<\"p13piheptominowick\"\>", 
   ",", "\<\"p13piheptominohassler\"\>", ",", "\<\"p14piheptominohassler\"\>",
    ",", "\<\"p15piheptominohassler2\"\>", 
   ",", "\<\"p18piheptominohassler\"\>", ",", "\<\"p20piheptominohassler\"\>",
    ",", "\<\"p25piheptominohassler\"\>", 
   ",", "\<\"p33piheptominohassler\"\>", ",", "\<\"p36piheptominohassler\"\>",
    ",", "\<\"p36piheptominohassler2\"\>", 
   ",", "\<\"p39piheptominohassler2\"\>", 
   ",", "\<\"p39c4piheptominohassler\"\>", 
   ",", "\<\"p46piheptominohassler\"\>", 
   ",", "\<\"p46piheptominohassler2\"\>", 
   ",", "\<\"p47piheptominohassler\"\>", ",", "\<\"p52piheptominohassler\"\>",
    ",", "\<\"p52piheptominohassler2\"\>", 
   ",", "\<\"p53piheptominohassler\"\>", 
   ",", "\<\"p53piheptominohassler2\"\>", 
   ",", "\<\"p55piheptominohassler2\"\>", 
   ",", "\<\"p60piheptominohassler\"\>", 
   ",", "\<\"p60piheptominohassler2\"\>", 
   ",", "\<\"p61piheptominohassler\"\>", ",", "\<\"p65piheptominohassler\"\>",
    ",", "\<\"p68piheptominohassler\"\>", 
   ",", "\<\"p68piheptominohassler2\"\>", 
   ",", "\<\"p69piheptominohassler\"\>", ",", "\<\"p70piheptominohassler\"\>",
    ",", "\<\"p70piheptominohassler3\"\>", 
   ",", "\<\"p72lumpsofmuckhassler\"\>", 
   ",", "\<\"p72piheptominohassler2\"\>", 
   ",", "\<\"p76piheptominohassler4\"\>", ",", "\<\"p77pihassler\"\>", 
   ",", "\<\"p78piheptominohassler\"\>", 
   ",", "\<\"p78piheptominohassler2\"\>", 
   ",", "\<\"p79piheptominohassler2\"\>", ",", "\<\"p79picenturyhassler\"\>", 
   ",", "\<\"p80pihassler\"\>", ",", "\<\"p81piheptominohassler\"\>", 
   ",", "\<\"p88piblonktiehassler\"\>", ",", "\<\"p90piheptominohassler\"\>", 
   ",", "\<\"p92piheptominohassler\"\>", ",", "\<\"p95piheptominohassler\"\>",
    ",", "\<\"p100piheptominohassler\"\>", 
   ",", "\<\"p104piheptominohassler\"\>", 
   ",", "\<\"p108piheptominohassler\"\>", 
   ",", "\<\"p112piheptominohassler2\"\>", 
   ",", "\<\"p117piheptominohassler\"\>", 
   ",", "\<\"p121piheptominohassler\"\>", 
   ",", "\<\"p125piheptominohassler2\"\>", 
   ",", "\<\"p126piheptominohassler3\"\>", 
   ",", "\<\"p64andp128piheptominohasslers\"\>", 
   ",", "\<\"p128piheptominohassler2\"\>", 
   ",", "\<\"p129piheptominohassler\"\>", 
   ",", "\<\"p129piheptominohassler2\"\>", 
   ",", "\<\"p132piheptominohassler2\"\>", 
   ",", "\<\"p148piheptominohassler\"\>", 
   ",", "\<\"p158piheptominohassler\"\>", 
   ",", "\<\"p159piheptominohassler\"\>", 
   ",", "\<\"p160piheptominoshuttle\"\>", ",", "\<\"p182pihassler\"\>", 
   ",", "\<\"p186pihassler\"\>", ",", "\<\"p9lumpsofmuckhassler\"\>", 
   ",", "\<\"p12lumpsofmuckhassler\"\>", ",", "\<\"p13lumpsofmuckhassler\"\>",
    ",", "\<\"p21lomhassler2\"\>", ",", "\<\"p22lumpsofmuckshuttle\"\>", 
   ",", "\<\"p25lumpsofmuckhassler\"\>", 
   ",", "\<\"p25singlelumpsofmuckhassler\"\>", 
   ",", "\<\"p27lumpsofmuckhassler\"\>", ",", "\<\"p34lumpsofmuckhassler\"\>",
    ",", "\<\"p35lumpsofmucksparker\"\>", 
   ",", "\<\"p35lumpsofmuckhassler\"\>", ",", "\<\"p36lumpsofmuckhassler\"\>",
    ",", "\<\"p37lumpsofmuckhassler\"\>", 
   ",", "\<\"p40lumpsofmuckhassler\"\>", 
   ",", "\<\"p40lumpsofmuckhassler2\"\>", 
   ",", "\<\"p42lumpsofmuckhassler\"\>", ",", "\<\"p42lumpsofmuckshuttle\"\>",
    ",", "\<\"p42lumpsofmuckhassler2\"\>", 
   ",", "\<\"p46lumpsofmuckhassler\"\>", 
   ",", "\<\"p46lumpsofmuckhassler2\"\>", 
   ",", "\<\"p46lumpsofmuckhassler3\"\>", 
   ",", "\<\"p47lumpsofmuckhassler2\"\>", 
   ",", "\<\"p49lumpsofmuckhassler\"\>", 
   ",", "\<\"p49lumpsofmuckhassler2\"\>", 
   ",", "\<\"p51lumpsofmuckhassler\"\>", ",", "\<\"p52lumpsofmuckhassler\"\>",
    ",", "\<\"p62lumpsofmuckhassler\"\>", 
   ",", "\<\"p66lumpsofmuckhassler\"\>", ",", "\<\"p68lumpsofmuckhassler\"\>",
    ",", "\<\"p68lumpsofmuckhassler2\"\>", 
   ",", "\<\"p70lumpsofmuckhassler\"\>", ",", "\<\"p75lumpsofmuckhassler\"\>",
    ",", "\<\"p76lumpsofmuckhassler\"\>", 
   ",", "\<\"p80singlelumpsofmuckhassler\"\>", 
   ",", "\<\"p80lumpsofmuckhassler\"\>", 
   ",", "\<\"p80lumpsofmuckhassler2\"\>", 
   ",", "\<\"p84lumpsofmuckhassler\"\>", ",", "\<\"p88lumpsofmuckhassler\"\>",
    ",", "\<\"p88lumpsofmuckhassler2\"\>", 
   ",", "\<\"p92lumpsofmuckhassler\"\>", ",", "\<\"p96lumpsofmuckhassler\"\>",
    ",", "\<\"p96lumpsofmuckhassler2\"\>", 
   ",", "\<\"p98lumpsofmuckhassler\"\>", 
   ",", "\<\"p100lumpsofmuckhassler\"\>", 
   ",", "\<\"p100lumpsofmuckhassler2\"\>", 
   ",", "\<\"p104lumpsofmuckhassler\"\>", 
   ",", "\<\"p104lumpsofmuckshuttle\"\>", 
   ",", "\<\"p105lumpsofmuckhassler\"\>", 
   ",", "\<\"p105lumpsofmuckhassler2\"\>", 
   ",", "\<\"p108lumpsofmuckhassler\"\>", 
   ",", "\<\"p110lumpsofmuckhassler\"\>", 
   ",", "\<\"p110lumpsofmuckhassler2\"\>", 
   ",", "\<\"p115lumpsofmuckhassler\"\>", 
   ",", "\<\"p138lumpsofmuckhassler\"\>", 
   ",", "\<\"p140lumpsofmuckhassler\"\>", 
   ",", "\<\"p184lumpsofmuckhassler\"\>", ",", "\<\"p14centuryhassler\"\>", 
   ",", "\<\"p16centuryhassler\"\>", ",", "\<\"p28centuryhassler\"\>", 
   ",", "\<\"p28centuryshuttle\"\>", ",", "\<\"p45picenturyhassler\"\>", 
   ",", "\<\"p54picenturyhassler\"\>", ",", "\<\"p72centurylomhassler\"\>", 
   ",", "\<\"p72centuryhassler\"\>", ",", "\<\"p86trafficlighthassler\"\>", 
   ",", "\<\"p110centuryshuttle\"\>", ",", "\<\"p139centuryhassler\"\>", 
   ",", "\<\"p174centuryshuttle\"\>", ",", "\<\"cl48cloop\"\>", 
   ",", "\<\"p48bheptominohassler\"\>", ",", "\<\"p68bheptominohassler\"\>", 
   ",", "\<\"p80twinbeesshuttle\"\>", ",", "\<\"p36winghassler\"\>", 
   ",", "\<\"p48rpentominohassler2\"\>", ",", "\<\"p48longbunhassler\"\>", 
   ",", "\<\"p80procrastinatorhassler\"\>", ",", "\<\"p12blonktiehassler\"\>",
    ",", "\<\"p16uturnerhassler\"\>", ",", "\<\"p60uturnerhassler\"\>", 
   ",", "\<\"p126uturnerhassler\"\>", ",", "\<\"p144uturnerhassler\"\>", 
   ",", "\<\"p164octomino2hassler\"\>", ",", "\<\"prepulsarshuttle22\"\>", 
   ",", "\<\"p26prepulsarhassler2\"\>", ",", "\<\"prepulsarshuttle32\"\>", 
   ",", "\<\"prepulsarshuttle35\"\>", ",", "\<\"prepulsarshuttle36\"\>", 
   ",", "\<\"prepulsarshuttle36reduced\"\>", 
   ",", "\<\"prepulsarshuttle40\"\>", ",", "\<\"prepulsarshuttle42\"\>", 
   ",", "\<\"p48prepulsarshuttle\"\>", ",", "\<\"p55prepulsarshuttle\"\>", 
   ",", "\<\"prepulsarshuttle60\"\>", ",", "\<\"prepulsarshuttle64\"\>", 
   ",", "\<\"prepulsarshuttle65\"\>", ",", "\<\"prepulsarshuttle88\"\>", 
   ",", "\<\"prepulsarshuttle90\"\>", 
   ",", "\<\"p34dependentreflectorloop\"\>", 
   ",", "\<\"p53dependentreflectorloop\"\>", 
   ",", "\<\"135-degree LWSS-to-G\"\>", ",", "\<\"139P7H1V0\"\>", 
   ",", "\<\"409P7\"\>", ",", "\<\"86P118\"\>", ",", "\<\"Goban\"\>", 
   ",", "\<\"Honey ring\"\>", ",", "\<\"L141\"\>", 
   ",", "\<\"Lx65 duplicator\"\>", ",", "\<\"P56 phi sparker\"\>", 
   ",", "\<\"Period-36 glider gun\"\>", ",", "\<\"Period-53 glider gun\"\>", 
   ",", "\<\"Spartan G-to-W-to-H\"\>", ",", "\<\"Tarantula\"\>", 
   ",", "\<\"Period-20 glider gun\"\>", ",", "\<\"Period-40 glider gun\"\>", 
   ",", "\<\"P21 B-heptomino hassler\"\>", ",", "\<\"58P37\"\>", 
   ",", "\<\"Period-16 glider gun\"\>", ",", "\<\"Period-15 glider gun\"\>", 
   ",", "\<\"Period-47 glider gun\"\>", ",", "\<\"Period-35 glider gun\"\>", 
   ",", "\<\"p12rpentominohassler-01\"\>", 
   ",", "\<\"p12rpentominohassler-02\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.95565741860458*^9, 3.955657426080287*^9}},
 CellLabel->"Out[89]=",ExpressionUUID->"eaba471a-2546-4701-80d0-9981410d651d"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", "\"\<LifeWiki Dataset 2025\>\"", "]"}], 
  "[", "\"\<30P5H2V0\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.955657509444154*^9, 3.955657511073365*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"bd54e4c8-fb18-4bce-972c-33a6619cf1a0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"30P5H2V0\"\>"}], ",", 
   RowBox[{"\<\"Year\"\>", "\[Rule]", "2000"}], ",", 
   RowBox[{"\<\"Class\"\>", "\[Rule]", "\<\"Spaceship\"\>"}], ",", 
   RowBox[{"\<\"Period\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"Wiki\"\>", 
    "\[Rule]", "\<\"https://conwaylife.com/wiki/30P5H2V0\"\>"}], ",", 
   RowBox[{"\<\"DataFiles\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"30p5h2v0.cells\"\>", ",", "\<\"30p5h2v0.rle\"\>"}], "}"}]}],
    ",", 
   RowBox[{"\<\"MatrixData\"\>", "\[Rule]", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"11", ",", "13"}], "}"}], ",", "0", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "4", ",", "8", ",", "8", ",", "13", ",", "19", 
            ",", "23", ",", "25", ",", "27", ",", "29", ",", "30"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "5", "}"}], ",", 
            RowBox[{"{", "4", "}"}], ",", 
            RowBox[{"{", "5", "}"}], ",", 
            RowBox[{"{", "6", "}"}], ",", 
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", "4", "}"}], ",", 
            RowBox[{"{", "6", "}"}], ",", 
            RowBox[{"{", "7", "}"}], ",", 
            RowBox[{"{", "2", "}"}], ",", 
            RowBox[{"{", "4", "}"}], ",", 
            RowBox[{"{", "6", "}"}], ",", 
            RowBox[{"{", "8", "}"}], ",", 
            RowBox[{"{", "11", "}"}], ",", 
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"{", "2", "}"}], ",", 
            RowBox[{"{", "6", "}"}], ",", 
            RowBox[{"{", "10", "}"}], ",", 
            RowBox[{"{", "11", "}"}], ",", 
            RowBox[{"{", "12", "}"}], ",", 
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"{", "2", "}"}], ",", 
            RowBox[{"{", "6", "}"}], ",", 
            RowBox[{"{", "13", "}"}], ",", 
            RowBox[{"{", "11", "}"}], ",", 
            RowBox[{"{", "13", "}"}], ",", 
            RowBox[{"{", "9", "}"}], ",", 
            RowBox[{"{", "11", "}"}], ",", 
            RowBox[{"{", "10", "}"}], ",", 
            RowBox[{"{", "13", "}"}], ",", 
            RowBox[{"{", "13", "}"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
           "1", ",", "1"}], "}"}]}], "}"}]}], "]"}]}], ",", 
   RowBox[{"\<\"InitialWeight\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"Speed\"\>", "\[Rule]", 
    RowBox[{"Rational", "[", 
     RowBox[{"2", ",", "5"}], "]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.955657513368046*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"886e6867-afc8-4dbc-8d1a-5cac464c451b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"EntityClass", "[", 
    RowBox[{"\"\<GameOfLife2025\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<Oscillator\>\""}], ",", 
       RowBox[{"\"\<InitialWeight\>\"", "->", 
        RowBox[{"TakeSmallest", "[", "5", "]"}]}]}], "}"}]}], "]"}], ",", 
   " ", "\"\<Name\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.955657528917282*^9, 
  3.955657529710655*^9}},ExpressionUUID->"a7f1c8f0-ab13-4e88-be7d-\
ece5eadaf298"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{"\"\<GameOfLife2025\>\"", ",", 
   TemplateBox[{"\"Name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Name\""}], "]"}], 
     "\"EntityProperty[\\\"GameOfLife2025\\\", \\\"Name\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{{3.955657545434001*^9, 
  3.955657553551833*^9}},ExpressionUUID->"2bf3974a-4f0e-4788-a7d3-\
29a0ec50eb86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Class\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Class\""}], "]"}], 
     "\"EntityProperty[\\\"GameOfLife2025\\\", \\\"Class\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"DataFiles\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"DataFiles\""}], "]"}], 
     "\"EntityProperty[\\\"GameOfLife2025\\\", \\\"DataFiles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"InitialWeight\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"InitialWeight\""}], "]"}], 
     "\"EntityProperty[\\\"GameOfLife2025\\\", \\\"InitialWeight\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"MatrixData\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"MatrixData\""}], "]"}], 
     "\"EntityProperty[\\\"GameOfLife2025\\\", \\\"MatrixData\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Name\""}], "]"}], 
     "\"EntityProperty[\\\"GameOfLife2025\\\", \\\"Name\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Period\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Period\""}], "]"}], 
     "\"EntityProperty[\\\"GameOfLife2025\\\", \\\"Period\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Speed\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Speed\""}], "]"}], 
     "\"EntityProperty[\\\"GameOfLife2025\\\", \\\"Speed\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Wiki\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Wiki\""}], "]"}], 
     "\"EntityProperty[\\\"GameOfLife2025\\\", \\\"Wiki\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Year\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Year\""}], "]"}], 
     "\"EntityProperty[\\\"GameOfLife2025\\\", \\\"Year\\\"]\""},
    "EntityProperty"]}], "}"}]], "Output",
 CellChangeTimes->{3.955657545778006*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"0cde9f12-8687-493a-a7af-48431dda340e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  RowBox[{"EntityClass", "[", 
   RowBox[{"\"\<GameOfLife2025\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Name\>\"", "->", "\"\<30P5H2V0\>\""}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.955657566759965*^9, 3.9556575838660088`*^9}, {
  3.955657646440981*^9, 3.9556576557775183`*^9}, {3.9556578522755623`*^9, 
  3.9556578743412113`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"23f28754-7a5e-460e-aa5f-18e8cc00b779"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"30P5H2V0\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"GameOfLife2025\"", ",", "\"30P5H2V0\""}], "]"}], 
    "\"Entity[\\\"GameOfLife2025\\\", \\\"30P5H2V0\\\"]\"", 
    "\"GameOfLife2025\""},
   "Entity"], "}"}]], "Output",
 CellChangeTimes->{{3.955657567274407*^9, 3.955657584126368*^9}, {
  3.955657648141638*^9, 3.9556576560567503`*^9}, {3.95565785487364*^9, 
  3.955657876504655*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"361fc854-fb08-4259-8030-94aec26c1800"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  RowBox[{"EntityClass", "[", 
   RowBox[{"\"\<GameOfLife2025\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Class\>\"", "->", "\"\<Oscillator\>\""}], ",", 
      RowBox[{"\"\<InitialWeight\>\"", "->", 
       RowBox[{"TakeSmallest", "[", "5", "]"}]}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9556576909740763`*^9, 3.955657705896879*^9}, {
  3.955657844982864*^9, 3.955657850165195*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"606ce929-cc17-4caf-8da2-ac95cb9810db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Beacon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Beacon\""}], "]"}], 
     "\"Entity[\\\"GameOfLife2025\\\", \\\"Beacon\\\"]\"", 
     "\"GameOfLife2025\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bipole\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Bipole\""}], "]"}], 
     "\"Entity[\\\"GameOfLife2025\\\", \\\"Bipole\\\"]\"", 
     "\"GameOfLife2025\""},
    "Entity"], ",", 
   TemplateBox[{"\"Blinker\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Blinker\""}], "]"}], 
     "\"Entity[\\\"GameOfLife2025\\\", \\\"Blinker\\\"]\"", 
     "\"GameOfLife2025\""},
    "Entity"], ",", 
   TemplateBox[{"\"Clock\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Clock\""}], "]"}], 
     "\"Entity[\\\"GameOfLife2025\\\", \\\"Clock\\\"]\"", 
     "\"GameOfLife2025\""},
    "Entity"], ",", 
   TemplateBox[{"\"Toad\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GameOfLife2025\"", ",", "\"Toad\""}], "]"}], 
     "\"Entity[\\\"GameOfLife2025\\\", \\\"Toad\\\"]\"", "\"GameOfLife2025\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9556576997321777`*^9, 3.955657706212491*^9}, {
  3.955657846786153*^9, 3.9556578504548798`*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"9664ad1e-d2ea-4fbb-885c-d71595e69f14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Blinker\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"GameOfLife2025\"", ",", "\"Blinker\""}], "]"}], 
    "\"Entity[\\\"GameOfLife2025\\\", \\\"Blinker\\\"]\"", 
    "\"GameOfLife2025\""},
   "Entity"], "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9556577237082443`*^9, 3.9556577252840967`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"95c0ae2b-e561-4170-84ce-b5f1474bfa0c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      EntityProperty["GameOfLife2025", "Class"] -> "Oscillator", 
       EntityProperty["GameOfLife2025", "DataFiles"] -> {
        "blinker.cells", "blinker.rle"}, 
       EntityProperty["GameOfLife2025", "InitialWeight"] -> 3, 
       EntityProperty["GameOfLife2025", "MatrixData"] -> 
       SparseArray[
        Automatic, {1, 3}, 0, {1, {{0, 3}, {{1}, {2}, {3}}}, {1, 1, 1}}], 
       EntityProperty["GameOfLife2025", "Name"] -> "Blinker", 
       EntityProperty["GameOfLife2025", "Period"] -> 2, 
       EntityProperty["GameOfLife2025", "Speed"] -> Missing["NotAvailable"], 
       EntityProperty["GameOfLife2025", "Wiki"] -> 
       "https://conwaylife.com/wiki/Blinker", 
       EntityProperty["GameOfLife2025", "Year"] -> 1969|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 9, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 9], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 9, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 9], 
     "Path" -> {}, "DisplayedRowCount" -> 9, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 9, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Class\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Class"]]}, "Item", False],
                "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Oscillator", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Class"]]}, "Item", False],
                "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Data Files\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "DataFiles"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"blinker.cells", "blinker.rle"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"blinker.cells", "blinker.rle"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["GameOfLife2025", "DataFiles"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "DataFiles"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Initial Weight\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "InitialWeight"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "InitialWeight"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Matrix Data\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "MatrixData"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["SparseArray", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "MatrixData"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Name"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Blinker", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Name"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Period\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Period"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Period"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Speed\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Speed"]]}, "Item", False],
                "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Speed"]]}, "Item", False],
                "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wiki\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Wiki"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["https://conwaylife.com/wiki/Blinker", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Wiki"]]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Year\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Year"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1969"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["GameOfLife2025", "Year"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{486.182, {129.471884765625, 135.203818359375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{486.182, {129.471884765625, 135.203818359375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.955657713190772*^9, 3.955657725661125*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"0ff6a11a-d6e4-48bd-b9a4-806d35ec52b6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsection",
 CellChangeTimes->{{3.955657906236291*^9, 
  3.955657906842811*^9}},ExpressionUUID->"06a303ee-5c4e-46e8-8829-\
0465ad87aeee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityRegister", "[", 
  RowBox[{"ResourceData", "[", 
   TagBox["\"\<LifeWiki Entity Store 2025\>\"",
    #& ,
    BoxID -> "ResourceTag-LifeWiki Entity Store 2025-Input",
    AutoDelete->True], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.955657956196653*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"8d47778e-2ae8-456e-a528-e3a091fed4db"],

Cell[BoxData[
 RowBox[{"{", "\<\"GameOfLife2025\"\>", "}"}]], "Output",
 CellChangeTimes->{3.95565799010264*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"fe58d94e-0674-43ef-a11a-f752818e3c34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"EntityList", "[", 
     RowBox[{"EntityClass", "[", 
      RowBox[{"\"\<GameOfLife2025\>\"", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Name\>\"", "->", "\"\<30P5H2V0\>\""}], "}"}]}], "]"}], 
     "]"}], "]"}], "[", "\"\<MatrixData\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9556578835613194`*^9, 3.9556578887750893`*^9}, 
   3.955658135331139*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"b4e7c461-8187-412a-b58f-2ad2db31a8d9"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[
   Automatic, {11, 13}, 1., {
    1, {{0, 1, 3, 5, 7, 11, 17, 22, 22, 26, 29, 30}, {{13}, {10}, {13}, {9}, {
      11}, {11}, {13}, {1}, {2}, {6}, {13}, {1}, {2}, {6}, {10}, {11}, {12}, {
      2}, {4}, {6}, {8}, {11}, {3}, {4}, {6}, {7}, {4}, {5}, {6}, {5}}}, {0., 
     0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 
     0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {13, 11}}, {0, 
   1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.955657889539295*^9, 3.955657993958119*^9, 
  3.95565813599487*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"ad583a75-eafe-4980-b411-b1746df9b6af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"ResourceData", "[", "\"\<LifeWiki Dataset 2025\>\"", "]"}], "[", 
   RowBox[{"\"\<30P5H2V0\>\"", ",", " ", "\"\<MatrixData\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9556583717552557`*^9, 3.955658398940269*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"4b6d7d6d-03b3-4fd9-999e-bd598ecbd7e6"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[
   Automatic, {11, 13}, 1., {
    1, {{0, 1, 3, 5, 7, 11, 17, 22, 22, 26, 29, 30}, {{13}, {10}, {13}, {9}, {
      11}, {11}, {13}, {1}, {2}, {6}, {13}, {1}, {2}, {6}, {10}, {11}, {12}, {
      2}, {4}, {6}, {8}, {11}, {3}, {4}, {6}, {7}, {4}, {5}, {6}, {5}}}, {0., 
     0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 
     0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {13, 11}}, {0, 
   1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.955658393801586*^9, 3.955658399259391*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"9d9439aa-5ff3-4f4a-989d-7b0798356cd1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 673},
WindowMargins->{{59, Automatic}, {Automatic, 3}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.2 for Mac OS X x86 (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2452165c-bf9b-41e2-ae25-5e0f443a848c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 157, 3, 53, "Subsection",ExpressionUUID->"835d6e6e-89af-4d35-9e07-6f43d4d68ffe"],
Cell[736, 27, 223, 3, 29, "Input",ExpressionUUID->"56cee6b1-7926-48f5-b842-d96c33f8c7ef"],
Cell[CellGroupData[{
Cell[984, 34, 344, 7, 29, "Input",ExpressionUUID->"d4a822e8-784a-4b76-8565-6547f05329a7"],
Cell[1331, 43, 8689, 179, 127, "Output",ExpressionUUID->"968e4707-27bc-40ea-bd73-8ed276c4b65c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10057, 227, 388, 8, 29, "Input",ExpressionUUID->"847a1c8d-eff0-41a4-8140-b8287bb5dc67"],
Cell[10448, 237, 8698, 141, 130, "Message",ExpressionUUID->"50877c8f-107b-4466-b542-978cb832fc46"],
Cell[19149, 380, 214, 3, 33, "Output",ExpressionUUID->"f5a43dae-67da-4358-8fee-e6921d1bc4b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19400, 388, 1014, 25, 131, "Input",ExpressionUUID->"1fc8077f-4058-484b-873f-d7d7d7ce0fd8"],
Cell[20417, 415, 61757, 1186, 525, "Output",ExpressionUUID->"99864180-c0ca-4ef1-b43d-0d95e3cce0e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82211, 1606, 620, 14, 70, "Input",ExpressionUUID->"88c908c6-cb76-4795-ac23-7a80443aeb10"],
Cell[82834, 1622, 59948, 1157, 299, "Output",ExpressionUUID->"e8ff1c87-9b48-46c5-aedf-f58ad47a39fa"]
}, Open  ]],
Cell[142797, 2782, 223, 5, 29, "Input",ExpressionUUID->"e100792b-29cf-4763-ae7d-f0263cbcc46f"],
Cell[CellGroupData[{
Cell[143045, 2791, 400, 8, 29, "Input",ExpressionUUID->"140c9c78-85d4-4719-a4a6-3bb8546d97f4"],
Cell[143448, 2801, 322, 6, 33, "Output",ExpressionUUID->"13628969-ef6c-48b9-b891-a83f776b14cc"]
}, Open  ]],
Cell[143785, 2810, 184, 4, 29, "Input",ExpressionUUID->"36e4fb7c-ac50-4728-92c2-ddc0b4074ce3"],
Cell[143972, 2816, 202, 4, 29, "Input",ExpressionUUID->"409f0022-396c-4f8b-a13f-2609d8be500f"],
Cell[144177, 2822, 996, 26, 131, "Input",ExpressionUUID->"0d890a19-c926-457f-8bdb-0cfe3cc31349"],
Cell[CellGroupData[{
Cell[145198, 2852, 733, 17, 90, "Input",ExpressionUUID->"ceeb7992-c20f-4d39-8950-f8feafe74a30"],
Cell[145934, 2871, 5094, 101, 60, "Output",ExpressionUUID->"b43a34de-33ad-4778-81cd-33078ca1e38d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151065, 2977, 733, 17, 90, "Input",ExpressionUUID->"a88be604-5b77-43dc-b69b-78866771de7f"],
Cell[151801, 2996, 5094, 101, 60, "Output",ExpressionUUID->"2c19e723-459f-44e5-82a6-2265215711fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156932, 3102, 620, 14, 70, "Input",ExpressionUUID->"47515005-1a87-4eaa-870c-d353aa0c8692"],
Cell[157555, 3118, 19865, 345, 44, "Output",ExpressionUUID->"b6682b98-c45c-4416-b697-761b4ff07ac1"]
}, Open  ]],
Cell[177435, 3466, 15366, 258, 95, "Input",ExpressionUUID->"ad53442a-8793-47a1-9843-dd3a4e049f54"],
Cell[CellGroupData[{
Cell[192826, 3728, 385, 10, 29, "Input",ExpressionUUID->"6ab7ca12-d9d5-4788-b72e-657b687637fa"],
Cell[193214, 3740, 417, 9, 33, "Output",ExpressionUUID->"4e1ca6d5-9594-4438-9db1-8ea667e62455"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193668, 3754, 542, 12, 49, "Input",ExpressionUUID->"07076997-b051-41e4-9b7d-2120c7029b78"],
Cell[194213, 3768, 317, 5, 33, "Output",ExpressionUUID->"c3f16468-3526-4f4d-be93-423e6c1df658"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194567, 3778, 324, 7, 29, "Input",ExpressionUUID->"31ace441-9f1e-4a03-b89a-034d5d674f97"],
Cell[194894, 3787, 47853, 759, 6059, "Output",ExpressionUUID->"eaba471a-2546-4701-80d0-9981410d651d"]
}, Closed]],
Cell[CellGroupData[{
Cell[242784, 4551, 284, 5, 25, "Input",ExpressionUUID->"bd54e4c8-fb18-4bce-972c-33a6619cf1a0"],
Cell[243071, 4558, 3140, 70, 176, "Output",ExpressionUUID->"886e6867-afc8-4dbc-8d1a-5cac464c451b"]
}, Open  ]],
Cell[246226, 4631, 522, 13, 49, "Input",ExpressionUUID->"a7f1c8f0-ab13-4e88-be7d-ece5eadaf298"],
Cell[CellGroupData[{
Cell[246773, 4648, 449, 10, 36, "Input",ExpressionUUID->"2bf3974a-4f0e-4788-a7d3-29a0ec50eb86"],
Cell[247225, 4660, 2271, 49, 40, "Output",ExpressionUUID->"0cde9f12-8687-493a-a7af-48431dda340e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249533, 4714, 482, 11, 29, "Input",ExpressionUUID->"23f28754-7a5e-460e-aa5f-18e8cc00b779"],
Cell[250018, 4727, 523, 12, 40, "Output",ExpressionUUID->"361fc854-fb08-4259-8030-94aec26c1800"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250578, 4744, 549, 13, 49, "Input",ExpressionUUID->"606ce929-cc17-4caf-8da2-ac95cb9810db"],
Cell[251130, 4759, 1418, 35, 40, "Output",ExpressionUUID->"9664ad1e-d2ea-4fbb-885c-d71595e69f14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252585, 4799, 443, 10, 35, "Input",ExpressionUUID->"95c0ae2b-e561-4170-84ce-b5f1474bfa0c"],
Cell[253031, 4811, 34065, 631, 281, "Output",ExpressionUUID->"0ff6a11a-d6e4-48bd-b9a4-806d35ec52b6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[287145, 5448, 152, 3, 53, "Subsection",ExpressionUUID->"06a303ee-5c4e-46e8-8829-0465ad87aeee"],
Cell[CellGroupData[{
Cell[287322, 5455, 363, 8, 29, "Input",ExpressionUUID->"8d47778e-2ae8-456e-a528-e3a091fed4db"],
Cell[287688, 5465, 190, 3, 33, "Output",ExpressionUUID->"fe58d94e-0674-43ef-a11a-f752818e3c34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287915, 5473, 537, 12, 49, "Input",ExpressionUUID->"b4e7c461-8187-412a-b58f-2ad2db31a8d9"],
Cell[288455, 5487, 1248, 27, 323, "Output",ExpressionUUID->"ad583a75-eafe-4980-b411-b1746df9b6af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289740, 5519, 368, 7, 29, "Input",ExpressionUUID->"4b6d7d6d-03b3-4fd9-999e-bd598ecbd7e6"],
Cell[290111, 5528, 1226, 26, 323, "Output",ExpressionUUID->"9d9439aa-5ff3-4f4a-989d-7b0798356cd1"]
}, Open  ]]
}, Open  ]]
}
]
*)

