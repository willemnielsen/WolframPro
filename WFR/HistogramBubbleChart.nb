Notebook[{

Cell[CellGroupData[{
Cell["HistogramBubbleChart", "Title",
 Deletable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"Name", "TabNext", "TemplateCell", "Title"},
 CellID->863144461,ExpressionUUID->"a7f16fda-ef70-453d-b2ea-e7d18f817d26"],

Cell["\<\
Makes a bubble chart from a list of points with the size of the bubbles \
corresponding to the count of points at each location\
\>", "Text",
 Deletable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "Description", "TabNext", "TemplateCell"},
 CellID->660820806,ExpressionUUID->"e98feb8e-54fa-48d4-b1c9-c0564cb42748"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Function", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Define your function using the name you gave in the Title line \
above. You can add input cells and extra code to define additional input \
cases or prerequisites. All definitions, including dependencies, will be \
included in the generated resource function.\n\nThis section should be \
evaluated before creating the Examples section below.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoFunction"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "752c0f34-e4a5-4816-827c-8c0093629ead"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Function"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->729890853,ExpressionUUID->"acb4895d-b09a-4ebf-8aed-cc7e8749a9ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HistogramBubbleChart", "[", 
   RowBox[{
    RowBox[{"data", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"_Real", " ", "|", " ", "_Integer"}], ")"}], ",", " ", 
         RowBox[{"(", 
          RowBox[{"_Real", " ", "|", " ", "_Integer"}], ")"}]}], "}"}], 
       "..."}], "}"}]}], ",", " ", "ops___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"BubbleChart", "[", 
   RowBox[{
    RowBox[{"KeyValueMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#1", ",", " ", "#2"}], "]"}], "&"}], ",", " ", 
      RowBox[{"Counts", "[", "data", "]"}]}], "]"}], ",", " ", "ops"}], 
   "]"}]}]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[67]:=",
 CellID->876320555,ExpressionUUID->"0bf319be-d2a4-409e-96cb-dbde0711f8ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HistogramBubbleChart", "[", 
   RowBox[{
    RowBox[{"data", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"_Real", " ", "|", " ", "_Integer"}], ")"}], ",", " ", 
           RowBox[{"(", 
            RowBox[{"_Real", " ", "|", " ", "_Integer"}], ")"}]}], "}"}], 
         "..."}], "}"}], "..."}], "}"}]}], ",", " ", "ops___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"BubbleChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"KeyValueMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#1", ",", " ", "#2"}], "]"}], "&"}], ",", " ", 
        RowBox[{"Counts", "[", "#", "]"}]}], "]"}], "&"}], "/@", " ", 
     "data"}], ",", " ", "ops"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[69]:=",
 CellID->488346774,ExpressionUUID->"37130d54-40d2-4c35-bc02-e124f9887f3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Documentation"},
 CellTags->{"Documentation", "TemplateSection"},
 CellID->109475398,ExpressionUUID->"e3fd6bb4-beb0-4616-86da-f07c48d04266"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Usage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Document input usage cases by first typing an input structure, \
then pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoUsage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8cae2a60-01e5-4e3e-9511-7c4cb54eb09c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Usage"},
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->{"TemplateCellGroup", "Usage"},
 CellID->586585833,ExpressionUUID->"0a2015e1-bfdf-440d-95aa-26bc456b5ed1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HistogramBubbleChart", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["y", "TI"], 
       StyleBox["1", "TR"]]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox[
        StyleBox["x", "TI"], "2"], ",", 
       SubscriptBox[
        StyleBox["y", "TI"], "2"]}], "}"}], "\[Ellipsis]"}]}], "}"}], 
  "]"}]], "UsageInputs",
 TaggingRules->{},
 FontFamily->"Source Sans Pro",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->67839508,ExpressionUUID->"5acb942c-7d07-4f58-af6e-3d994df66c72"],

Cell[TextData[{
 "makes a bubble chart with bubbles at positions {",
 Cell[BoxData[
  SubscriptBox["x", "i"]],
  TaggingRules->{},
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "060a78a7-48ed-40e9-9de8-4bb83b8d2665"],
 ", ",
 Cell[BoxData[
  SubscriptBox["y", "i"]],
  TaggingRules->{},
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "293366d9-f856-4714-84c6-52e6479806d7"],
 "} with sizes based on the count of {",
 Cell[BoxData[
  SubscriptBox["x", "i"]],
  TaggingRules->{},
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1d5ec3ef-f6b7-4655-8dbd-24595d58bc5f"],
 ", ",
 Cell[BoxData[
  SubscriptBox["y", "i"]],
  TaggingRules->{},
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "00337a2f-9485-4536-b06b-73d40b9aadb7"],
 "}."
}], "UsageDescription",
 TaggingRules->{},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->746063541,ExpressionUUID->"19531585-6816-409a-bcd9-59c9ae4e32d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c168aa4e-1191-46f6-8db0-f92029b85e3b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Notes"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellID->450324809,ExpressionUUID->"8ad87452-22ea-47ef-9755-53415bc9c5c2"],

Cell[TextData[{
 "Data must be in the form ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "1"], ",", 
      SubscriptBox["y", "1"]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "2"], ",", " ", 
      SubscriptBox["y", "2"]}], "}"}], ",", " ", "\[Ellipsis]"}], "}"}]],
  TaggingRules->{},
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "bd1e7af6-d0da-4f64-9d09-5e13736653b0"],
 ", wrappers are not permitted. HistogramBubbleChart takes all the options \
for BubbleChart."
}], "Text",
 TaggingRules->{},
 CellID->928682960,ExpressionUUID->"684a5170-3654-4cf5-bd27-8f0f0ce5fd0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Examples", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           " between cells or through the menu using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], 
           ").\n\nExamples should be grouped into Subsection and \
Subsubsection cells similarly to existing documentation pages. Here are some \
typical Subsection names and the types of examples they normally contain:\n  \
", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic function usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "available options and parameters for the function\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the function relates to other functions\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExamples"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "92217df2-7319-4727-93d3-c55cce1dfcdb"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Examples"},
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->692797660,ExpressionUUID->"4645c778-bdf9-494f-8cb7-cee693209261"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->619504543,ExpressionUUID->"7c9f55cf-a2ae-43ea-b92d-8baafb60da97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HistogramBubbleChart", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}], "]"}]], "Input",
 TaggingRules->{},
 CellLabel->"In[4]:=",
 CellID->966580198,ExpressionUUID->"eede0755-effd-4402-8bc3-23a7a6dfe695"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3dtzVOedN/qpvW/25f4X9oWPsWeSzCSVu5mduXmnaqqm8r61U1NzMVVv
sgcMJmCbxOMDcbBjY8pBgAGDbY4Bc7CNsVmSEOeDMQcBNj4EZJs4xERgO8SA
w1GA8P6JnldbEUhqSf2sbvX6fGrZpX60+jn8WmJ91b169f/1own/fdT/9ld/
9VcT/4/433//n//5fz/wwP98+H/8n3Hj/xk/cczo8f/x//7T+J/+x+j/eOB7
P/rfo3F/7Ptu/Nf19dfpjQIAiiqHpNGdNwbVXtlRaqTDWu6t4h0Wp7eKd1ic
3ireYXF6q3iHxemt4h0Wp7fhdChv5NxhLfdW8Q6L01vFOyxObxXvsDi9VbzD
4vRW8Q6L09twOpQ3cu6wlnureIfF6a3iHRant4p3WJzeKt5hcXqreIfF6W04
HcobOXdYy71VvMPi9FbxDovTW8U7LE5vFe+wOL1VvMPi9DacDuWNnDus5d4q
3mFxeqt4h8XpreIdFqe3indYnN4q3mFxehtOh7WQNwpFEYZM6YZM6YZM6YZM
6YasXksnb+RMEYZM6YZM6YZM6YZM6YasXksnb+RMEYZM6YZM6YZM6YZM6Yas
XksnbwAAqckbAEBq8gYAkJq8AQCkJm8AAKnJGwBAavIGAJCavAEApCZvAACp
yRsAQGo5542echsXAMjZqBvkOXRuYwEAtUPeAABSkzcAgNTkDQAgNXkDAEhN
3gAAUpM3AIDU5A0AIDV5AwBITd4AAFKTNwCA1OQNACA1eQMASE3eAABSkzcA
gNTkDQCoinPnzp04ceLjjz9+5513du7cuXnz5paWlqampsbGxvh/fB0t0R7f
jX1iz9i/2lMeOnkDAHLT0dFx7NixiBAbN27MXluSvfTLbPH47Pl/zWb/Yzbz
e9n0b2XT7syeuaXr//F1tER7fDf2iT1fWxL3ivtGD9FPtZcyOPIGAKTW2dl5
4sSJ1tbWprWrs5cmZy/8WzbjuxufvWXfwtsPr7zz2Bt3n9rwN+e2fvPSjm9d
fevbX+/52/h/fB0t0R7fjX1iz9g/7tV135cmRz/RW/QZPVd7cWWRNwAgnStX
rnz88cfrW9ZlK57Jnv9hU8MdrQtuP7rmrrNbvhm5YrBb3CvuGz1EP9Fb9Bk9
R/8xSrUXOgB5AwBSiAzQ1tbWsq4pWzopm/m9N+fdGlGh481vDSFm3LhFP9Fb
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
2bPPnTs34J6HDh1avnz53LlzX3/99Q8//DCHudW4MkvX2dm5d+/eFStWPPfc
cy+99NKOHTuuXLmSzwxrVvk/dd127tw5f/78jz/+ON2sRoTyS/fZZ5+tX7/+
xRdfXLhwYdzr4sWLOUyvlpVfurfffrv0C7ty5cp33nknh7nVpj/+8Y9Zli1Y
sOCFF1544403jh07NuBdHCboy/79+0vXiv/yyy/737OpqanX5eWbm5vzmWRt
KrN058+ff+KJJ3qVbtKkSQMWvI6V/1PX7ejRo/fcc0/cJVJH0rnVuPJLt2fP
nnvvvbfnT92DDz546tSpfOZZg8osXfx1EDGj1y9stER7blOtEfGX0ZgxY3rW
YfTo0f3/s+8wwU1du3Zt+/bt3f8i9f872N7eHj948cO2YcOGiLiNjY2le33w
wQe5Tbh2DKp08adB7HPfffe99tprH330UZTupz/9abQ0NDTkNuHaMajSdevo
6IiEVrpLYfPGoEr32WefxW9r7LZw4cL4qYu/63/2s5/FzTlz5uQ24doxqNJt
27atdGBds2ZNlC7+XzrmbtmyJbcJ14Ljx4+XFh7/UrW2tr7zzjvxw1MqYJTl
pndxmOCm/vjHP/7qV7/qmUL7/x0s7bxy5crulpdffjlaZs2alX6ytWVQpbt8
+fLYsWNjn02bNnU37t69u3THQb2aUAcG+1PXbdmyZd13KWbeGGzplixZEvtM
mzat+6/yt99+O1ripzF+JnOZcq0YbOlmz54d+8ydO7e75YUXXoiWmTNnpp9s
DcmyLFb9wAMPXL16tdQSP0uPPPJINK5ateqmd3GY4KZKz3rFPz5bt24thdh+
fgfjr8vS30q///3vuxsjvpb+Crhw4UIuU64Vgypd/Jn52GOP3X///V999VV3
46VLl0r/7n366ae5TLlWDKp03d59993Y86GHHnrmmWcKmzcG+wtb2icOtd2N
cbA4ePDgkSNH4o/9XKZcKwb7UxcHx9gnAlt3y+rVq6MlfvzST7aGRFR48MEH
4/89G1999dW+niVzmKAv27Zti78ZT548GV+X/gDv53fw6NGjpZ+ZXv9SlX55
f/e73yWfbi0ZVOlu6je/+U2pnvEbmmaONWoIpYucFn9hxZ4ffvhh6Q/PYuaN
QZXu888/jx3iT9HLly+/9957cbiMw8SBAwcKeAbC14P/qduyZUvsM2HChN/+
9rdfX//Xr/QCqPMQwtSpU6MUa9asufFbDhOUY8DMf+jQodhh4sSJvdqjpeCv
zZX/R3q38+fPP/bYY3GvOHqmm1jtK7N0pYzxyiuvdH9dzLzR04Cli2wWOzz5
5JO9XkeIv9D//Oc/5znVWlPOT93FixcXL15cqlikjtIXUcmCly5s3769lChu
Gh4cJijHgL+D8SdS7PDwww/3ai8dN99+++3EE6xdg80b8U9Z6UWB8ePHF/md
Al+XV7rSv2+TJ08unXIgb5QMWLo9e/Z0Z4yFCxe2tra+/vrrpT/t58+fn+dU
a005P3Vnzpwp/aT19PLLLxftvJde4t/50sslvV5h6eYwQTkG/B0sPf//yCOP
9GqPH61ojx+zxBOsXYPKG/HvWPzJWXopOf4WSD23GlfOqS/jxo2L3brf8i9v
lAxYuihR6Si5evXq7sbSywRDePmvnpTzCztjxozY59FHH41f0rNnz8b/S++N
mj59em7zrDWR/EthY9asWX1dO8hhgnIM+DvY3t5eemqxV3vpyca+3htVBOXn
jc8///yhhx4qlbHIFes2YOlKrxQ/8cQTu/+XyZMnR8uiRYvi6yI/OzRg6T74
4INStOj5EsBXX31VOmQU+ZntAUt3/vz5e+65JwoV/+h1N8Yvb+mOPc/6Lo41
a9aUfpxefPHFfp7kcZigHAP+DkbIL/289Ty/sftNFj3PgS+aMvPGH/7wh9KL
mBE5jh8/ns/catyApStVrC9Ffnq2zD8QQq8Lipb+Tle6fkp38ODB2OGnP/1p
r/bSJfv27NmTeIK15dq1a8uXL+9+rqz/dzY5TFCOcg6apX/89+3b193S2toa
Lffff3/6CdauckoX//jfd999o66fv3fmzJnc5lbjBizd2rVrV/6l//zP/xx1
/cy9+LrIsW3A0kXMKJ2t0fOpjGgcN25cNJ4+fTqXadaiAUt35MiR2CF263nQ
7OzsfPDBB6M90kgu06wVS5cuHXX9BNEdO3aUs7/DBAO66e/goUOHDhw48Pnn
n5dult7D/stf/vL8+fNf97hGd2NjYxVmXDMGLF38RVB6XeAXv/hF5P+rf6lK
s64J5fzU9eL8jZJySrdixYpR10/eK72k0v2H6o0vrxfKgKWLVPaTn/wk9lm8
eHH3n/PNzc2lEFKo11NK52OEt956q9c/XN1vrHaYYLBu+jtYeuo1fn5KN+NY
WXoZ7qGHHpo/f37pVITJkyc7aPZfutJFHftSeoN/MZXzU9eLvFFSTuniu6Xr
ltx3333PP//8U089Ner6icoFfxm9nNK9+eabpV/PaF+0aNHTTz9durl+/fpq
TLlqHn/88b7+4eq+1KrDBIN102dZS29iamlp6W6JEBvBtftHLoJrz1OqimnA
0nV/gsBNffLJJ1WaePWV+VPXU+lTtHbt2pXLBGtXmaU7depUQ0ND6RzR0i/s
u+++m/tka0uZpdu/f3/pBZSSiRMnFu2nrrOzs/TxiP3nDYcJkooE++mnn/7p
T38q2lWRYSTq6Og4duxYoV4IqJSIJfFvXZHfCTVkDhMAAAAAAAAAAAAAjBT/
H6J2vb8=
    "], {{0, 357.5}, {360., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360., 357.5},
  PlotRange->{{0, 360.}, {0, 357.5}}]], "Output",
 TaggingRules->{},
 CellLabel->"Out[4]=",
 CellID->355466120,ExpressionUUID->"28ae74c8-330b-4141-b092-ed4eb40d7f2a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->313242344,ExpressionUUID->"3809e11a-a967-4449-a344-06a5a51d9604"],

Cell["Useful for visualizing high density data:", "Text",
 TaggingRules->{},
 CellID->1865064616,ExpressionUUID->"1cd14844-6c6b-4f67-9463-3ce5a5d1638d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HistogramBubbleChart", "[", 
  RowBox[{"Round", "[", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"10", ",", " ", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"200", ",", " ", "2"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellLabel->"In[15]:=",
 CellID->1760278219,ExpressionUUID->"288d6375-8cb1-4e4b-83d5-3a75d81d0f55"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXtwVNed7zt17z/3z/v/mcrJi4eMkAAjTyinXOR6ODBTk3sdbnlypiZX
xTnJmDHjcoLtzJjE4wkY2wRoSUgthBuEWkggC/HS6lajBxIICdwMEhImUAIU
cEBEOlYkDJIag9Xifpe2rbQlddOP/Vh79/dTC9Xutdf6Pdiv3157Pb71P3++
+qX/7S/+4i9e/z/wZ/X/+LcfvPba/9jw//6f+PHiq6+/vPbVf/rZ37z6xj+t
/afXvvc//3dkXkTZbvyT248N4CVCCCGEkEmMiDSm4g1dyphgBlVQBVVQBVVQ
BVUYp4LxBlVQBVVQBVVQBVUYrYLxBlVQBVVQBVVQBVUYrYLxBlVQBVVQBVVQ
BVUYrYLxBlVQBVVQBVVQBVUYrcLyeMMEFDGDPOaxUAkeC3XgsVAHHgvjYLxB
zITHQh14LNSBx0IdeCyMg/EGMRMeC3XgsVAHHgt14LEwjnSINwghhBBiLYw3
CCGEEGI0jDcIIYQQYjSMNwghhBBiNIw3CCGEEGI0jDcIIYQQYjSMNwghhBBi
NIw3CCGEEGI0jDcIIYQQYjSMNwghhBBiNIw3CCGEEGI0jDcIIYQQYjSMNwgh
hBBiNEbHG5EYp4gQQgghSvHSDAzVZZxwQgghhNgFxhuEEEIIMRrGG4QQQggx
GsYbhBBCCDEaxhuEEEIIMRrGG4QQQggxGsYbhBBCCDEaxhuEEEIIMRrGG4QQ
QggxGsYbhBBCCDEaxhuEEEIIMRrGG4QQQggxGsYbhBBCCDEaxhuEEEIIMRrG
G4QQQggxGsYbhBB7EQqFent7g8FgU1OTfxJs4Ccysctq6wghs8N4gxBiFxBO
dHZ2+o5Vi/INomS1KFgmXJkyYQM/yzdgFwow6iBEQRhvEEJswcDAQMBfK7zr
/QVLOryL+nw5odZlE8FnkbCBn8jELhRAMRS22l5CyNeIFhIMDw+73e6WlpaZ
u/r7++vr6z0eT2lpaWNj44MHDxIVTgghCXHjxg3f0UpRtOK8N3usddnjc9+f
NWEXCqAYCqOK1VYTQv7MrCHBw4cPN2/ejF1er3faro8++uhf/uVfXorgX//1
XxGcxC+cEEISYmBgAPGDr+B7vYefjhZpRCYUQ2FUYSsHIeowMyQYHBzcvn27
FktMizf6+/vXrl2L/NLS0qtXrzY2Nv7yl7/ET7fbHadwQghJiFAoJD+jFK2I
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
QgghRsN4gxBCCCFGw3iDEEIIIUbDeIMQQgghRsN4gxBCCCFGw3iDEEIIIUbD
eIMQQgghRsN4gxBCCCFGw3iDEEIIIUbDeIMQQgghRsN4gxBCCCFGw3iDEEII
IUbDeIMQQgghRsN4gxBCCCFGw3hDZUKhUG9vbzAYbGpq8k+CDfxEJnZZbR0h
1uCY68IxjhASD4w31AR3m87OTt+xalG+QZSsFgXLhCtTJmzgZ/kG7EIB3pRI
WuGY68IxjhASP4w3FGRgYCDgrxXe9f6CJR3eRX2+nFDrsongs0jYwE9kYhcK
oBgKW20vIWbgmOvCMY4QkhDRQoLh4WG3293S0hKjbltb2+7du69du5aocBKD
Gzdu+I5WiqIV573ZY63LHp/7/qwJu1AAxVAYVay2mhBjccx14RhHCEmUWUOC
hw8fbt68Gbu8Xm+0ijdv3vznf/5nlEHUkZBwEgO8y+D24iv4Xu/hp6PdiCIT
iqEwqvAliDgYx1wXjnGEkCSYGRIMDg5u3779pUmixRsISN566y2tDOMNvQiF
QrKVtWhFnPeiqTsSqqAiP/USR+KY68IxjhCSHNNCgubm5ldeeeWlr4gWb1RU
VEyVYbyhF52dncK7/rw3O/57kZZku6t3Papb7QEh+uOY68IxjhCSHNNCgrVr
1yJny5YtWkQxa7zR3d2NXW+++ebWrVsZb+gFXl58x6r9BUtifNKNllAFFVGd
b0DEYTjmunCMI4QkzbSQAJHGuXPnwuHw8ePHZ4037t2799prr2FXT09PUVER
4w296O3tFeUbOryLEr0XaQkVUR1CrPaDED1xzHXhGEcISZpoIUEgEJg13tBi
jIMHD05tx443ZkVH+x1DMBgUJav7fDnJ3Y5QEdUhxGo/CNETx1wXjnGEkCcS
7dGfULxx6tQpZP7mN7959OjR4/jiDX29cDBNTU2iYFko8bZWLaEiqkOI1X4Q
oieOuS4c4wghSRN/vNHf3//KK6+8/PLLt27d0nIYb+iI3+8XrsyJ4LPJ3Y5Q
EdUhxGo/CNETx1wXjnGEkKSJP97YsmULcjZt2nT2K37zm98gZ+/evdgeHh6O
XziZCW9HhMzEMdeFYxwhJGnijzdef/31GB9lZh2rxXgjftjcSshMHHNdOMYR
QpIm/nijtra26uv827/9G8ps27YN23fu3IlfOJkJu5MRMhPHXBeOcYSQpEl0
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
782bN832KHH58ccfvV7v/klwgI9me5RwDA0N5ebmNjQ0zD717bffHjlyBJfJ
yZMnr127ZrxviUaYtrh7964Q4sCBAwUFBadOnbp9+7bx7iUatbW1OTk5Dx8+
nC/BgwcPCgsLv/76ayO9Ijbi/v37LpdrxsrtuJDN9isR+a//+q8333xzekO8
9dZbiDTbrwRidHT0008/xTfv8XhmnIL8m3GZVFZWmuJkghCmLZqamrZs2TK9
LTZv3szm0JW2tjb1qx4cHJwvDaQ4Erz//vtGOkZsBB4Q8B/yzjvvtLa24vEt
Pz9f/af6/vvvzXYtsRgfH3/vvffwzeM3Fpf2pUuXPvvsM3xE5NjYmNneJQQD
AwNffvml+v8/4x7X29uLGxxuajU1NXiUVhRFTXb16lWzvHU2Ydqir69PFRt4
ULp48eLly5dzc3PVlNevXzfLYQcTCoUaGxtfe+218HqjublZTUC9QeYEFzV+
QvEf0tXVNRX58ccfs4vDeL777jv1asWtTY3B76oa85e//MVc3xKB+vr6119/
fep5ecY9bteuXYg8evToVExpaSli9uzZY7inzid8W+CnCZFvv/02JLoaMzEx
8ac//QmR7MnXnLt376r//FPMqTf++7//e6rJqDfInJw8eRL/HoWFhdMjcb/7
9ttvw3SaET24deuWerVOzdkIBoPqc9x0NUh0QhXeX3zxxeHDh2fc40ZHR9Wz
0IRTkbdv31a78dFMZvjrZMK0xeNJpYc7Gv5OjywrK0PK3NxcYz11Puow4tat
WxsaGtSfo9m3Bgi/HTt24JTaW069QeZk//79+Pe4cOFCf38//p1wddfW1uLY
bL8SETyj4ZENzYFWePjw4cjIiPoE/cYbb3A8xQBwd7t48SJa4fTp0zPucaoU
xE0wFApNz6L+/HZ3dxvurMMJ0xZhsiBleXm5Ae4lFGfPnsUv0sDAAI6hOubU
GxUVFerwlnqlUG+QOVE7yo4cOTJ98hX+qc6fP2+2a4nIt99+q0qOrZPg4PXX
X29ubjbbr8Siqqpqxj0O7aLOcZqREjGcwqErs9tiThobG1VBSO2nK3P2b/j9
fnzzb731FuLVQWHqDTIn6qCn+h9SX18PmaF2i+H/amoWATEMSIupSVkq7733
HidvGMzse1xnZydiMjIyZqT8j//4D8S3t7cb62ACEYnewPevjr/MGGEhmjNb
b4yMjHz44YeI9Pl8j3+ahEa9QeYE/xibJl+6nJozMD4+rj61RdKHSTTk5s2b
qsbAz+bgJOqQNH5LOeveSGbf4/7zP/8TMRDnM1JCgSAeasRYBxOIBfVGY2Oj
Kjb27Nnz6NEjI31LQGbrDTQNYgoKCtSP1BskDGpvxpEjR6ZH4iMiccosrxIT
VV1MXbkqhw4dmt1ARFdm3+N6e3tVWT4jJWI28R1MPQmvN8rLy1WJ7na7OcfJ
AGboDXWcEdTV1bVOok7kePPNN3H8zTffmOstsRrqahszbmcXL15E5LZt28zy
KjHZvn07vvampqbpkVeuXEHkhx9+aJZXCcjse9yDBw/U39XR0dGpyL/97W9q
5N27d81wMyGYT2+EQiH1sQgcP358xjxeohMz9IY6bWY+eAchM1Dfh53RlaFq
1K+++sosrxKTzMxMfO1okemRkB+IhBQxy6sEZM57nDrI+Oc//3kqRpXl6enp
hjuYQMynN/DrpA41ztDnRFdm6I2//OUvR/8R9QF269atOK6pqTHXW2I17t27
p74HUVtbq8b09/ervcQXLlww17dEQ13FCF/+1MquaJ0PPvhgE1cxMpY573Hq
KgSffPJJIBDAR/xV+6MURTHJzYRgzrZQp9OA8+fPj/8jExMTZrmaCMy3/sYU
nL9BwnPixAn14v3ss8/cbvcbb7yxaXLZHF65BjM6OvrRRx/hy3/ttdd27969
f/9+Vfjh4g2zQRLRnDnvcQ8ePFCbAwoQTaPqwI8//nhqiUuiB3O2xbZt2+br
w8/OzjbL1USAeoPET2NjY3p6unrB4kf1wIED08epiWEMDw/jXqbOt1fZu3fv
0NCQ2X4lFtXV1XOOJ/b393/yySdTTbN9+3a+M643s9sCz0Gvvvoq9YYpqCuW
37t3b74E6qK7s98cJ2QGAwMDfX197NYwnbGxsd5JqPosyIMHD77//vu//vWv
nKNICCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghJB7+Pz9aeOw=
    "], {{0, 360.5}, {360., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360., 360.5},
  PlotRange->{{0, 360.}, {0, 360.5}}]], "Output",
 TaggingRules->{},
 CellLabel->"Out[15]=",
 CellID->1618905286,ExpressionUUID->"e1ba8924-f1da-454f-9de7-3c5a56f7cd73"]
}, Open  ]],

Cell["Compare two distributions:", "Text",
 TaggingRules->{},
 CellID->780483852,ExpressionUUID->"fa7c2e98-5b23-4e83-9cd5-910c54aa66a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HistogramBubbleChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"#", ",", " ", "2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"100", ",", " ", "2"}], "}"}]}], "]"}], "]"}], "&"}], "/@", 
   " ", 
   RowBox[{"{", 
    RowBox[{"5", ",", " ", "10"}], "}"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellLabel->"In[81]:=",
 CellID->1196634788,ExpressionUUID->"cd45c239-d222-4233-9cd3-1ba3279ef4c7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvf9XFGee973neX65f3z+gt17RwEVhIgkYcyYnSeJM8mcmT0nzsl6njy7
3jHem2wyxglxzQZjNGrG70grqNBAQNJiFEW5qmnBVr6IknaAKGHDkKQfTGbE
uDIyQ7CbkdD4vMtKWKahm+ru+tb0+3U+cqqu+nypq6yu+tR1XXXV37/46+Uv
/R9/8zd/s+5/4M/yVf/xf7/xxqrcX/5fWHlu7bpXXl77r//7mbX//q8v/+sb
2S/+nyj8DLrX8E9evk8IIYQQQgghhBBCCCGEEEIIIYQQQqzE4OBgYWFhY2Nj
UPm1a9capuDxeEzZSUIIIYTEL/fu3XvvvfdeeumlioqKoE1btmx5aQpbt241
ZT8JIYQQEqcMDAzs3btXSSSC8o1vv/32lVdeQfnRo0ePT8Ltdpu1t4QQQgiJ
Oy5cuLBmzZqJhougfOOrr75C4bp168zaPUIIIYTMAl5++WVkFDt37vzggw+m
5huXLl1C4f79+1V6m9rzQgghhJDEZHKGgEzjypUrgUDg7NmzL03JN44dO4bC
wsLCI0eO7NixY9++fSdPnvzmm2/C5BthVg2DcWdx3ISqLOMyLuMyblwEnTZu
qD1xuVxT843du3dPTVfeeOON69evhwo3Y4ZjANY52ow7O4IyLuMyLuPGS1xT
7rkR3f2n5hvj4+Nr165F4caNGzs6Or7++usrV66sX78eJZs2bRodHZ02aJhV
w2DcWRw3oSrLuIzLuIwbF0GnjRtRvtHV1dXY2Dg0NDRR2NfXpwz5+N3vfjdj
OOvUmnFnTdyEqizjMi7jMm5cBJ02bkT9KdOyefNmaF64cGHGcNapNePOmrgJ
VVnGZVzGZdy4CDptXPX5xujo6Ndff/3ll18GaSozg6nJN8zCIrtBZhM8qYge
8LwimmOdk0p9vvHFF18o4z1+//vfTxTevXtXma/j008/Ve/cYCyyG2Q2wZOK
6AHPK6I51jmpImrf+NWvfoXCQ4cOffvtt/cfTDdaUlKCkrfeekvNeFGzsMhu
kNkETyqiBzyviOZY56SKaPxGY2Oj0sSRk5Njt9vfeecdLL/yyivXrl2LyDkh
hBBCEopQKUF9fT02VVZWBpVfvHhx3bp1E+/Sbt68ua+vL1LnhBBCCEkookgJ
AoHAwMDAV1995fP5NHdOCCGEkNmHrikB8w1CCCGE3Ge+QQghhBD9Yb5BCCGE
EL1hvkEIIYQQvWG+QQghhBC9Yb5BCCGEEL1hvkEIIYQQvWG+QQghhBC9Yb5B
CCGEEL1hvkEIIYQQvWG+QQghhBC9Yb5BCCGEEL1hvkEIIYQQvWG+QQghhBC9
Yb5BCCGEEL1hvkEIIYQQvWG+QQghhBC9Yb5BCCGEEL1hvkEIIYQQvWG+QQgh
hBC9Yb5BCCGEEL1hvkEIIYQQvWG+QQghhBC9Yb5BiPXx+/1er9fj8bjdbucD
sIBVFGKT2XtHCCEzw3yDECuDdKKzs1M6c1xU5oqi5cKWLfJSZcECVitzsQkK
zDoIIRaH+QYhluXWrVsuZ60oz3HaMjsqMm5IWf6W7HHPEggWsIpCbIIC1KBs
9v4SQkhImG8QYk36+vqk0w5RsKy9It3Xkn3/ymPTCjZBAWpQhonZe00IIdPD
fIMQC3Lr1i3kD5LtUe+pzFCZxmSBGpRhwlYOQog1Yb5BiNXw+/1yN0rBMpXJ
xkTKARMYciwHIcSCMN8gxGp0dnaK8pz2inT1yYYicsdKeQ7Mza4BIYQEw3yD
EEvh9/ulM8edtswwYzbCjOWAIczZxEEIsRrMNwixFF6vV1TmdlRkRJpsKAJD
mMOJ2fUghJC/gvkGIZbC4/GIouU3pKzo8g0YwhxOzK4HIYT8FXrnG5PRLxAh
swa32y1s2f7IO1MUgSHM4cTsehBCEp2XpqBrLP2cEzIrcTqdIi913LMkunwD
hjCHE7PrQQghfwXzDUIsBfMNQsishPkGIZaC/SmEkFkJ8w1CLAXHixJCZiXM
NwixFA/eh32L78MSQmYZzDcIsRSc74sQMithvkGI1eB85oSQ2QfzDUKsBr/X
RgiZfTDfIMSC8Hv0hJBZBvMNQqxJX18f8gdRsKy9Ij3MWA5skrtRCpZBGSZm
7zUhhEwP8w1CLMutW7fkjpXyHKcts6Mi44aU5W/JHvcsgWABqyjEJihAjS0b
hBArw3yDECvj9/s7OzulM8dFZa4oWi5s2SIvVRYsYLUyF5ugwDEbhBCLw3yD
EOuDdMLr9Xo8Hrfb7XwAFrCKQmYahJC4gPkGIYQQQvSG+QYhhBBC9Ib5BiGE
EEL0hvkGIYQQQvSG+QYhhBBC9Ib5BiGEEEL0hvkGIYQQQvSG+QYhhBBC9Ib5
BiGEEEL0hvkGIYQQQvSG+QYhhBBC9Ib5BiGEmMXo6OjNmze7u7vb2trcbrfL
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
32mNi7iGBb19+7Y84bljq5Qvf5v1hljo3i83UGgTd/cceINPeIZ/ec6xCxc4
YCMeYb5BSCjw9NTT03PidO1reeUP5xzIeLMs670z2fsuPHbwox8VtUOwgFUU
YhMUoAZlmMT42GVWXMPAY7J8Hyxa0WZPiX2ySni4XJwCb/AZ/qk/oeIaHBTn
3meffVYnnTlZkrP135I+2Pw/NYwLb/AJz/CPKPFynpMgmG8QMi0+n6+5uXlb
8dFHcg4s2li1pODS0uKOMAIFqEEZJjCMusHBrLiGgZuF3MJfsgr3o0ib2UMJ
/Mh3w5IX4TnUzSih4ppVWaQiR44csb/3M83jwic8q++9IhaE+cbswO/3e71e
j8fjdruVLn4sYBWF2GT23sUfQ0NDrrP1q3aWLXyj6Ie25sk3d7lV4a2KtNcP
pq6xQbCAVRQqiQGUYQJDmMOJVnFnlBjjGsknn3wiHJsbC5NDPfz6mxZ5q9M8
pfPc+5Oce+dCsIBVFGJTqLsSvMlt747NoT6fMWPc6MSacROqshaHF+cJmG/E
OzhjOzs7j9ec2XjIsWKr/fH1BZlrbRAsYBWF2ASFRDuxY8Hn8+Gu/U9bipFI
/Ojwlf9uRnjbsfi1nS/8x+rt7/6kbHvm8Z3zIVjAKgqxCQpQgwkMYQ4nEbU2
TBtXvUQd10gGBwelGkddftq03fpIJzrL5x/ftWDjpn9csf5Xj6/dlLlmBwQL
WEUhNkEhVNYxdF7+PCj8T31/M3zcGMVqcROqslZGuThLZ46LylxRtFzYskVe
qixYwGplLjYl1MWZ+UZcc+vWrVqpbt3+I9nrCh59x7F0b/0Th9ueKu2EYAGr
KMQmKEANymbvbxwQCASam5tX7SyTb/pF7cqt/NE9DRmv7fu33H+p2pl+uWyh
90zmYOMj/kvZECxgFYXYBAWoQRmGMIcTuFLZ1zxt3IhTjsjjGow8BUTRc70f
pk69odyqS6/NS1m38ZfZa3/z6NvvL91V+0Rh01PFlyFYwCoKsQkKUIPytHcl
eIZ/RFEfVxOxVNyEqqxlwfXW5awV5TlOW2ZHRcYNKcvfkj3uWQLBAlZRiE1Q
gFqCXJyZb8QvfX19R6tPP/P2oUc2fvDEocvLyj6eVrAJClCDMkzM3mur09PT
s6346MI3iiZaGB7+TW322vf2b/vRpdKFdy48MnL5h9MKNkEBalCGCczhBK7g
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
5vsyfT7za9euWWG+L6vNL8r5vqwJ8w2iHj3m2bbO91PuW+Z7bcbMZ37fGt9r
M3Le6cn11WQ+c9O/1/aHP/zBCvOZW/D7KZzP3IIw3yDq0ek7Ytb5PqxFvkdv
zPfa7lvje/RGfldrcn1j/16bFb5HPzIyYoXvtUHayxe8//b/tM73Yfm9NgvC
fINEhB7fSe/t7X3zQOXid6oM70ypQlxEn7wzPT0924qPLnyj6EeHr8SSbMAc
TuAKDi1ynKcFuyccWxoLk2N8mRHmcAJXUdTXyO+GT65vLN+jj7S++h1ni3yP
/ncfLnxvTVp9flLgsl5vxcJzgy1JVNsHBgasdl4RNTDfIJHS19eH+xoepR/Z
+EGYMQbYBAWoQRkmYRziUaL6dG3W6weWHrxsWLKBWIiIuEEPMoFAoLm5edXO
soy3KqKe+wuGMIcTuIJDixznaVHqK+wrPaXzop6TCoYwh5Oo64s9x3Uej5bt
Felh+tyxSW7uLlgG5SgqO7W+fafSkD88k7P+kQ1lYcZyYBMUoAZlmERRX/2O
8+effy6OvPnxkVRz8w3swM63n/8w/+e9H+rVxAHPoug59a+WG3leETUw3yBR
gPy/Vqpbt/9I9rqCR99xLN1b/8ThtqdKOyFYwCoKsQkKUFPzsHD16tU1eeVZ
m44Zlm8gFiIqb6YE4fP5XGfr/2lLsZxyRN7KARMYwhxOIu1J0fs4Twt2sqHe
JQ4/i3tZFE/fMJFvgoefhZNY6ov9lxvAy3OctsyOiowbUpa/JXvcswSCBayi
EJugALVYnkCD6nurLr02L2Xdxl9mr/3No2+/v3RX7ROFTU8VX4ZgAasoxCYo
QE1p2YiuvjodZ2VsZF1+2l8umjYLB0JjB445yk4efx8L35zXoNsoSOATnqUa
x+DgYET/3YadV2RGmG+Q6MBVrrOz83jNmY2HHCu22h9fX5C51gbBAlZRiE1Q
UNkNiutnTa20ZF3BY7YmA5INREEsRAx1vxgaGkK2sGpn2cI3iiIaywFlmMAQ
5nBiteMcCuyqfCu0r2wsTI5ojAGU5eZ9+0qYx15fpbK4e4rKXFG0XNiyRV6q
LFjAamUuNsVe2an19Tct6iyff3zXgo2b/nHF+l89vnZT5podECxgFYXYBAVl
zEYs9dXpOHd0dIiy1Z8eW2hWvoHQ2AHsRnd3t3Bsxq5+26plrwq8PehF2hz+
NdhQGHZekfAw3yCxgF+o1+v1eDxut9v5ACxgFYWR/nh7e3u3l1RlrCvSe25z
+EcUxAoauREEUpHm5uZtxUcfyTmwaGPVjC/JQgFqUIYJDGNs2QhCw+McCqW+
wrFF2pdxrXL+jC9vQgFqUIaJtvU1oLL3p6sv0glvdZqndJ57f5Jz71wIFrCK
QuXVV03qq8dxRgYiahx4/Pc1mzDxF4IiNHYAuxEIBFpaWkTJqjZ7ilYDOeBH
nmyk5EV4jrp38r5R5xUJA/MNYhGUK9WLO8sWb3Tomm/AP6KouXZBoaen58Tp
2tfyyh/OOZDxpjz7aPa+C48d/OhHRe0QLGAVhdgEBahBGSaxXBVNRKmvs/aE
KHsVNzhc5HGrvVMvf/tjvC0TggWsohCb5Dtg2atQZn2tEPfq1auiPOdKmQkv
xiIoQk90TY6MjLjPnRNFK5ByxN7KAQ/yhBtFK+ATnmM57MR0mG8Q63D37t1a
qe7nGw8/vKVap2QDnuFfOF2IpXKv8ETZ1dUlOet2lVat3ln29IZDD7++f+Ga
fAgWsIpCbIIC1LRt1jAFpb4upyRPX2l/QRQ8KfIyxJ5kWfLkb3bIhVU7oMD6
WifuvXv3zrqcouDHX57OMDLZQDgERWjswMTODA8PyylHyarGwuRYxnLAVu5G
KVkFbxOT5JD4hfkGsRQDAwPVp2uX5R7UI+WAT3iGf5Xv001mbGysv78fV/7W
1taGhgalPRYLWEUhNqmfQTQuYH2Nqa+GceWJ00+W1dkW/vl8pjHJBgIhHIJO
nc59ZGRE7lhxbK7LT+v9MDXSvhXow0rupnFshh+2bMwOmG8Qq/H1118jJfj5
xsOLNzq0GssBP/AGn/AM/2ZXkRBd+OSTT0TV9ob98wwYyIEQCIRwCDrtzgQC
ge7ubqnGIYqea7AlfXEiVc3so9CBpjzPRtFzsIWHOO2tI1NhvkEsyMDAQK1U
9+LOsox1RbG/sQIP8ANvwumKomWDkHhhfHxc/jRq5YbzBSm6phxwjhAIhHAI
GmaXBgcHW1tbRXWxKH5eylvQZk9BOnHble5vWqS8FIy/WEYJyrEVOtAU1XZY
RfrqK7E4zDeINbl7925LS8v2kqol6wqyNh2LbioweVKvTcfgAX7gTf2YDULi
lLGxMfn+XrmhYf88nTpW4FZu2ajcgEAqu3uQ57e3tztra+TBKqWrReHTIj9L
7J0vdifJf7GMEpRX7XCKGmjyuWBWwnyDWJZAINDb21tTK8lTgb1+YPE7Veq/
sQJN6MMKtvAAP2yVJQkCcgC5laNqe51toebDR+FQHrNRtR0hIh3TMjo6evPm
ze7u7ra2Nrfb7XK5JEnCXyyjBOXYOuOH2Ej8wnyDWByfz3f16tXq07VvHqhc
lnsoPefg4neOZu90PmZrXHqoTRnggb9YRgnKsRU60IQ+rGA7C96hICQixsfH
/3/23sWrjSvP9/1XZtY5a+ZMHEzM29g4fdx2r+Te5Nw7OXPilXOycjpJ24lj
G4PV5hhbpBtwbOzwEBKIpwzYQg7BAYSAYGTHMCJYNig0ZkIzbi2cpIPj28yw
Fo0RYzey71dWmqZ5iNKjHlJ9P2svVtWu36N2IWl/q2rXLt9YjiumTsNPbpme
i8i9FQTxPfpq+AnCInjg2yiErIV6g0QFHo9ncnLy2rVrjZ98lmc0//xs/Sva
qnSNPiFTt/VwGf5iGTWox1bYwBL2nMaHqJnp6WnfQ7IN2d1lz399OS7kCc/h
CHff0yIN2Qi49mkUQoRAvUGii/n5+Xv37o2Ojjocjr6+vuVLslhGDeqxlY/q
E+Ln0aNHvqnA2sydpnchGL5q2hLUm2RhDBef0jC9iyAItXKeDUKCgnqDEEJi
m7m5uZGREVvHJ51NOZ2Gn35e9ne3LzznvrL1/+vZ9vBG4uPBpCc3k1GwgFVU
YhMMYOabdqwpx9bRAveIvA+IqBnqDUKUDIfYkUjh8Xju3r1748aNzjZLp7nA
9zyI8ZXO8u2dpS90Fv8XX8ECVlGJTTBos8AYLrwvSSIC9QYhysT/CGGbtfNc
veXAedOr2qrtGv0LR8q2HCrFXyyjBvXY2m7t5COERDiLi4u///3vIVZv3rx5
/fr13t5e/7ymWMAqKrEJBpzVk0QW6g1ClIZ/iqQ6S+tbZ+q2Zericy4kFban
FtvTDYM7q25l1IzgL5ZRg3pshQ0sYc8pkgghioV6g4SMLK+ciIH3XATAPwW0
ubXtjcLa549WQE7sqLy56sX3awtsYAl7eMGXU0ATQhQI9QYJAVlemSrXe1ol
y+t/xVVBdXNClj4x/8rOqtubKo2VBfbwgi8i8BVXhBClQb1BggInzhMTE5+2
W4+UNCRn6+NzTEmnO9JKr+MUe2f1MAoWsIpKbIIBzGAMl3DOuGVJKnHe+fn5
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
U3Xg9xM/dK/n18SfaPQ/ohhcX1B1C45wR5AoPUET6TjPzs6aW9sSsvThjGEI
0EkhMuKvfWhUJXlHR0d9k3p9eFkCseEvyIWMyLv2f80vESGqIsb0xoMHD6y2
bk15U5rGkJpnziju3V01tKfehYIFrKISm2AAMxiHlsXr9fb39+Pcyvc7WT0c
Wl8AR7gjCEJF3W1o8Y6zw+F4o7A2Mf9KxDtff0FkxEcWFeaF9mtttyZl6UOb
1Cu04psKLEuPvKuUJ79EhKiNWNIbU1NTza3tL58ypmgv7TZ+udf01boFm2AA
MxjDJYREExMThTXPLoAHf1L2V7+WVbcQBKEQMOJHQzzEO84zMzN1ltbnj1ZE
ahjDesf8NuIjy8pHNVWSd3JyMkd/MTHPIpnY8BdkRN5VozhU/iUiRIXEjN7A
STT6tYzjFTvOWjfqAVcWmMEYLsFe5VhYWPi03ZqSrQ/qdvNGBUEQCgGj5YKw
qMd5eHj4rTN1SYXtInW+/oL4yIJcast77dq1vblG4e9GiVRBRuRF9uWGq/xL
RIg6iQ294fF4rLZunEoL7ASXu0K4wDGoMQZjY2NHShq2aS2R6g4QCgERVrzj
EylEPc6PHz9ut3Zuy9QJmVEznIL4yIJc/tecqSSv5ZNP680tW7MrJRYb/oK8
jZ98tjwfiJq/RISoltjQGy6XS1PelKK9JLwT9Be4wBHuAhMtLS3ZurqTs/Wb
PrUnvCAUAiKs8idOFPU4379//1y9JT7ngqidr78gC3Iho3ry5pZUZZ01JOY1
y6I3kDfPaL53795T1X+JCFEtMaA3cNbc0taRpjEEGEsQYIwBHOEu8BLH9PS0
GH1EfI5v4kQEF/tYhYPYx3l8fPzAeZPYNxf8BVmQy/+gqEry7jtV9t8y89OK
umTRG8j787P1/qdU1PwlIkTNxIDecLvdWqM5Nc8cbCfoL3CEO4IIyTU2NvZu
kW/ywwh3B6c7EFbhV4PFPs5DQ0OvaqtSi+0S9L/IglzIqJ68Pz1WvOPnx3fo
vpBFbyDvK9qqwcHBp+r+EhGiZmJAbzidzn0FtRnFvaH1g3CEO4IIyeVwOF46
aUwrvR7Zn0oERNi1D0sqCrGPs91u366J5DX2AAVZkAsZ1ZM36XDxP/zToQzj
kCx6A3nR2L6+vqfq/hIRombE1hsrESkLfrd3HTfsrhoKrR+EI9z9XcCmXL16
NTmrPOID/BAQYRFcpEMUEcQ+zj09PS8cKQvz6UiBBVmQCxnVk3froZL/9N8O
iD2H+UYFeRMydf6Gq/lLRIiqOLAGUXOJF3yZrq4u/JTtqXeF1g/CEe4IIjBX
3OGykKcn2rA7qB5GWIH7IBdiH2ebzbblUKkEna+/IBcyqijvByV/83//Qhax
4S9bD5f5G67mLxEhaoZ6g3pDIGIfZ5VcZ1Dv9Y2jP17fUPOXiBA1EwN6g/dT
pEHs46yScRQyjt94TtbxG+l/Hr+h5i8RIWomBvQGx4tKg9jHWSXPifD5FDV/
iQhRMzGgN9xu96lKPg8rOmIfZ5XMgyHj/Bv/z1FFzL+h5i8RIWomBvSGHPN9
mSL7UxkVUxWJfZxVMs8n5xdV85eIEDUTA3rjKeczlwpRj/Pjx4/bZHqPiRry
Kuf9KSr/EhGiWmJDb/B9bdIg9nFWyXta5cqrnPfDqvlLRIhqiQ298ZTvo5cK
UY/zzMxMnaX1+aMVO6tui9T5IjLiIwtyqS3v5ORkjv5iYp5F8pspFuRF9uWG
q/xLRIg6iRm9AaamptCv4VQ6RXspwBgDbIIBzGAMlxASTUxMFNY0xx2rDnPy
BLgjCEIhYMSPhniIepwdDscbhbWJ+VdE6n8RGfHXPsWghrwej6e13ZqUpc+o
/FIysYFcyIi8q65uqfxLRIgKiSW98fTZ2bfV1q0pb0rTGFLzzBnFvburhvbU
u1CwgFVUYhMMYBbslY1lvF5vf3//20Wm+BONIU9bBEe4IwhCIWBkj4PYiHec
Z2dnza1tCVn67eUDEe98ERORER9Z1Jl3dHT0cElD0oeXJdMbyIWM/idTVsIv
ESFqI8b0xtNnJ3Eul6ulrUNrNO8rqN113JCQqUPBAlZRiU0wCGrMxloWFhZ6
Pu99Pb/G92sZ/AkaXOAIdwSJ0ovA4h3n8fHxgupnZ75GZwQ7X0RDTET2P46q
zrz4sLVZbekaww7dDQnEBrIgFzKu+yHnl4gQVRF7esMPujm32+10Ou12e9cz
sIBVVIapNJaZm5vDDx3OrfCrHtRtaBjDBY5wR5CI7IxciHGccaI6MDCw/5wp
PudCpAY2IE58jmn/eRMib3QirJK8k5OTZ+os8Zpqsec2R3xkQa6VIzdWwS8R
IeohVvWGNOCsqr+/v7CmOSVbv01r2fT5PhjADMZwgSNPyjZicXGxr6/vzdO1
vi447LN+REAcRENMRFZ5Xr+8eafIlKg1i6o3EB9ZAggtP/wSEaISqDfCBL+l
ExMTn7Zbj5Q0JGfrcVKZdLojrfT6jsqbO6uHUbCAVVRiEwxgBmO48HZzYObn
59Fd4qzfd+YbxtgG+CIC4iCaf/4H5n348KHV1v2Ktio5v1UksYHIiN/Z1YNc
m7adXyJC1AD1RkTASdbY2Jitq/tcveXdItNLJ43JWeVxh8tQsIBVVGITDGDG
MzKB4NwcZ8cF1c0JWfrE/CvB3muAPbzgiwiIE/gKg9ryzszMtLZb9+ZWiiE5
EBOREX/lw7+bwi8RIbEN9UYEWVpamp6exo+hw+G4evWqfzwDFrCKSmzi5IfB
ghPY8fFxc2vbG4W1zx+tSCpsFzIbJ2xgCXt4wRcRgj0RVkPeH374AZLgFW1V
otYcqbEciINoiInIiB9U2/3wS0RIrEK9QZTP7Owsupva5ta3ztRty9TF51xA
95pabE83DPqfa8BfLKMG9dgKG1jWWVrhtfYRVOZdZmZmxmrrfqfIFK+pDv+J
FURAHETr7OoJ6soGIUQNUG+QaAFd2PDwcJu181y95cB506vaqu0a/QtHyrYc
KsVfLKMG9djabu2EZaS6vNjO+/Dhw4GBgTN1lnSNIenDy6FNBeab1OvDy4iA
OIgmZMwGIURtUG+Q6OLx48f3798fHx8fGhqy2+09PT02mw1/sYwa1GOr/4Vo
zCsQr9c7OTnZZrX5pgLL0ifmWYS/YwWWsIcXfBEBcTiGkxCyLtQbhJCnz4Zr
jo6OtrZbc/QX9+Yat2ZXJuY1pxV17dB9kWEc8g/wwF8sowb12AobWMIeXvDl
GE5CSACoNwghy3g8nsnJyWvXrjV+8lme0fzzs/WvaKvSNfqETN3Ww2X4i2XU
oB5bYQNL2EdqDj1CSAxDvUEIWcv8/Py9e/dGR0cdDkdfX9/yfRwsowb12Cpk
XhFCCPFDvUEIIYQQsaHeIIQQQojYUG8QQgghRGyoNwghhBAiNtQbJGQ49XQM
w38uISSyUG+QEOCrtWIY/nMJIWJAvUGCgq8Oj2H4zyWEiAf1BhEOTmb7+/sL
a5pTsvXbtJZ0w2Dg95bCAGYwhgsceS6sZPjPJYSICvUGEcjc3FzP571vF5ni
jlVv1/Vv+pL05QJjuMAR7ggidzvIOvCfSwgRG+oNIgScvaJDeT2/Jv5Eo/+V
6EEVuMAR7ggSkRNhj8fjdrudTqfdbvcPZcQCVlEp6tzaMZmX/1x58xKiEqg3
yKZ4vd7+/n6cw/r6o+rhYPujH3ul6mG4IwhChXO7H7/8Lperpa1DazTvK6jd
ddyQkKlDwQJWUYlNMIh4BxGrefnPlTEvIaqCeoNsysTERGFNc9yx6hBOfled
CCMIQiFgaHvy4MEDq61bU96UpjGk5pkzint3Vw3tqXehYAGrqMQmGMAMxpE6
AjGcl/9cufISojaoN0hgFhYWPm23pmTrg7qtv1FBEIRCwBAuvE9NTTW3tr98
ypiivbTb+OVe01frFmyCAcxgDJfwj0AM5+U/V668hKgQ6g0SmLGxsSMlDdu0
lvD7I39BKARE2KB2A+eV+KnPOF6x46x1o05hZYEZjOES5glpbOflP1eWvISo
E+oNEoClpSVbV3dytn7TpyOFF4RCQIQVPkGlx+Ox2rpxdimwX1juHeACx5Bv
u8d2Xv5zZclLiGqh3iABmJ6ePldvic+5EKn+yF/ic3wTVCK4wN1wuVya8qYU
7SXh/YK/wAWOcA+t+bGdl/9cWfISolqoN0gAxsbG3i3yTTIZ2S4JARFW4FV3
nEi2tHWkaQwBbq9vVOACR7iHcDYa83n5z5U+LyFqhnqDBMDhcLx00phWej2y
XRICIiyCC9kHt9utNZpT88zB9gv+Ake4I0iwbY/5vPznSp+XEDUjtt5YiXiJ
iEhcvXo1Oat8R+XNyHZJCIiwCC5kH5xO576C2ozi3tC6BjjCHUGCbXvM5+U/
V/q8hKiKA2sQNZd4wYkEdHV1xR0uC3kaqI0KAiIsggvZB7vdvuu4YXfVUGhd
AxzhjiDBtj3m8/KfK31eQtQM9QYJgBK6JJglZOr21LtC6xrgCHeBuVSVl/9c
6fMSomaoN0gAlHDJXW1dkmR5+c+l3iBESqg3SACUMKRQbZfcJcvLfy7vpxAi
JdQbJABKeGRSbUMKJcvLfy7HixIiJdQbJAB/nhLKFNkuKagpodxu96lKeR6Z
jO28/OfyeVhCpIR6gwRACVNeq21KKMny8p/L+b4IkRLqDRIYJbzSS21TXkuW
l/9czmdOiGRQb5DAKOGV5Wp7pZdkefnP5fvaCJEM6g2yKRMTE4U1zXHHqndW
3QqnP4I7giAUAga7D2p7ZblkefnP5fvoCZEG6g2yKV6vt7+//+0iU/yJxpCn
h4Ij3BEEoRAwhN2YmprCTz3OLlO0lwLcdscmGMAMxnAJv/mxnZf/XFnyEqJC
qDeIEBYWFno+7309v8bXKwV/IgwXOMIdQYK62L4KnFdabd2a8qY0jSE1z5xR
3Lu7amhPvQsFC1hFJTbBAGYRPAmN7bz858qSlxC1Qb1BBDI3N4cOBeewcceq
g7rdD2O4wBHuCBLmbng8HpfL1dLWoTWa9xXU7jpuSMjUoWABq6jEJhhE/PZ6
bOflP1eWvISoCuoNIhycvfb39xfWNKdk67dpLZs+RwkDmMEYLnAM5+R3Ffjl
d7vdTqfTbrd3PQMLWEWlqJ1CDOflP1euvISoBOoNEhRer3diYuLTduuRkobk
bH18jm+CyrTS6zsqb+6sHkbBAlZRiU0wgBmM4RLabX0iJfznEkLEg3qDhABO
ZsfGxmxd3efqLe8WmV46aUzOKo87XIaCBayiEptgALMInvkSCeA/lxAiBtQb
JGSWlpamp6fR6TgcjqtXr/ovQWMBq6jEJoGTTBIFwn8uISSyUG8QQgghRGyo
NwghhBAiNtQbhBBCCBEb6g1CCCGEiA31BiGEEELEhnqDEEIIIWJDvUEIIYQQ
saHeIIQQQojYUG8QQtby+PHj+/fvj4+PDw0N2e32np4em82Gv1hGDeqxFTZy
7yYhJGqg3iCErGRmZmZ4eLjN2nmu3nLgvOlVbdV2jf6FI2VbDpXiL5ZRg3ps
bbd2whL2cu8yISQKoN4ghPiZnZ11OBx1lta3ztRty9TF51xIKmxPLbanGwZ3
Vt3KqBnBXyyjBvXYChtYwh5e8JV79wkhioZ6gxDi9XrHx8fNrW1vFNY+f7QC
cmJH5c3A76NHgQ0sYQ8v+CICXxRLCNkI6g1CVM7i4uLAwEBBdXNClj4x/8rO
qtubKo2VBfbwgi8iIA6iyd0gQogSod4gRM3Mz8/39fXtP2eKO1a9vXwgKKWx
smzX9SPC/vMmRENMuZtFCFEc1BuEqJbFxUXIgzdP18bnXNhpdIYsNn680GF0
xueYEA0xeZWDELIK6g0SDh6Px+12O51Ou93e9QwsYBWV2CT33pFAeL3egYGB
/edMPrER5D2UAPdWIDn2nzchctSN5eCHmRBRod4goYFfYJfL1dLWoTWa9xXU
7jpuSMjUoWABq6jEJhjwh1qx3Llzp6C6Oe5YdfhXNlZd5UBMRB4fH5e7iULh
h5kQCaDeICHw4MEDq61bU96UpjGk5pkzint3Vw3tqXehYAGrqMQmGMAMxnLv
L1nN7OysubUtIUsfzpiNAGM5EBnxo+IhWX6YCZEG6g0SLFNTU82t7S+fMqZo
L+02frnX9NW6BZtgADMYw0XuvSZ/hcPheKOwNjH/SsTFhr8gMuIji9wN3QR+
mAmRDOoNEhQ4v8NPbsbxih1nrRv9OK8sMIMxXHhiqBxmZmbqLK3PH62I1LCN
dQdyID6yKHn2UX6YCZES6g0iHI/HY7V14yxP4O/z8q80XODI298KYXh4+K0z
dUmF7SKJDX9BfGRBLrmbuz78MBMiMdQbRDgul0tT3pSivST899lf4AJHuMvd
AuJ7EVu7tXNbpk7IDKLhFMRHFuRS5mvd+GEmRGKoN4hAcELX0taRpjEEuM0d
4PY3HOHOs0LZuX///rl6S3zOBVHFhr8gC3Iho9yNXg0/zIRID/UGEYjb7dYa
zal55mB/n/0FjnBHELnboXbGx8cPnDeJfTNl+ZYKcinwwVh+mAmRHuoNIhCn
07mvoDajuDe0n2g4wh1B5G6H2hkaGnpVW5VabJdAbyALciGj3I1eDT/MhEiP
2HpjJeIlIhJgt9t3HTfsrhoK7ScajnBHELnboXbwL9iu0acbBiXQG8iCXAr8
p/PDTIgEHFiDqLnEC04kpqurKyFTt6feFdpPNBzhjiByt0Pt9PT0vHCkbGfV
LQn0BrIgFzLK3ejV8MNMiPRQbxCB8Cc6NrDZbFsOlUogNvwFuZBR7kavhh9m
QqSHeoMIhJegYwNe33jKDzMhckC9QQTCIXaxAcdvPOWHmRA5oN4gAnG73acq
+Qhh1MPnU57yw0yIHFBvEIFwiqTYgPNvPOWHmRA5oN4gwuEU0DEA5xf1ww8z
IRJDvUGEw1dcxQCPHz9u4/tT+GEmRHKoN0hQ8BXeMQDfD+uHH2ZCpIR6gwTL
1NQUfnJxlpeivRTg9jc2wQBmMIaL3HtN/sLMzEydpfX5oxU7q26LJDYQGfGR
Bbnkbm4g+GEmRDKoN0gI4PzOauvWlDelaQypeeaM4t7dVUN76l0oWMAqKrEJ
BjDjyaACcTgcbxTWJuZfEUlvIDLiI4vcDd0cfpgJkQbqDRIaHo/H5XK1tHVo
jeZ9BbW7jhsSMnUoWMAqKrEJBrzNrUxmZ2fNrW0JWfrt5QMRFxuIiciIjyxy
N1QQ/DATIgHUGyQc8AvsdrudTqfdbu96Bhawikr+OCuc8fHxgurmuGPVO43O
SN5JMToRE5EV+BhsYPhhJkRUqDcIUSder3dgYGD/OVN8zoVIDeRAnPgc0/7z
JkRGfLmbSAhRENQbhKiWxcXFvr6+N0/X+iRH2Fc5EAFxEA0xEVnuxhFClAX1
BiFqZn5+HvJg/zlT3LHqcMZywBcREAfREFPuZhFCFAf1BiEqZ3FxcWBgoKC6
OSFLn5h/Jdh7K7CHF3wRAXF4ZYMQsi7UG4QQr9c7Pj5ubm17o7D2+aMVSYXt
QmYfhQ0sYQ8v+CICx2wQQjaCeoMQ4md2dtbhcNQ2t751pm5bpi4+5wLkRGqx
Pd0wuLPq1rNLGbewjBrUYytsYFlnaYVXtDz6SgiRC+oNQshKZmZmhoeH26yd
5+otB86bXtVWbdfoXzhStuVQKf5iGTWox9Z2aycsFT6DKCFEIVBvEELW8vjx
4/v374+Pjw8NDdnt9p6eHpvNhr9YRg3qsVWZL2IjhCgT6g1CCCGEiA31BiGE
EELEhnqDEEIIIWJDvUEIIYQQsaHeIIQQQojYUG8QQgghRGyoNwghhBAiNtQb
hCiZpaWl6enpsbExh8Nx9erVrmdgAauoxCYYyL2PhBCyOdQbhCiThYUFKApb
V/e5esu7RaaXThqTs8rjDpehYAGrqMQmGMAMxnLvLyGEBIJ6gxCl4fV6JyYm
Pm23HilpSM7Wx+eYkk53pJVe31F5c2f1MAoWsIpKbIIBzGAMF74ujRCiWKg3
CFEUCwsL/f39hTXNKdn6bVpLumEw8EtaYQAzGMMFjrzQQQhRJtQbJBw8Ho/b
7XY6nXa73T+0AAtYRSU2yb130cfc3FzP571vF5nijlVv1/Vv+kb45QJjuMAR
7ggidzsIIWQ11BskNCAnXC5XS1uH1mjeV1C767ghIVOHggWsohKbYEDVIZyF
hQWohdfza+JPNPrf/x5UgQsc4Y4gvMpBCFEa1BskBB48eGC1dWvKm9I0htQ8
c0Zx7+6qoT31LhQsYBWV2AQDmMFY7v2NArxeb39//9tFJp/YqB4OVmz8KDmq
h+GOIAjFsRyEEEVBvUGCZWpqqrm1/eVTxhTtpd3GL/eavlq3YBMMYAZjuMi9
10pnYmKisKY57lh1CFc2Vl3lQBCEQkC520QIIX+BeoMExYMHD6AfMo5X7Dhr
3UhprCwwgzFceJUjAAsLC5+2W1Oy9UGN2QgwlgOhEJB3VQghyoF6gwjH4/FY
bd0vnzIKFBvLkgMucORYjo0YGxs7UtKwTWsJX2z4C0IhIMLK3TJCCPkR6g0i
HJfLpSlvStFeEi42/AUucIS73C1QIktLS7au7uRs/aaPvgovCIWACMvZRwkh
CoF6gwjE4/G0tHWkaQwBxmwEGMsBR7jzEsdapqenz9Vb4nMuREps+Et8jm/2
UQSXu32EEOKDeoMIxO12a43m1DxzsGLDX+AIdwSRux2KY2xs7N0i3wyikdUb
CIiwvKVCCFEI1BtEIE6nc19BbUZxb2h6A45wRxC526E4HA7HSyeNaaXXI6s3
EBBhEVzu9hFCiA+x9cZKxEtEJMBut+86bthdNRSa3oAj3BFE7nYojqtXryZn
le+ovBlZvYGACIvgcrePEKJSDqxB1FziBScS09XVlZCp21PvCk1vwBHuCCJ3
OxQHjknc4bKQ5/jaqCAgwvKAE0IUAvUGEQj1hkhQbxBC1AD1BhEI76eIBO+n
EELUAPUGEQjHi4oEx4sSQtQA9QYRiNvtPlXJ52EjD5+HJYSoAeoNIhDO9yUS
f57vyxRZvcH5vgghioJ6gwiH85mLAeczJ4SoAeoNIhy+r00k+L42QkjMQ71B
goLvoxcDvo+eEBLzUG+QYJmamoJ+ePmUMUV7KcBYDmyCAcxgDBe591rpTExM
FNY0xx2r3ll1KxyxAXcEQSgElLtNhBDyF6g3SAg8ePDAauvWlDelaQypeeaM
4t7dVUN76l0oWMAqKrEJBjDjlQ0heL3e/v7+t4tM8ScaQ577C45wRxCEQkC5
20QIIX+BeoOEhsfjcblcLW0dWqN5X0HtruOGhEwdChawikpsggHHbAhnYWGh
5/Pe1/NrfJIj+KsccIEj3BGEd1IIIUqDeoOEA+SE2+12Op12u73rGVjAKiqp
NEJgbm4OauHtIlPcseqgxnLAGC5whDuCyN0OQghZDfUGIYpiYWGhv7+/sKY5
JVu/TWvZ9CFZGMAMxnCBI69sEEKUCfUGIUrD6/VOTEx82m49UtKQnK2Pz/HN
PppWen1H5c2d1cMoWMAqKrEJBjCDMVw4ZoMQolioNwhRJgsLC2NjY7au7nP1
lneLTC+dNCZnlccdLkPBAlZRiU0wgBkvaxBCFA71BiFKZmlpaXp6GorC4XBc
vXrVP0gGC1hFJTZxBlFCSFRAvUEIIYQQsaHeIIQQQojYUG8QQgghRGyoNwgh
hBAiNtQbhBBCCBEb6g1CCCGEiA31BiGEEELEhnqDEEIIIWJDvUEIIYQQsaHe
IIQQQojYUG8QQgghRGyoNwghhBAiNtQbhBBCCBEb6g1CCCGEiA31BiGEEELE
hnqDRCMej8ftdjudTrvd3vUMLGAVldgk994RQghZDfUGiS4gJ1wuV0tbh9Zo
3ldQu+u4ISFTh4IFrKISm2BA1UEIIYqCeoNEEQ8ePLDaujXlTWkaQ2qeOaO4
d3fV0J56FwoWsIpKbIIBzGAs9/4SQgj5EeoNEi1MTU01t7a/fMqYor202/jl
XtNX6xZsggHMYAwXufeaEEKIjxAkwddff93c3Gw0Gtvb2ycnJyMbnJB1efDg
AfRDxvGKHWetGymNlQVmMIYLr3IQQogSCFYSdHV1Hfhruru7IxWckHXxeDxW
W/fLp4wCxcay5IALHDmWgxBCZCcoSfD9998fPHjwvffeu3r16nfffWez2fyS
Y3x8PPzghGyEy+XSlDelaC8JFxv+Ahc4wl3uFhBCiNoJShJ8/PHHsL98+fJy
TUtLC2r0en34wQlZF4/H09LWkaYxBBizEWAsBxzhzkschBAiL8IlwaNHj957
7z3Yf/PNN8uV3333HWpQv+7vOfUGCR+32601mlPzzMGKDX+BI9wRRO52EEKI
qhEuCe7du+eXFk+ePFlZf/DgQdSv+yAA9QYJH6fTua+gNqO4NzS9AUe4I4jc
7SCEEFUjXBJ8/fXXMNZoNKvqUbPREI4DGxDuThM1Ybfbdx037K4aCk1vwBHu
CCJ3OwghRBVs1PUL7/3HxsZgnJubu6r+ww8/RP26Q/IoLUj4dHV1JWTq9tS7
QtMbcIQ7gsjdDkIIUTXCJcG//Mu/wPjkyZOr6qFAUA81Ek5wQjaCeoMQQmIA
4ZLg+++/h/HRo0dX1aMG9f/6r/8aTnBCNoL3UwghJAYQLgnm5+f9918ePXq0
XPkf//Ef/so//OEP4QQnZCM4XpQQQmKAoCSBf2jo7du3l2tu3bqFmuzs7PCD
E7Iubrf7VCWfhyWEkOgmKEngn8y8sLBwYWEBq/hbUFCAGpvNFn5wQtaF830R
QkgMEJQkmJ+f94/WOHHiRF1dHf5i+de//vXS0lL4wQnZCM5nTggh0U6wkuDB
gweFhYXLz9IWFBR8//33kQpOyLrwfW2EEBLthCYJ5ufnv/3223/7t39bNddo
RIITsha+j54QQqIaUSUB9QaJIFNTU9APL58ypmgvBRjLgU0wgBmM151mnxBC
iPRQb5Ao4sGDB1Zbt6a8KU1jSM0zZxT37q4a2lPvQsECVlGJTTCAGa9sEEKI
cqDeINGFx+NxuVwtbR1ao3lfQe2u44aETB0KFrCKSmyCAcdsEEKIoqDeINEI
5ITb7XY6nXa7vesZWMAqKqk0CCFEgVBvEEIIIURsqDcIIYQQIjbUG4QQQggR
G+oNQgghhIgN9QYhhBBCxIZ6gxBCCCFiQ71BCCGEELGh3iCEEEKI2FBvEEII
IURsqDcIIYQQIjbUG4QQQggRG+oNQgghhIgN9QYhhBBCxIZ6gxBCCCFiQ71B
CCGEELGh3iCEEEKI2FBvEEIIIURsqDcIIYQQIjbUG4QQQggRG+oNQgghhIgN
9QYhhBBCxIZ6gxBCCCFiQ71BCCGEELGh3iCEEEKI2KhBbyhkN0gswQ8VEQN+
rkjEUc6HinqDkBDgh4qIAT9XJOIo50NFvUFICPBDRcSAnysScZTzoZJSb8jV
auaN4byqaizzMi/zMm9UJF03r9h6YxXi5Qq8G8wbq3lV1VjmZV7mZd6oSPp0
PQHA6xvMG9V5VdVY5mVe5mXeqEi6bl7qDeaN6ryqaizzMi/zMm9UJF03r8T3
UwghhBCiTsTTG4QQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBASGg8fPuzu7q6trW1oaBgYGJifn5d7j0jU85vf
/ObqGpxOp9z7RaKS2dnZioqKL774Yu2mr7/+urm52Wg0tre3T05OSr9vJHrp
6+szGAzoAVdWogdc+9sFZmZm5NrPmAHHVqPRrJy2/dSpUzywJEzy8/PXvhGg
oKBA7v0i0cejR49Onz6Nz09jY+OqTV1dXas+Yzh1kmUnSdQxPDzs/8z8+7//
+8r6r776at0XmoyOjsq1qzFDXV0djuRHH330u9/97re//e2vf/1rrJ45c0bu
/SJRzJ/+9KeDBw/ig4QTz5YV2O12uXeNRBk49ykuLvb/4K/SG99//z0+Zu+9
9x7OPb/77jubzeY3Gx8fl2tvSVTw5MmT/v7+Q4cOras3rFYrKgsLC1v+mvv3
78u1w7HB5OQkDuz7778/Nzfnr8GCv6e4d++erLtGophvv/0WHyGNRiP3jpDo
5vr164cPH14+wVylNz7++GNUXr58ebkGnQJq9Hq95HtKooY//OEP/k/OMqv0
RkVFBSohSOTaw1ilra0NB9ZgMKysrKysRGVra6tce0WincHBQXyEysvL5d4R
Et289957+CAVFRVdunRpld549OiRf+s333yzXPndd9+hBvUej0eO/SVRgP8e
3AcffPDFF1/4T65X6Y0TJ06gcmpqSq49jFVwIoADi+O/srK7u5udBQkHnHLi
I4TThKamprNnz5aWll65cuWPf/yj3PtFogwojVu3bnm93s8//3yV3rh3755f
Wjx58mSli78HYWdBNuLGjRuQr/4xilAdq/TGw4cP/Rc9ent70T+ePn26vr7e
5XLJt7+xA77Oay8cYZVDOEg4nD9/fu1oq2PHjvEmHQmNnp6eVXrj66+/Xvee
nX/0O4dwECGsvb7x29/+dt3Bog0NDfLtZozgH/U9NDS0svL27duo/PWvfy3X
XpGoBuebmZn/f3v385JKFMUB/P8NetVCUPNH6MIwCh6RQeCmxSwkMGgj/XAR
iBQuCmoRQTAijZhgoPlj7Mf70uENg1d4D33Pyx2+n4Xo4S4OcmfmXOfO8Qem
UCwWq9VqjuNgiRoKhRBJJBKu6+pOkMyj1hu3t7eIRCKRiZGYY4hzQUp/Q603
Tk9PpcAoFApYH9m2nc/nJVKtVjWmGgCZTEb9GlF+IIhSRFdWZDTUG7gWlMtl
bxMyPD09yd12LB805kaGUuuNu7s7RKLR6MRIVCCIYwYuNkEyklpvtFotXBAn
Hn3d3d3FsGw2u/AEA2V/fx9f4/n5uT94dnaG4Pb2tq6sKJCSySTm1cXFhe5E
yDxqvdFoNBBZWVmZGIkI4g8PD4tNkIw0db+oqlarYdjq6upisgoqy7LwNR4d
HfmD+IhgPp/XlRUZzXVdx3H8Tw0IuXnHeoNmoNYb3W5XfuUejUZecDgcShCr
VB1pkmHUeuP19dW2bbz6h8nNO9Ybc5KtofF43B+MxWIITm0dTPRHj4+Pcs6v
1+tesNfrSSOF+/t7jbmRodR64+v31tDr62svcnV1hcja2trCEyQjqfXGzs4O
Int7e/5h0jhic3Nz4QkGymAwkJ8fvS2jlUpFHiXgv6jQbFzXlcZ9uVxuPB5/
fbcblTa24XCY+0VpBlPrDWmkkE6n397e8BGvqVQKkZOTE01pkmHUesPrUus9
Uo03ckJjB7D5HR8fy2PsP7/Jpj4sE3TnRQYrl8tyzGKleXBwEI/H8R6H9s3N
je7UyEhT6w2siWS5hDoWBa20adrY2Hh/f9eVJ5lFrTf6/f76+rqcvrLZLBZN
MmZra4vzan6fn59YJnid5JeWlorFou6kyHiXl5f+/wFMJpNswUQzK5VKmEWH
h4cT8WazmU6nvWmWSqUajYaWDMlEcpO30+n4gy8vLygzvEm1vLxsWRaLjX/o
4+Pj+fkZh+pgMNCdCwUEJhWOXNu25eduov+k2+1imrXb7Yleo0Qzw6UQF0TH
cXAe050LEREREREREREREREREREREREREREF1i8K99Z6
    "], {{0, 364.5}, {360., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360., 364.5},
  PlotRange->{{0, 360.}, {0, 364.5}}]], "Output",
 TaggingRules->{},
 CellLabel->"Out[81]=",
 CellID->1713165403,ExpressionUUID->"3ed4e6fa-5bfa-4c58-b746-c4793de7e99e"]
}, Open  ]]
}, Open  ]],

Cell["Options", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->879773335,ExpressionUUID->"bdfa843b-65bf-4203-a7da-50f5b881ba8a"],

Cell["Applications", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->542143288,ExpressionUUID->"7e748264-4682-4525-8f9d-08bd07da68ab"],

Cell["Properties and Relations", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->727494039,ExpressionUUID->"da9fe749-471e-4cb5-96fd-d4552e8ee3ae"],

Cell[CellGroupData[{

Cell["Possible Issues", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->471245215,ExpressionUUID->"108d22f1-9c75-41bd-a33f-482ad3278751"],

Cell["Wrappers are not permitted:", "Text",
 TaggingRules->{},
 CellID->1459547048,ExpressionUUID->"5bc4c0d9-4473-4fed-a9f4-273e03be6f6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HistogramBubbleChart", "[", 
  RowBox[{"{", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1"}], "}"}], ",", "\"\<Hello\>\""}], "]"}], " ",
    "}"}], "]"}]], "Input",
 TaggingRules->{},
 CellLabel->"In[89]:=",
 CellID->1719470519,ExpressionUUID->"cbae6437-12c3-4098-b134-ce6f3fb76517"],

Cell[BoxData[
 RowBox[{"HistogramBubbleChart", "[", 
  RowBox[{"{", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "\"Hello\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], "}"}], "]"}]], "Output",
 TaggingRules->{},
 CellLabel->"Out[89]=",
 CellID->2069139512,ExpressionUUID->"c3e5de48-8ab3-4b9d-a3ab-96c011339bc5"]
}, Open  ]]
}, Open  ]],

Cell["Neat Examples", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->303071976,ExpressionUUID->"9879f7e2-dae6-4e2f-b92a-e68d2c67cc76"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->132008035,ExpressionUUID->"155ca0f7-6bf9-4d22-b2dc-ca40d7a7cc88"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "57e9bc2b-19d7-4ca8-be71-212d4e1bc699"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->635454497,ExpressionUUID->"f8d1f8e8-933b-40c9-b37b-eafe92a01849"],

Cell["Willem Nielsen", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->744260130,ExpressionUUID->"e2a961d4-ae0f-4de0-b36c-9735c2b12f63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "06ef96dd-75df-4892-bc6f-1e7f4741e9af"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->156850785,ExpressionUUID->"6006eaf0-6e64-4c21-ada4-b253fc94cdc2"],

Cell["Data Visualization", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->12473014,ExpressionUUID->"b53c6699-edd5-4b61-9df1-a90215d8fedd"],

Cell["Data Analysis", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->1347122759,ExpressionUUID->"97aad94c-5ac0-49b5-bae2-63b510cd68f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your function. These choices \
determine which pages your function will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "15cb4c90-d6df-44d0-ab92-d34ab2f4b72f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->506886442,ExpressionUUID->"672d9ccc-afb7-403c-843c-c6b2ec135aa2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
           StyleBox[
           "\"Cloud & Deployment\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Data Manipulation & Analysis", {
            False, "Data Manipulation & Analysis"}], "\" \"", 
           StyleBox[
           "\"Data Manipulation & Analysis\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "External Interfaces & Connections"}], 
           "\" \"", 
           StyleBox[
           "\"External Interfaces & Connections\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geographic Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Geographic Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
           StyleBox[
           "\"Graphs & Networks\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Images"}], "\" \"", 
           StyleBox[
           "\"Images\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Knowledge Representation & Natural Language"}], 
           "\" \"", 
           StyleBox[
           "\"Knowledge Representation & Natural Language\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
           "\" \"", 
           StyleBox[
           "\"Notebook Documents & Presentation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Repository Tools", {False, "Repository Tools"}], 
           "\" \"", 
           StyleBox[
           "\"Repository Tools\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
           "\" \"", 
           StyleBox[
           "\"Social, Cultural & Linguistic Data\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
           StyleBox[
           "\"Strings & Text\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
           StyleBox[
           "\"System Operation & Setup\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "User Interface Construction"}], 
           "\" \"", 
           StyleBox[
           "\"User Interface Construction\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Wolfram Physics Project"}], "\" \"", 
           StyleBox[
           "\"Wolfram Physics Project\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"", 
           
           StyleBox[
           "\"Core Language & Structure\"", FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Engineering Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Financial Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Financial Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geometry"}], "\" \"", 
           StyleBox[
           "\"Geometry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Higher Mathematical Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Just For Fun"}], "\" \"", 
           StyleBox[
           "\"Just For Fun\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
           StyleBox[
           "\"Machine Learning\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Programming Utilities"}], "\" \"", 
           StyleBox[
           "\"Programming Utilities\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Scientific and Medical Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Scientific and Medical Data & Computation\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
           StyleBox[
           "\"Sound & Video\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Symbolic & Numeric Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
           StyleBox[
           "\"Time-Related Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
           StyleBox[
           "\"Visualization & Graphics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdjksKwjAQhl209qF4kx6iBISCWHG8QIyjBtskZGYWub2pG9Htx//4+\
raDEjhNCOtROAh3UKknmhfe7isqDpYyKQfGmajphf2s2ZoO6lP0ASMnaJVmfPhokXJ3DGy9+\
81Wyk8y/8Hd4BhjiMh6aUDTuwRyJcx/GyWUg4PLPlTu9UT4hR+V4uhdZtszkpdo8JICQr0XZ5axN/\
HAS40="},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->275902571,ExpressionUUID->"6d2f6402-7873-41ea-a2db-85f9f073d42e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Symbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2d1be7b2-f51e-4c2f-98cb-b84d3665f6f6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Symbols"},
 DefaultNewCellStyle->{"RelatedSymbol", FontFamily -> "Source Sans Pro"},
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellID->467106741,ExpressionUUID->"eb406230-cae7-4083-a236-ee4864dfd878"],

Cell["BubbleChart", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->195255409,ExpressionUUID->"c525cd11-4565-4891-94c6-4e5d9a74cd28"]
}, Open  ]],

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "85734353-7b8a-431e-b31d-f46d373e8e3c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->845160714,ExpressionUUID->"47945bf3-9507-4293-ba53-908853179792"],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "50ea378d-35ba-4e10-8644-250320ab5a29"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->435134317,ExpressionUUID->"df949421-0347-43e3-9451-52f2d3e4ea6f"],

Cell["Source, reference or citation information", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->785472627,ExpressionUUID->"014f22a1-0105-437b-a6a5-9aa6aaa6632e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "620b5bf7-105a-4985-bdac-95d7a42dc921"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->401731283,ExpressionUUID->"a47b9969-b8df-43c9-b7ca-f1c672651267"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->210331081,ExpressionUUID->"6b99bf59-c53d-4cc2-884b-862e1882fb8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"VerificationTests", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify an optional list of tests for verifying that the function \
is working properly in any environment. Tests can be specified as \
Input/Output cell pairs or as symbolic ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "VerificationTest", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/VerificationTest", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " expressions for including additional options."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoVerificationTests"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4a8d072e-e1d4-4bc8-92f7-b51fc928a448"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "VerificationTests"},
 DefaultNewCellStyle->"Input",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellID->443679100,ExpressionUUID->"7b97307f-4e10-4035-ab3d-cb48c7469315"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->100059477,ExpressionUUID->"6ee4e7a1-a69f-4fcb-8db4-8c79414653ac"],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->201760648,ExpressionUUID->"8e931b0a-8053-4711-8655-1371fc220174"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your function to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "75128929-030b-4494-b44e-bf4bb78ccd35"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->551095495,ExpressionUUID->"fab5e79e-16a2-4f25-9b26-dd81a227297c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8d781be9-b8a4-490a-97ae-db80d36e66ce"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->389299396,ExpressionUUID->"aa4c28a5-abbc-46f6-bb26-f52ff330d695"],

Cell["13.0+", "Text",
 TaggingRules->{},
 CellTags->{"DefaultContent", "ScrapeDefault"},
 CellID->788185540,ExpressionUUID->"70325b8c-80e1-45dd-8af6-a631391bdffd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your function is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1e57b3c9-f65e-4504-9196-9429728a3f72"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->581108730,ExpressionUUID->"4b6785bf-aab8-43c0-b943-a244ffda1275"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
           StyleBox[
           "\"Windows\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", 
           StyleBox[
           "\"Mac\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Unix", {False, "Unix"}], "\" \"", 
           StyleBox[
           "\"Linux\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFT0tOw0AMlUjSD0WcgCvkEFGkSpFKg2oQbNOpW0YknlFsi87tcRYJO/\
v97Fc9llCApB5h1apElRLW9Te6H7xcM84PngXWn54u4Zdh9dq5Fr4g/yB/\
N2MjOPAsuz5wflILWuTzsDCZ+eeQBSwOnvQ+Z27exhBxlAQvdRhiJ/7sey+\
pNdAWukFiu2pftlF8IOZtpRIG49z0euh1IK6zEp4bEhzjiNJNQthWlEDPjFZxVyubqSErzMW+6xn/\
wakU58dAhj2dkIOODt9TRNjsldwU9gd/wmth"},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->119931900,ExpressionUUID->"0ef489c1-d0c5-41ca-a290-5a28a21eec08"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your function is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6c0b2a9f-53ec-4106-8b0b-35d62343108c"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->408861813,ExpressionUUID->"46780427-9060-44d0-91b4-7cf11c84f3c7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Session", {False, "Session"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Script", {False, "Script"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtugzAMlTYKZbeP2DsfwVArMU1rVU/aMwRXRA1JFDuV+PsFtYR2Tz4+Jz6+\
pHwqYAU8KoR059l6LiCrehQn7I4ZJV+SGDJAImk0vP5iuzk3yjc8peuPhkX/\
aVpIQThpGdLwoNzXkINvT+g0qgBFj51X2IVONeNAs+/xgZJDEBb/GUQl+l5i5O/\
8ZxjVf2Pep4v3ddZrvPGeB76BUV12jqiA9d4Zi45HeK/MYEOfVirJ49J1o8/\
SGT2gng68sxNHlJeezRAeiOnqRvlBU/VYwFutGZ11yJcN8lKPYU3CUPxceQpFtQ5/\
RattowgXcjovJd9GB+7lgGS8E/gz2jD31msxmf0BrOKtKw=="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->216614709,ExpressionUUID->"0d3a84aa-3c13-444e-bbae-d6d4c4142072"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your function is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "243417e8-9d48-493a-bed6-e1e11decce53"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->152470726,ExpressionUUID->"9d8b024b-8aa0-4578-8082-311805f8ab64"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkFqwzAQRUmxmzQJXWTXXS7gQziCgCEkxeMLuPKEiMoaoZlZ+\
PaVoCHbx3szv902UIMsHuH9phJVGlibB9pfnO4rri6OhashKWavE5z5Se9vXPWauwNojJQEp6MLR+\
tJp2ex+U4UMckCX4bmOIr7cd7JYor0n+V/\
tyiOAvNHq0JztmwZQV7nwGbVwGcXBFNMKGMRYX0i8jiGBnZGOSddyMO5Po+\
e8QXLWq6uFDLb98ikyeKwRITNWYMtp/4ArJNZew=="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->612843554,ExpressionUUID->"9fe18317-8c5f-4aa7-9240-7b2ee12bcf07"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your function."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2108dbe7-a32a-4ad1-9838-1035f8e7bbfb"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->156315135,ExpressionUUID->"620ce006-5438-4b35-a874-52dd52555443"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
           StyleBox[
           "\"Notebooks\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
           StyleBox[
           "\"Parallel Kernels\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
           StyleBox[
           "\"Cloud Access\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlj9FqwzAMRcearM1Wxl723h/IRwRDILS0pd4POK7CTB3LWNKD/\
34Og25jb7pXR4LTPbe61pw96KeTcBRu9Vp9gr3BdXqg6uCoNPXAMNO0+s7TI1UXKRfNERlGxBv9Gu/\
bt7NJxnvwuz2kAJ7+N3d2qzzKdddZC0R/\
U6s354QREmf9rnCOht3ovOPcg2FJUIj1KbLDQNR0wjgXwi4a6GUOpFatfh0CQ4oJ2CygbrqQtYwERe\
5FCZWjIRR5qnvjCX7KxZuqI4bSbS9AKMnCR46gN70Euzz7AqnIcMQ="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->226866169,ExpressionUUID->"9643a2d7-5dd7-43f5-9bc2-e1c681dd92b1"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the function documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f416a4d7-4fc7-4a29-b71a-68245d80016c"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->13737072,ExpressionUUID->"59b03ce8-7194-43bd-a65d-dc25a4b745d0"],

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Submission Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "61ac4c39-9297-4e47-98b8-e3ef67ebe074"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Submission Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->563202925,ExpressionUUID->"590a7f8f-63d3-4d57-9006-3cdc3f6d0fe8"]
}, Open  ]]
},
WindowSize->{1051, Automatic},
WindowMargins->{{51, Automatic}, {Automatic, 38}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.92157, 0.34118, 0.10588], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.95220742905154`16.3494147193388*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.95220742905154`16.3494147193388*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.95220742905154`16.3494147193388*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.95220742905154`16.3494147193388*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Notebook converted to template version 2024.06.27\"", 
           LineBreakWithin -> Automatic, LineIndent -> 0, StripOnInput -> 
           False], ItemSize -> Fit, StripOnInput -> False], "\"\"", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "59aafafd-9bc9-4642-832e-7351d2ffc29e"]]]]]], Appearance -> 
           None, BoxID -> "59aafafd-9bc9-4642-832e-7351d2ffc29e", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210071787413`16.34941500973986*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210071787413`16.34941500973986*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210071787413`16.34941500973986*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.952210071787413`16.34941500973986*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 3 potential issues and 8 suggestions\"", LineBreakWithin -> 
           Automatic, LineIndent -> 0, StripOnInput -> False], ItemSize -> 
          Fit, StripOnInput -> False], "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "6c2d5e57-8b7f-4bab-ba7c-040db124c556"]]]]]], Appearance -> 
           None, BoxID -> "6c2d5e57-8b7f-4bab-ba7c-040db124c556", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210418221751`16.34941504780831*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210418221751`16.34941504780831*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210418221751`16.34941504780831*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.952210418221751`16.34941504780831*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 3 potential issues and 1 suggestion\"", LineBreakWithin -> 
           Automatic, LineIndent -> 0, StripOnInput -> False], ItemSize -> 
          Fit, StripOnInput -> False], "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "78b99a73-bb79-4b16-abcc-99e43c8bab22"]]]]]], Appearance -> 
           None, BoxID -> "78b99a73-bb79-4b16-abcc-99e43c8bab22", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210427726121`16.349415048852713*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210427726121`16.349415048852713*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210427726121`16.349415048852713*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.952210427726121`16.349415048852713*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 2 potential issues and 1 suggestion\"", LineBreakWithin -> 
           Automatic, LineIndent -> 0, StripOnInput -> False], ItemSize -> 
          Fit, StripOnInput -> False], "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{
             DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "55b31c90-a259-4bbb-82ed-6667baf9ed25"]]]]]], Appearance -> 
           None, BoxID -> "55b31c90-a259-4bbb-82ed-6667baf9ed25", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210447945011`16.349415051074494*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210447945011`16.349415051074494*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.952210447945011`16.349415051074494*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.952210447945011`16.349415051074494*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 2 potential issues\"", LineBreakWithin -> Automatic, 
           LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
          StripOnInput -> False], 
         StyleBox[
          ActionMenuBox[
           FrameBox[
            TemplateBox[{
              TagBox[
               GridBox[{{
                  TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "2", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]}},
                 AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], 
              GraphicsBox[{
                GrayLevel[0.4], 
                AbsoluteThickness[2], 
                CapForm["Round"], 
                LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
               ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
             "RowDefault"], DefaultBaseStyle -> "HighlightedInput", 
            StripOnInput -> False, ImageSize -> {Automatic, 19}, 
            BaselinePosition -> Baseline, Background -> GrayLevel[1], 
            FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
            Alignment -> {Center, Baseline}], {TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               "\"No author information given\""}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Function", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Warning", "Function", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "385b9839-27ea-4c91-a24f-0974e7fe2a4e", 635454497, 
                "AuthorNotSet", {}]; 
              DefinitionNotebookClient`PackageScope`seekAfter[635454497]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               "\"\\\"SymbolName (documented Wolfram Language symbol)\\\" is \
not a valid symbol name\""}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Function", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Warning", "Function", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "2d790ea4-07e7-418f-867a-df526456d9b7", 195255409, 
                "NotAValidSymbolName", {
                "SymbolName (documented Wolfram Language symbol)"}]; 
              DefinitionNotebookClient`PackageScope`seekAfter[195255409]; 
              Null]}, Appearance -> None], "BoxID" -> "WarningCountButton", 
          StripOnInput -> False], 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "4467f28e-2648-482e-8a5a-be2f213d2ea2"]]]]]], Appearance -> 
           None, BoxID -> "4467f28e-2648-482e-8a5a-be2f213d2ea2", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWVtT20YUrjEQBhxaMulMkyc98EAyadJpO9NL2iauDcQdIMCa9JW1dGQ0rHeV3RWg\
X9a/17MrydhGciTbTFNPJsja1XfOnut3LH9JPWqJQSgi7u3ehBKUCgT3a2rlJApA+/nLS2qp4+P/\
9Sb38M/K7seIMrW5/QGkWT+KBj2Q0refnbdmB6EDOMGLRiuSErj+QFkE/\
hfq0e4VXlFtnhIaekJc4q7lg0Bp1ejSfj/g/dOIgSKNU1Aiki504xDIcptqimouv+\
cuFGq58icT7qXZlgButwTXcKOPqb7w60UnPwLwFNnJ5JFYaRi0WIBqn7fBD3gwqu757SOOUSp7LG+\
rWj6KGEPFXt5dTAWcQh9VBYma+kE/ktY0w+O+KavUKYRCBVrIOAFMcFQKVLf+\
q6m1PRqwSKJnaurhMXUZ6A5XmjJGvinS0F+\
dxdgzmbXRFWOeWSdaYjz8JQIjr35IQ3uGiLvmSX8lkUyeFBrXKkeVCeuNBIuELNDmNmFCt2qkdk6Wf\
v195MbS63WrPMavIs/KKv/\
cXy6wUp2AkbfeFtfcJoFSv5RFzS7eRxrdCJ5JqHX0NKMuNDGuFgi7YZKuDYzG4CHuxjvBPHQkBiZXf\
5QFPpbBFQKeXyVlYV8CfpPqwRlXaTnIsUa7KjoNQ+DeGb+\
g3GPgtYAxNdUwi5IwxUb4tbKVXITFipcikK0uDPAAGoy4fSmicH5QzN1Gk5krLAdXGNBft3BTX8gA1\
LetC3Ave+IGb2/e3jbSSSNbs982UR6NmLb5zXWOpuTL7BaBJDdzXV26mg0doS674iz08Dqt+\
8VeXgD4mIPreONBlgJr+0z0KDu/MC1t1KLqp7Ji90G/\
CzwPeFKIyqfrHuVu3LoQgQvtgDLRH1WskSomNXZJ7K9YlCm/\
zFOd4uqWXTU9icDHCPDU5FFqAeZlAk+\
wXQzPOy5gBCxrKStdGdnUnrNKVGl22UUWdCkNUd9XVYH3quRYSmUmpY5ZKLPnEVwP7Zlr4yRB1GFVl\
bcjBQfQp27c6XMhk+qU+VotG2/kJ9/rspJycCcSb1oazilmWo1dUqsH+\
KQtjHtV7dYHnZWxcYkLSyVMiQ3UHLAuUgXqPtQtzEak0JY1r5rdnbbJS6ufetDBmt3HSF3rcCss/\
oSR60OtCw6eApeue9mJ1LAz3IHt3Vp7KH5EZk3tVm6DlAseuJQdSxECWsvyuVl1HlE0f4hYSotho6m\
UcAPLvU9Us3Juh6m2JEb144GJobWmJSNdsRg4GyZkk1igQ9DUM/\
NBOoGRtVagkwHkSbLj1Sn4IE10O9nSbXVZjFdGhE6olUxPwxkqGUGXD9Dmd0bPL+zn+\
VucCeYZVqZMEhX4/fNClGqEvhrONAb/YyESDoGXtA/ERYdU4+1nhZhJt8uLg0TYzET+3kROZ/\
YlrVeGz88E9Zmx+OP5vVCB1t+HtFl4/k6hHpPEvjht/ydMfqZqgQDffbJeTVLn1tzOtQz+\
VSHMfVD2YqXHzDMzUX9RiD8fM6+KW5aK/1bOHv8tAZ9Lyc+Idv9ceA7iShpi/ZnMkHl49+\
uS7SqXbc+s6ox0uzPlN/bsx3HMtiicFDuddi8UdpH0ex7nlCTdtbHf2yfeAuUz8R/sZ+etcc9oqyP/\
1LoXgXJ4qqpjqBiVytHC6YHj2i7iOb4UA4c6HK5BOmmHeeEogf8G4Pi4KcIocAY0NkjOtZCIpBy4CT\
F2wHvptIUTi8i5DtSFgdYydmikxQAPizZgseMKjrgaw8/RYwrhboqrgxC39hhk0t/cTg/\
1dHpYy6aH8TlCbaLrk2YjJJVx4TBiHTj5bmz4CqLgfdhDgg6L1CGioG9x+\
xY6tG9AO9zDs2EcDuvRetMalxpasHaEJNB0BOvNVRIPeoKRp8nbn0PKEUyeJ9+Snkce5811pZ/+\
KouXDOV2vNqeXMp9D7QyIujZnSeKiMG4/\
WyabbVsUI30dbWyR5mC4Y6npzAQV7A7CHW8e0ORJGTUV01ufdzMGR2GbTwVmCj3d8A9cd0NNHoiRcl\
98fkvn3IKDA=="]]], "CreationTimestamp" -> 
  3.945275399028199`16.34865231358846*^9, "DefinitionNotebookFramework" -> 
  "DefinitionNotebookClient", "ResourceCreateNotebook" -> True, 
  "ResourceType" -> "Function", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "FunctionResource`", "FunctionResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Legacy", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "FunctionResource"}, 
  "SubmissionReviewData" -> {"Review" -> False}, "ToolsOpen" -> True, 
  "UpdatedTimestamp" -> 3.952207423866941`16.349414718769086*^9, 
  "TemplateVersion" -> "2024.06.27", "StatusMessage" -> "", "AutoUpdate" -> 
  True},
CreateCellID->True,
FrontEndVersion->"14.2 for Mac OS X x86 (64-bit) (December 26, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.92157, 0.34118, 0.10588], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Iw32bbtXFXwtUgSAgGyhCvCFPrl64met5
2ZQBEwHFgbIEDXl86tBVL2mg+qv2PM+nVH67dgaCgGygCEjcSxqoBo8hT25d
v+orD1R5N9n61+vnaOEPFAGKg8zxlQeqxGXIrYpwoJo7caZ/f3zHGo9AcaAs
UA1QJVZDHp85ctmc6bIl688nd/GkB6AsUA1QJVA9piF3eouBVjxpTiaYroBq
QA7uLcY05HqMMVDq09HtBA0BqgGqBKqHaIQkaQj7iqsoUAozPDEBUA1QJVA9
3BAgoNwQqriEumFCldihSjqhSoqlVt55Ro1cDHUPxeUJHFBYspEKqGgIfkBM
vQMAXpqjjw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vny6dX8ttuxxhAEZANFgOJAWaAaPIY8f/4cYsKX
C0eue0hcNmVARkARoDjEHKBKXIZ8/foVyP169dQVaw40EyAIKA6UBan5+hWr
IUBH/vv37++vnzf8lbCaAEFAWaAaoEq4p5AN+fQJ5OW3G+bgMQGCgGqAKoHq
MQ35+fMnkH0/z4OgIUA1QJVA9RCNkCQNYf/58wfIxgxPTARUA4q+P3/ghgAB
5YZQxSXUDROqxA5V0glVUiy18s4zauRiCKC8PIEDCks2UgEVDcEPiKl3AIzs
QuI=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Iw32bbtXFXwtUgSAgGyhCvCFPrl64met5
2ZQBEwHFgbIEDXl86tBVL2mg+qv2PM+nVH67dgaCgGygCEjcSxqoBo8hT25d
v+orD1R5N9n61+vnaOEPFAGKg8zxlQeqxGXIrYpwoJo7caZ/f3zHGo9AcaAs
UA1QJVZDHp85ctmc6bIl688nd/GkB6AsUA1QJVA9piF3eouBVjxpTiaYroBq
QA7uLcY05HqMMVDq09HtBA0BqgGqBKqHaIQkaQj7iqsoUAozPDEBUA1QJVA9
3BAgoNwQqriEumFCldihSjqhSoqlVt55Ro1cDHUPxeUJHFBYspEKqGgIfkBM
vQMAXpqjjw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vny6dX8ttuxxhAEZANFgOJAWaAaPIY8f/4cYsKX
C0eue0hcNmVARkARoDjEHKBKXIZ8/foVyP169dQVaw40EyAIKA6UBan5+hWr
IUBH/vv37++vnzf8lbCaAEFAWaAaoEq4p5AN+fQJ5OW3G+bgMQGCgGqAKoHq
MQ35+fMnkH0/z4OgIUA1QJVA9RCNkCQNYf/58wfIxgxPTARUA4q+P3/ghgAB
5YZQxSXUDROqxA5V0glVUiy18s4zauRiCKC8PIEDCks2UgEVDcEPiKl3AIzs
QuI=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5468327008079127585; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5468327008079127585]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Iw32bbtXFXwtUgSAgGyhCvCFPrl64met5
2ZQBEwHFgbIEDXl86tBVL2mg+qv2PM+nVH67dgaCgGygCEjcSxqoBo8hT25d
v+orD1R5N9n61+vnaOEPFAGKg8zxlQeqxGXIrYpwoJo7caZ/f3zHGo9AcaAs
UA1QJVZDHp85ctmc6bIl688nd/GkB6AsUA1QJVA9piF3eouBVjxpTiaYroBq
QA7uLcY05HqMMVDq09HtBA0BqgGqBKqHaIQkaQj7iqsoUAozPDEBUA1QJVA9
3BAgoNwQqriEumFCldihSjqhSoqlVt55Ro1cDHUPxeUJHFBYspEKqGgIfkBM
vQMAXpqjjw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vny6dX8ttuxxhAEZANFgOJAWaAaPIY8f/4cYsKX
C0eue0hcNmVARkARoDjEHKBKXIZ8/foVyP169dQVaw40EyAIKA6UBan5+hWr
IUBH/vv37++vnzf8lbCaAEFAWaAaoEq4p5AN+fQJ5OW3G+bgMQGCgGqAKoHq
MQ35+fMnkH0/z4OgIUA1QJVA9RCNkCQNYf/58wfIxgxPTARUA4q+P3/ghgAB
5YZQxSXUDROqxA5V0glVUiy18s4zauRiCKC8PIEDCks2UgEVDcEPiKl3AIzs
QuI=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    168721804526114855; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    168721804526114855]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Iw32bbtXFXwtUgSAgGyhCvCFPrl64met5
2ZQBEwHFgbIEDXl86tBVL2mg+qv2PM+nVH67dgaCgGygCEjcSxqoBo8hT25d
v+orD1R5N9n61+vnaOEPFAGKg8zxlQeqxGXIrYpwoJo7caZ/f3zHGo9AcaAs
UA1QJVZDHp85ctmc6bIl688nd/GkB6AsUA1QJVA9piF3eouBVjxpTiaYroBq
QA7uLcY05HqMMVDq09HtBA0BqgGqBKqHaIQkaQj7iqsoUAozPDEBUA1QJVA9
3BAgoNwQqriEumFCldihSjqhSoqlVt55Ro1cDHUPxeUJHFBYspEKqGgIfkBM
vQMAXpqjjw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vny6dX8ttuxxhAEZANFgOJAWaAaPIY8f/4cYsKX
C0eue0hcNmVARkARoDjEHKBKXIZ8/foVyP169dQVaw40EyAIKA6UBan5+hWr
IUBH/vv37++vnzf8lbCaAEFAWaAaoEq4p5AN+fQJ5OW3G+bgMQGCgGqAKoHq
MQ35+fMnkH0/z4OgIUA1QJVA9RCNkCQNYf/58wfIxgxPTARUA4q+P3/ghgAB
5YZQxSXUDROqxA5V0glVUiy18s4zauRiCKC8PIEDCks2UgEVDcEPiKl3AIzs
QuI=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Iw32bbtXFXwtUgSAgGyhCvCFPrl64met5
2ZQBEwHFgbIEDXl86tBVL2mg+qv2PM+nVH67dgaCgGygCEjcSxqoBo8hT25d
v+orD1R5N9n61+vnaOEPFAGKg8zxlQeqxGXIrYpwoJo7caZ/f3zHGo9AcaAs
UA1QJVZDHp85ctmc6bIl688nd/GkB6AsUA1QJVA9piF3eouBVjxpTiaYroBq
QA7uLcY05HqMMVDq09HtBA0BqgGqBKqHaIQkaQj7iqsoUAozPDEBUA1QJVA9
3BAgoNwQqriEumFCldihSjqhSoqlVt55Ro1cDHUPxeUJHFBYspEKqGgIfkBM
vQMAXpqjjw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vny6dX8ttuxxhAEZANFgOJAWaAaPIY8f/4cYsKX
C0eue0hcNmVARkARoDjEHKBKXIZ8/foVyP169dQVaw40EyAIKA6UBan5+hWr
IUBH/vv37++vnzf8lbCaAEFAWaAaoEq4p5AN+fQJ5OW3G+bgMQGCgGqAKoHq
MQ35+fMnkH0/z4OgIUA1QJVA9RCNkCQNYf/58wfIxgxPTARUA4q+P3/ghgAB
5YZQxSXUDROqxA5V0glVUiy18s4zauRiCKC8PIEDCks2UgEVDcEPiKl3AIzs
QuI=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6873451360295576381; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6873451360295576381]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6172106006839516455; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6172106006839516455]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3926450748983119469; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3926450748983119469]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4086190758423840734; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4086190758423840734]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8662206799689618007; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8662206799689618007]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Iw32bbtXFXwtUgSAgGyhCvCFPrl64met5
2ZQBEwHFgbIEDXl86tBVL2mg+qv2PM+nVH67dgaCgGygCEjcSxqoBo8hT25d
v+orD1R5N9n61+vnaOEPFAGKg8zxlQeqxGXIrYpwoJo7caZ/f3zHGo9AcaAs
UA1QJVZDHp85ctmc6bIl688nd/GkB6AsUA1QJVA9piF3eouBVjxpTiaYroBq
QA7uLcY05HqMMVDq09HtBA0BqgGqBKqHaIQkaQj7iqsoUAozPDEBUA1QJVA9
3BAgoNwQqriEumFCldihSjqhSoqlVt55Ro1cDHUPxeUJHFBYspEKqGgIfkBM
vQMAXpqjjw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vny6dX8ttuxxhAEZANFgOJAWaAaPIY8f/4cYsKX
C0eue0hcNmVARkARoDjEHKBKXIZ8/foVyP169dQVaw40EyAIKA6UBan5+hWr
IUBH/vv37++vnzf8lbCaAEFAWaAaoEq4p5AN+fQJ5OW3G+bgMQGCgGqAKoHq
MQ35+fMnkH0/z4OgIUA1QJVA9RCNkCQNYf/58wfIxgxPTARUA4q+P3/ghgAB
5YZQxSXUDROqxA5V0glVUiy18s4zauRiCKC8PIEDCks2UgEVDcEPiKl3AIzs
QuI=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1439263868824766472; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1439263868824766472]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.022222], {
                   FaceForm[{
                    RGBColor[0.87451, 0.27843, 0.031373], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                    0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 
                    34.926}, {10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 
                    34.926}, {45., 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                    "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 
                    27.594}, {23.828, 26.543}, {21.426, 26.309}, {21.375, 
                    26.258}, {21.375, 24.219}, {21.375, 17.535}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 15.316}, {23.828, 
                    14.242}}, {{24.578, 18.75}, {24.578, 23.078}, {24.578, 
                    23.539}, {24.953, 23.914}, {25.418, 23.91}, {29.746, 
                    23.91}, {30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078}, {30.578, 18.75}, {30.582, 18.289}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.316}, {33.684, 15.539}, {33.789, 
                    15.602}, {33.789, 17.641}, {33.789, 24.188}, {33.789, 
                    26.227}, {33.684, 26.281}, {31.328, 26.512}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 14.234}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], AspectRatio -> Automatic, Background -> 
                  RGBColor[0.98824, 0.41961, 0.20392], 
                  ImageSize -> {45., 45.}, 
                  PlotRange -> {{0., 45.}, {0., 45.}}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> RGBColor[1., 1., 1.]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> RGBColor[1., 1., 1.], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Function Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> RGBColor[1., 1., 1.], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4428028526384162518; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[4428028526384162518]]& , 
              "\"View general guidelines for authoring resource functions\"", 
              False}, "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.99412, 0.7098, 0.60196]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{"\"Preview\"", "\"Generate a preview notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 2452436683989387920; (
                DefinitionNotebookClient`$ClickedButton = "Preview"; 
                DefinitionNotebookClient`PreviewResource[
                  ButtonNotebook[], "Notebook"]), 
               DefinitionNotebookClient`ButtonCodeID[2452436683989387920]]& , 
              "\"Generate a preview notebook\"", True}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3749335217312873674; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3749335217312873674]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7250853967221918483; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7250853967221918483]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4892365933713591120; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4892365933713591120]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7309290475811609296; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7309290475811609296]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your function submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your function submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your function to the Wolfram Function \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.98824, 0.41961, 0.20392], 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.98824, 0.41961, 0.20392], 2 -> 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.98824, 0.41961, 0.20392]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222], {
                FaceForm[{
                  RGBColor[0.87451, 0.27843, 0.031373], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                 0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 34.926}, {
                 10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {
                 45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                  "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 27.594}, {
                  23.828, 26.543}, {21.426, 26.309}, {21.375, 26.258}, {
                  21.375, 24.219}, {21.375, 17.535}, {21.375, 15.602}, {
                  21.426, 15.547}, {23.828, 15.316}, {23.828, 14.242}}, {{
                  24.578, 18.75}, {24.578, 23.078}, {24.578, 23.539}, {24.953,
                   23.914}, {25.418, 23.91}, {29.746, 23.91}, {30.203, 
                  23.91}, {30.578, 23.539}, {30.578, 23.078}, {30.578, 
                  18.75}, {30.582, 18.289}, {30.207, 17.91}, {29.746, 
                  17.91}, {25.418, 17.91}, {24.953, 17.906}, {24.574, 
                  18.285}, {24.578, 18.75}}, {{31.328, 14.242}, {31.328, 
                  15.316}, {33.684, 15.539}, {33.789, 15.602}, {33.789, 
                  17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                  26.281}, {31.328, 26.512}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234}}}]}}, {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], AspectRatio -> Automatic, 
               Background -> None, ImageSize -> {45., 45.}, 
               PlotRange -> {{0., 45.}, {0., 45.}}}], 
             "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.95686, 0.80196, 0.75]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYIXodLU4JobchTf5E7ztzXrFggCMgGihBvyItgiVv2
HJdNGTARUBwoS9CQ54FiVy2ZsZoAQUBZoBo8hrwMkbyG1wQIAqoBqsRlyB1H
LoImQBBQJVZDngeJE2kCBAHVYxpy342XJEOA6jENuWHDRpIhQPUQjZAkDWFf
tWAiyRCgerghQEC5IVRxCXXDhCqxQ5V0QpUUS628Q5VcTK3yhFolG6mIiobg
B8TUOwCHL0ea
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYIXodLU4JobchtX7HDtnwbjTghCMgGihBvyJMgyT0W
PMu12TARUBwoS9CQBwHi6w04sJoAQUBZoBo8hjwLkdxgiM8ECAKqAarEZcgB
a16CJkAQUCVWQx4GiBNpAgQ9hHkK2ZCTjgIkGQJUj2nINhMukgwBqodohCRp
CHutPjtJhgDVww0BAsoNoYpLqBsmVIkdqqQTqqRYauUdquRiapUn1CrZSEVU
NAQ/IKbeAQCZoBke
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYIXodLU4Jobcj7Gt9vOxf8fnwLgoBsoAjxhrxJM/hx
chtWjwPFgbIEDXlXYPvn1WOg4K8vn67O6tgRag5BQDZQBCgOlAWqwWPIm0TN
P8/vA0VenT263k52uTYbMgKKAMVB5jy/D1SJy5Dv+1cAuW8unV5pyItmAgQB
xYGyQDVAlVgNeZtv8+/Pn7+/fm5yV8dqAgQBZYFqgCqB6jEN+bKqB8i+s2Ye
HhMgCKgGqBKoHtOQXzfPANn703wIGgJUAwr5m2cgGiFJGsL++/4lkI0ZnpgI
qAaoEqgebggQUG4IVVxC3TChSuxQJZ1QJcVSK+9QJRdTqzyhVslGKqKiIfgB
MfUOAFnM7XY=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.92157, 0.34118, 0.10588], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.92157, 0.34118, 0.10588], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.75], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}], True -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.25], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[
           RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}
          , {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "14.2 for Mac OS X x86 (64-bit) (December 26, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"94a342d9-500c-46bc-8d4d-d14e8e5467cd"
]

