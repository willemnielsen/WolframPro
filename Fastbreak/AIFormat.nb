(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    249777,       4878]
NotebookOptionsPosition[    242225,       4739]
NotebookOutlinePosition[    242643,       4756]
CellTagsIndexPosition[    242600,       4753]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", "False", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.924385162790366*^9, 3.924385170173469*^9}, {
  3.9300601379530888`*^9, 3.930060139786849*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b4550adc-338e-48f6-b0c1-85387e60aaed"],

Cell[BoxData[
 RowBox[{"toCSV", " ", "=", " ", 
  RowBox[{
  "LLMFunction", "[", 
   "\"\<Put this text into csv format with the following categories`1`\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9243540668156643`*^9, 3.924354076215863*^9}, {
  3.9243541840692*^9, 3.9243542081700974`*^9}, {3.924355318873385*^9, 
  3.9243553339757767`*^9}, {3.924355544459732*^9, 
  3.924355571780695*^9}},ExpressionUUID->"d21ab447-1b95-4b42-b403-\
f010a95cecce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toCSV", "=", 
  RowBox[{"LLMExampleFunction", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Put this text into csv format with the following categories: \
Name,Day,Time,Age,Grade\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "\"\<[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\>\"", "->", " ", 
        "\"\<BBall 101,Sunday,10:00am-10:50am,4-6,\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
       "\"\<[GAME-ON] Wed 4:55pm-5:55pm (Gr. 4th/5th)\>\"", "->", " ", 
        "\"\<GAME-ON,Wednesday,4:55pm-5:55pm,,4th-5th\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
       "\"\<[LEVEL-UP] Friday 3:50pm - 4:50pm (K - 2nd)\>\"", "->", 
        "\"\<LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd\>\""}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.924355696783402*^9, 3.924355752704742*^9}, {
  3.924355827210431*^9, 3.924356029608738*^9}, {3.92435616105343*^9, 
  3.924356188397904*^9}, {3.924356291025257*^9, 3.9243563776025143`*^9}, {
  3.924357016902528*^9, 3.924357019350089*^9}, {3.924357095787294*^9, 
  3.9243571037963133`*^9}, {3.9243573256581287`*^9, 3.924357332073513*^9}, {
  3.9243574529527607`*^9, 3.924357463244082*^9}, {3.924357760372868*^9, 
  3.9243577615056667`*^9}, {3.924358212823861*^9, 3.924358296096313*^9}, {
  3.924358423426649*^9, 3.924358504162573*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"31315ae4-1ee6-4f8c-bab6-99f0498d7076"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LLMFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], "", 
            GridBox[{{
               RowBox[{
                 TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    "\"Put this text into csv format with the following \
categories: Name,Day,Time,Age,Grade\\n\\n\"", 
                    "\"Input: [BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\
\\nOutput: BBall 101,Sunday,10:00am-10:50am,4-6,\\n\\nInput: [GAME-ON] Wed \
4:55pm-5:55pm (Gr. 4th/5th)\\nOutput: \
GAME-ON,Wednesday,4:55pm-5:55pm,,4th-5th\\n\\nInput: [LEVEL-UP] Friday 3:50pm \
- 4:50pm (K - 2nd)\\nOutput: LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd\"", 
                    "\"\\n\\nInput: \"", 
                    
                    TemplateBox[{"1"}, "TemplateSlot", 
                    DisplayFunction -> (
                    FrameBox[#, Background -> RGBColor[0.945, 0.992, 1.], 
                    BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\nOutput:\""}, "RowDefault"], 
                   Deploy, DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
              
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "1", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], "", 
            GridBox[{{
               RowBox[{
                 TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    "\"Put this text into csv format with the following \
categories: Name,Day,Time,Age,Grade\\n\\n\"", 
                    "\"Input: [BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\
\\nOutput: BBall 101,Sunday,10:00am-10:50am,4-6,\\n\\nInput: [GAME-ON] Wed \
4:55pm-5:55pm (Gr. 4th/5th)\\nOutput: \
GAME-ON,Wednesday,4:55pm-5:55pm,,4th-5th\\n\\nInput: [LEVEL-UP] Friday 3:50pm \
- 4:50pm (K - 2nd)\\nOutput: LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd\"", 
                    "\"\\n\\nInput: \"", 
                    
                    TemplateBox[{"1"}, "TemplateSlot", 
                    DisplayFunction -> (
                    FrameBox[#, Background -> RGBColor[0.945, 0.992, 1.], 
                    BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\nOutput:\""}, "RowDefault"], 
                   Deploy, DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
              
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "1", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"CombinerFunction: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["StringJoin", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"InsertionFunction: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["TextString", "SummaryItem"]}]}}, AutoDelete -> False,
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LLMFunction[
   TemplateObject[{
    "Put this text into csv format with the following categories: \
Name,Day,Time,Age,Grade\n\n", 
     "Input: [BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\nOutput: BBall \
101,Sunday,10:00am-10:50am,4-6,\n\nInput: [GAME-ON] Wed 4:55pm-5:55pm (Gr. \
4th/5th)\nOutput: GAME-ON,Wednesday,4:55pm-5:55pm,,4th-5th\n\nInput: \
[LEVEL-UP] Friday 3:50pm - 4:50pm (K - 2nd)\nOutput: \
LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd", "\n\nInput: ", 
     TemplateSlot[1], "\nOutput:"}, {{}, CombinerFunction -> StringJoin, 
     InsertionFunction -> TextString}], "String", {}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.924356031353333*^9, 3.92435604017689*^9}, 
   3.9243561913835783`*^9, 3.924356381796883*^9, 3.924357023954487*^9, 
   3.92435711225355*^9, 3.924357333041287*^9, 3.924357464053214*^9, 
   3.9243577619044113`*^9, 3.9243583164216423`*^9, 3.9243585060012608`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"36a333e0-c444-44a5-850f-588974086f3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toCSV", "[", 
  "\"\<[BBall 101] Thursday 3:00pm - 3:45pm (Ages 4-6)\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9243560417037497`*^9, 3.924356050251155*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"615e1588-47df-4495-9d01-d1e954fe41de"],

Cell[BoxData["\<\"BBall 101,Thursday,3:00pm-3:45pm,4-6,\"\>"], "Output",
 CellChangeTimes->{
  3.924356058782818*^9, 3.924356196354753*^9, {3.924357027565133*^9, 
   3.9243570327313004`*^9}, 3.92435706320017*^9, 3.924357124133441*^9, 
   3.9243573385004797`*^9, 3.924357767827901*^9, 3.924358323811462*^9, 
   3.924358511357465*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"e8e678c6-9908-4a49-bcae-0e7cf028512e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toCSV", "[", 
  "\"\<[GAME-ON] Wednesday 4:55pm-5:55pm (3rd - 5th)\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924356252498025*^9, 3.924356254850873*^9}, {
  3.924357344817095*^9, 3.924357353729681*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"0891531d-81bf-4ed4-98a5-8d6f2e0a6f5a"],

Cell[BoxData["\<\"GAME-ON,Wednesday,4:55pm-5:55pm,,3rd-5th\"\>"], "Output",
 CellChangeTimes->{
  3.924356256838812*^9, 3.9243571297728252`*^9, {3.924357347391774*^9, 
   3.924357356692483*^9}, 3.924358332681609*^9, 3.924358517829126*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"6ec2819d-625a-44c6-a0b6-25b6eb6d8eef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toCSV", "[", "\"\<[LEVEL-UP] Friday 3:50pm - 4:50pm (K - 2nd)\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.924357145769651*^9, 3.924357148693969*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"3dd4632e-88e1-43b5-a466-0658d43ff262"],

Cell[BoxData["\<\"LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd\"\>"], "Output",
 CellChangeTimes->{3.92435715157253*^9, 3.9243583583145523`*^9, 
  3.9243583889883966`*^9, 3.924358522742084*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"ce16f53b-af97-4089-bc24-5ecfa501f7b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toCSV", "[", 
  "\"\<[Hoop Academy] Sat 1:50pm-3:20pm (Gr. 4th/5th)\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924357222929104*^9, 3.9243572259899483`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"04f9339e-79d3-4ba4-82eb-69fe303e950c"],

Cell[BoxData["\<\"Hoop Academy,Saturday,1:50pm-3:20pm,,4th-5th\"\>"], "Output",
 CellChangeTimes->{3.924357228986912*^9, 3.9243574190835447`*^9, 
  3.924357470256484*^9, 3.9243585269304457`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"f03d47f8-9124-4877-8943-e5aeb5385afd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toCSV", "[", "\"\<[Hoop Academy] Sat 12:30pm-2:00pm (3rd-5th)\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9243572974801397`*^9, 3.924357299891815*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"f7dcab45-c77a-454f-b19a-41fec30a803d"],

Cell[BoxData["\<\"Hoop Academy,Saturday,12:30pm-2:00pm,,3rd-5th\"\>"], \
"Output",
 CellChangeTimes->{3.924357302101383*^9, 3.924357899007852*^9, 
  3.924358531827014*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"a9d05270-b702-4cfa-9adb-9636a9bbcb54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toCSV", "[", 
  "\"\<[LU-GIRLS] Basketball Friday 3:50pm (Gr 1st-2nd)\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.924358585934413*^9, 3.9243585882124777`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"a4353213-df44-42a0-86be-10e9ada20dec"],

Cell[BoxData["\<\"LU-GIRLS Basketball,Friday,3:50pm,,1st-2nd\"\>"], "Output",
 CellChangeTimes->{3.9243585899087753`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"6575387b-5e48-4b3e-bfd6-441d51b9f885"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", " ", "=", 
  RowBox[{
  "toCSV", "[", "\"\<[GAME-ON] Thursday 4:55pm-5:55pm (2nd - 4th)\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.924358638304061*^9, 3.92435864398316*^9}, {
  3.924358768193729*^9, 3.924358768921481*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"30ea1e02-58c0-450e-bc38-0f24a2f12fd3"],

Cell[BoxData["\<\"GAME-ON,Thursday,4:55pm-5:55pm,,2nd-4th\"\>"], "Output",
 CellChangeTimes->{3.92435864666086*^9, 3.924358771976571*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"cccd6c5a-92dc-45ec-8069-57bb392cac17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"name", " ", "=", " ", 
  RowBox[{"StringSplit", "[", 
   RowBox[{"test", ",", " ", "\"\<,\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9243587065567493`*^9, 3.924358793545678*^9}, {
  3.92435918292551*^9, 3.924359197459345*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"9b0e0eab-cada-46bd-bc18-df8e0ace737d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GAME-ON\"\>", ",", "\<\"Thursday\"\>", 
   ",", "\<\"4:55pm-5:55pm\"\>", ",", "\<\"\"\>", ",", "\<\"2nd-4th\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.924358793815131*^9, {3.924359183931776*^9, 3.9243591979137497`*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"8123bc59-e78d-4c8c-819a-87276949d550"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keys", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Name\>\"", ",", " ", "\"\<Day\>\"", ",", " ", "\"\<Time\>\"", ",", 
    " ", "\"\<Age\>\"", ",", " ", "\"\<Grade\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.924358824436384*^9, 3.9243588269074163`*^9}, {
  3.924358860545149*^9, 3.924358862171769*^9}, {3.9243589087691593`*^9, 
  3.9243589610663958`*^9}, {3.92435904268676*^9, 3.924359072999427*^9}, {
  3.924359105170332*^9, 3.9243591059668303`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"bdaa79d2-3fa4-4d16-8db6-d30dc499bd09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Name\"\>", ",", "\<\"Day\"\>", ",", "\<\"Time\"\>", 
   ",", "\<\"Age\"\>", ",", "\<\"Grade\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.924359108053665*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"158e5596-7b13-4b1a-967f-634c1bbd265b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nk", " ", "=", " ", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{"keys", ",", " ", "name"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924359111656205*^9, 3.9243592339721613`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"18682e5b-16f7-49e5-a235-94de2a77e039"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"GAME-ON\"\>"}], ",", 
   RowBox[{"\<\"Day\"\>", "\[Rule]", "\<\"Thursday\"\>"}], ",", 
   RowBox[{"\<\"Time\"\>", "\[Rule]", "\<\"4:55pm-5:55pm\"\>"}], ",", 
   RowBox[{"\<\"Age\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"\<\"Grade\"\>", "\[Rule]", "\<\"2nd-4th\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.924359204949345*^9, 3.9243592343668327`*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"41f272e3-bd79-4833-a02a-f822f949b925"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.924378992534491*^9, 3.924379010296545*^9}, 
   3.924379633957652*^9, 
   3.92437966923599*^9},ExpressionUUID->"66c55e3c-1eed-4408-9348-\
2d49a5439dab"],

Cell[BoxData["\<\"GAME-ON\"\>"], "Output",
 CellChangeTimes->{3.924378993776469*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"3195276b-6916-4e3b-93ce-cef531eab9b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nk", " ", "=", " ", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{"nk", ",", " ", "\"\<\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924359209394908*^9, 3.924359239622311*^9}, {
  3.924377142631442*^9, 3.9243771431930513`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"0c9e3c9b-6a7f-4d41-92e6-c1c41c212d96"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"GAME-ON\"\>"}], ",", 
   RowBox[{"\<\"Day\"\>", "\[Rule]", "\<\"Thursday\"\>"}], ",", 
   RowBox[{"\<\"Time\"\>", "\[Rule]", "\<\"4:55pm-5:55pm\"\>"}], ",", 
   RowBox[{"\<\"Grade\"\>", "\[Rule]", "\<\"2nd-4th\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.9243592156703167`*^9, 3.92435924005993*^9}, 
   3.924377143526031*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"648f4c62-a427-42a1-a960-dd8fb501b434"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToString", "[", "nk", "]"}]], "Input",
 CellChangeTimes->{{3.924377146050703*^9, 3.924377148282205*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"e542f3c5-8797-47dc-837f-bae30715c51a"],

Cell[BoxData["\<\"<|Name -> GAME-ON, Day -> Thursday, Time -> 4:55pm-5:55pm, \
Grade -> 2nd-4th|>\"\>"], "Output",
 CellChangeTimes->{3.924377148616246*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"9715a415-a847-4240-ba5f-3496386ce7c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", " ", "=", " ", 
  RowBox[{
   RowBox[{"StringTemplate", "[", "\"\<<b>`Name`</b><br>\>\"", "]"}], "[", 
   "nk", "]"}]}]], "Input",
 CellChangeTimes->{{3.924377205558461*^9, 3.924377262941506*^9}, {
  3.924377863436269*^9, 3.9243778653462467`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"5fbcbccf-7dc8-4c22-ba82-519c0bcf29aa"],

Cell[BoxData["\<\"<b>GAME-ON</b><br>\"\>"], "Output",
 CellChangeTimes->{{3.924377246460301*^9, 3.924377263520769*^9}, 
   3.92437786640031*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"5ab1d13d-cd0a-4460-aec8-bdb417a3a326"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"o", " ", "=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "#1", "<>", "\"\<: \>\"", " ", "<>", "#2", "<>", "\"\<<br>\>\""}], 
      "&"}], ",", " ", 
     RowBox[{"nk", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924377322954742*^9, 3.924377404042796*^9}, {
  3.924377451581336*^9, 3.924377617746229*^9}, {3.924377721988599*^9, 
  3.9243777288403482`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"526e1126-d356-474e-a59f-29f69f10679f"],

Cell[BoxData["\<\"Day: Thursday<br>Time: 4:55pm-5:55pm<br>Grade: \
2nd-4th<br>\"\>"], "Output",
 CellChangeTimes->{3.9243777333792267`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"b2722561-b70a-4074-9c40-a8033842e511"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EmbeddedHTML", "[", 
  RowBox[{"b", "<>", "o"}], "]"}]], "Input",
 CellChangeTimes->{{3.9243777400182533`*^9, 3.924377741809011*^9}, {
  3.924377841503891*^9, 3.9243778435168858`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"44f47fa0-eddc-42b3-9bce-1e02d82bc8ac"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[Null, 
    EmbeddedHTML[
    "<b>GAME-ON</b><br>Day: Thursday<br>Time: 4:55pm-5:55pm<br>Grade: \
2nd-4th<br>"]], 
   TagBox[
   "\"<b>GAME-ON</b><br>Day: Thursday<br>Time: 4:55pm-5:55pm<br>Grade: \
2nd-4th<br>\"", Short], 
   Defer["<b>GAME-ON</b><br>Day: Thursday<br>Time: 4:55pm-5:55pm<br>Grade: \
2nd-4th<br>"], {"DataForm" -> "HTML"}},
  "EmbeddedHTML"]], "Output",
 CellChangeTimes->{
  3.9243777421639347`*^9, {3.924377844264203*^9, 3.924377870689309*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"48978715-b500-480d-a7be-32e8524a7a3e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LLMExampleFunction", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Put this text into csv format with the following categories: \
Name,Day,Time,Age,Grade. They must be in that order.\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "\"\<[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\>\"", "->", " ", 
       "\"\<BBall 101,Sunday,10:00am-10:50am,4-6,\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "\"\<[GAME-ON] Wed 4:55pm-5:55pm (Gr. 4th/5th)\>\"", "->", " ", 
       "\"\<GAME-ON,Wednesday,4:55pm-5:55pm,,4th-5th\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "\"\<[LEVEL-UP] Friday 3:50pm - 4:50pm (K - 2nd)\>\"", "->", 
       "\"\<LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd\>\""}]}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.924383934956477*^9, 
  3.924383943585458*^9}},ExpressionUUID->"217b64a9-4b01-43d9-b544-\
3183f6b96105"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toCSVFunc", "[", 
   RowBox[{"categories_", ",", " ", "examples_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "catString", "}"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"catString", " ", "=", " ", 
      RowBox[{"StringRiffle", "[", 
       RowBox[{"categories", ",", " ", "\"\<,\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LLMExampleFunction", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "\"\<Put this text into csv format with the following categories: \
\>\"", " ", "<>", " ", "catString"}], ",", " ", "examples"}], "}"}], 
      "\[IndentingNewLine]", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924379512116756*^9, 3.924379537607252*^9}, {
   3.924379575270587*^9, 3.924379618609421*^9}, {3.924379684941638*^9, 
   3.924379759754071*^9}, {3.9243812751641273`*^9, 3.924381366637066*^9}, 
   3.924381600846057*^9, 3.924382060266061*^9, 3.924383908432355*^9, {
   3.9243840720547733`*^9, 3.924384096531392*^9}, 3.9243853460992517`*^9, 
   3.924385380066947*^9, {3.9243855733070173`*^9, 3.924385576088435*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"abffcb51-a5e8-429f-aa7b-492b2b0149be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toCSVRow", " ", "=", " ", 
  RowBox[{"LLMExampleFunction", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "\"\<Put this text into csv format with the following categories: \>\"", 
      " ", "<>", " ", 
      RowBox[{"StringRiffle", "[", 
       RowBox[{"categories", ",", " ", "\"\<,\>\""}], "]"}]}], ",", " ", 
     "examples"}], "}"}], "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.924385654598888*^9, 3.924385675063821*^9}, {
  3.9243858754151154`*^9, 3.924385875783761*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"39a847df-c3c6-4d79-82fb-d6a82df527a2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LLMFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], "", 
            GridBox[{{
               RowBox[{
                 TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    "\"Put this text into csv format with the following \
categories: Name,Day,Time,Age,Grade\\n\\n\"", 
                    "\"Input: [BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\
\\nOutput: BBall 101,Sunday,10:00am-10:50am,4-6,\\n\\nInput: [GAME-ON] Wed \
4:55pm-5:55pm (Gr. 4th/5th)\\nOutput: \
GAME-ON,Wednesday,4:55pm-5:55pm,,4th-5th\\n\\nInput: [LEVEL-UP] Friday 3:50pm \
- 4:50pm (K - 2nd)\\nOutput: LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd\"", 
                    "\"\\n\\nInput: \"", 
                    
                    TemplateBox[{"1"}, "TemplateSlot", 
                    DisplayFunction -> (
                    FrameBox[#, Background -> RGBColor[0.945, 0.992, 1.], 
                    BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\nOutput:\""}, "RowDefault"], 
                   Deploy, DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
              
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "1", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], "", 
            GridBox[{{
               RowBox[{
                 TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    "\"Put this text into csv format with the following \
categories: Name,Day,Time,Age,Grade\\n\\n\"", 
                    "\"Input: [BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\
\\nOutput: BBall 101,Sunday,10:00am-10:50am,4-6,\\n\\nInput: [GAME-ON] Wed \
4:55pm-5:55pm (Gr. 4th/5th)\\nOutput: \
GAME-ON,Wednesday,4:55pm-5:55pm,,4th-5th\\n\\nInput: [LEVEL-UP] Friday 3:50pm \
- 4:50pm (K - 2nd)\\nOutput: LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd\"", 
                    "\"\\n\\nInput: \"", 
                    
                    TemplateBox[{"1"}, "TemplateSlot", 
                    DisplayFunction -> (
                    FrameBox[#, Background -> RGBColor[0.945, 0.992, 1.], 
                    BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\nOutput:\""}, "RowDefault"], 
                   Deploy, DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
              
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "1", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"CombinerFunction: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["StringJoin", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"InsertionFunction: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["TextString", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LLMFunction[
   TemplateObject[{
    "Put this text into csv format with the following categories: \
Name,Day,Time,Age,Grade\n\n", 
     "Input: [BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\nOutput: BBall \
101,Sunday,10:00am-10:50am,4-6,\n\nInput: [GAME-ON] Wed 4:55pm-5:55pm (Gr. \
4th/5th)\nOutput: GAME-ON,Wednesday,4:55pm-5:55pm,,4th-5th\n\nInput: \
[LEVEL-UP] Friday 3:50pm - 4:50pm (K - 2nd)\nOutput: \
LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd", "\n\nInput: ", 
     TemplateSlot[1], "\nOutput:"}, {{}, CombinerFunction -> StringJoin, 
     InsertionFunction -> TextString}], "String", {}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.924385751633624*^9, 3.924385876332225*^9, 3.924387380812292*^9, {
   3.924387639376134*^9, 3.924387642270827*^9}},
 CellLabel->
  "Out[128]=",ExpressionUUID->"7913167a-3fec-44ab-b601-45386fae6e27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"categories", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Name\>\"", ",", " ", "\"\<Day\>\"", ",", " ", "\"\<Time\>\"", ",", 
    " ", "\"\<Age\>\"", ",", " ", "\"\<Grade\>\""}], "}"}]}]], "Code",
 CellChangeTimes->{{3.924385697250579*^9, 3.9243857221328697`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"5301f54c-c2b7-470c-909a-b7992abb7b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Name\"\>", ",", "\<\"Day\"\>", ",", "\<\"Time\"\>", 
   ",", "\<\"Age\"\>", ",", "\<\"Grade\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.924385723256661*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"9e3669aa-b6a8-4153-9664-b5f0366d5241"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"examples", " ", "=", " ", 
  RowBox[{"{", "\n", 
   RowBox[{
    RowBox[{
    "\"\<[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\>\"", "->", " ", 
     "\"\<BBall 101,Sunday,10:00am-10:50am,4-6,\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "\"\<[GAME-ON] Wed 4:55pm-5:55pm (Gr. 4th/5th)\>\"", "->", " ", 
     "\"\<GAME-ON,Wednesday,4:55pm-5:55pm,,4th-5th\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "\"\<[LEVEL-UP] Friday 3:50pm - 4:50pm (K - 2nd)\>\"", "->", 
     "\"\<LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd\>\""}]}], "\n", 
   "}"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.924385255307311*^9, 3.924385284780561*^9}, {
  3.9243873396419697`*^9, 3.9243873476636477`*^9}, {3.924387629513721*^9, 
  3.924387634884461*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"cb703d48-8d55-4287-854e-303df8f1747f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\"\>", 
    "\[Rule]", "\<\"BBall 101,Sunday,10:00am-10:50am,4-6,\"\>"}], ",", 
   RowBox[{"\<\"[GAME-ON] Wed 4:55pm-5:55pm (Gr. 4th/5th)\"\>", 
    "\[Rule]", "\<\"GAME-ON,Wednesday,4:55pm-5:55pm,,4th-5th\"\>"}], ",", 
   RowBox[{"\<\"[LEVEL-UP] Friday 3:50pm - 4:50pm (K - 2nd)\"\>", 
    "\[Rule]", "\<\"LEVEL-UP,Friday,3:50pm-4:50pm,,K-2nd\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9243873490322933`*^9, 3.924387636925374*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"746bc8db-5d37-4316-a5c0-be501fa66693"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"satCSVRow", " ", "=", " ", 
  RowBox[{
  "toCSVRow", "[", "\"\<[BBall 101] Saturday 9:00am-9:50am (Ages 4-6)\>\"", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.924385438454973*^9, 3.924385461994626*^9}, {
  3.9243857749658537`*^9, 3.9243857758598757`*^9}, {3.9243858800870457`*^9, 
  3.924385883617608*^9}, {3.924386487215314*^9, 3.924386512086245*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"5183922e-6259-4808-b665-35efd8e3428d"],

Cell[BoxData["\<\"BBall 101,Saturday,9:00am-9:50am,4-6,\"\>"], "Output",
 CellChangeTimes->{{3.924385441949155*^9, 3.924385464450688*^9}, 
   3.92438562113267*^9, 3.924385780028316*^9, 3.924385884863637*^9, 
   3.924386517137561*^9, {3.924387361901968*^9, 3.9243873916934843`*^9}, 
   3.924387650072648*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"319d0d13-6774-4b9e-8d64-8afc65781b1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vals", " ", "=", " ", 
  RowBox[{"StringSplit", "[", 
   RowBox[{"satCSVRow", ",", " ", "\"\<,\>\"", ",", " ", "All"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.9243874851695013`*^9, 3.924387523505732*^9}, {
   3.924387609060581*^9, 3.924387621179908*^9}, 3.924387659979127*^9, {
   3.924387808050695*^9, 3.924387813584074*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"eeb75f34-8e66-48e2-854b-a8964888fa9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BBall 101\"\>", ",", "\<\"Saturday\"\>", 
   ",", "\<\"9:00am-9:50am\"\>", ",", "\<\"4-6\"\>", ",", "\<\"\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.92438749913422*^9, 3.924387523880677*^9}, {
   3.924387613233864*^9, 3.924387621465232*^9}, 3.924387662958311*^9, 
   3.924387814030896*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"be45f102-7f43-4604-8842-f7883436495f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nk", " ", "=", " ", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "<>", "\"\<AI\>\""}], "&"}], ",", " ", "categories"}], 
     "]"}], ",", " ", "vals"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.924387825465567*^9, 3.924387831490885*^9}, {
  3.924387892305786*^9, 3.924387909435487*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"cce762ae-fe71-4526-a2cc-a06b8411f10e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"NameAI\"\>", "\[Rule]", "\<\"BBall 101\"\>"}], ",", 
   RowBox[{"\<\"DayAI\"\>", "\[Rule]", "\<\"Saturday\"\>"}], ",", 
   RowBox[{"\<\"TimeAI\"\>", "\[Rule]", "\<\"9:00am-9:50am\"\>"}], ",", 
   RowBox[{"\<\"AgeAI\"\>", "\[Rule]", "\<\"4-6\"\>"}], ",", 
   RowBox[{"\<\"GradeAI\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.9243878320362177`*^9, 3.924387911576325*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"20b1cd87-ff3b-40a0-bae6-1c2667168b5b"]
}, Open  ]],

Cell[BoxData["programs"], "Code",
 CellChangeTimes->{{3.924388239171216*^9, 3.9243882402190647`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"021bb075-0437-4908-8b61-df06e3c48a0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"t", " ", "=", " ", 
   RowBox[{"programs", "[", 
    RowBox[{"SelectFirst", "[", 
     RowBox[{
      RowBox[{
      "#Name", " ", "==", " ", 
       "\"\<[BBall 101] Saturday 9:00am-9:50am (Ages 4-6)\>\""}], "&"}], 
     "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.924386648803718*^9, 3.924386656471422*^9}, {
   3.924386759729457*^9, 3.924386817012966*^9}, {3.924387744064378*^9, 
   3.9243877444374657`*^9}, {3.9243879283174257`*^9, 3.9243879598168993`*^9}, 
   3.924388164503491*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"98c690b4-6cb9-4ca5-933b-940d98bab56d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t2", " ", "=", " ", 
  RowBox[{"programs", "[", 
   RowBox[{"SelectFirst", "[", 
    RowBox[{
     RowBox[{
     "#Name", " ", "==", " ", 
      "\"\<[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\>\""}], "&"}], 
    "]"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.924388166307438*^9, 3.9243882228233557`*^9}, 
   3.9243882707394733`*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"0d2c719f-e037-40d1-8b61-0e80258f3b8d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "ID" -> 6309, "Name" -> 
       "[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)", "Flags" -> "Full", 
       "Time of dayTime of day" -> "10:00am", 
       "Day of the WeekDay of the Week" -> "S", 
       "Size / CapacitySize / Capacity" -> "20            of 20", 
       "Age Restrictions" -> "3y 10m - 7y 3m", "Age Group" -> "U-7", "Wait" -> 
       2, "Start Date" -> "Sun 03/31/2024", "Season" -> 
       "24-SP Basketball Classes (Pre K - 6th)", "Level" -> 
       "101 Intro to Bball", "Time of Year" -> "Spring"|>, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"ID"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Name"} -> 
        TypeSystem`PackageScope`AtomShape[526.4000000000001], {"Flags"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "Time of dayTime of day"} -> 
        TypeSystem`PackageScope`AtomShape[78.4], {
         "Day of the WeekDay of the Week"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {
         "Size / CapacitySize / Capacity"} -> 
        TypeSystem`PackageScope`AtomShape[212.8], {"Age Restrictions"} -> 
        TypeSystem`PackageScope`AtomShape[156.8], {"Age Group"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"Wait"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Start Date"} -> 
        TypeSystem`PackageScope`AtomShape[156.8], {"Season"} -> 
        TypeSystem`PackageScope`AtomShape[425.6], {"Level"} -> 
        TypeSystem`PackageScope`AtomShape[201.60000000000002`], {
         "Time of Year"} -> TypeSystem`PackageScope`AtomShape[67.2]|>, 1], 
     "InitialType" -> 
     TypeSystem`Struct[{
       "ID", "Name", "Flags", "Time of dayTime of day", 
        "Day of the WeekDay of the Week", "Size / CapacitySize / Capacity", 
        "Age Restrictions", "Age Group", "Wait", "Start Date", "Season", 
        "Level", "Time of Year"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"ID"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Name"} -> 
        TypeSystem`PackageScope`AtomShape[526.4000000000001], {"Flags"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "Time of dayTime of day"} -> 
        TypeSystem`PackageScope`AtomShape[78.4], {
         "Day of the WeekDay of the Week"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {
         "Size / CapacitySize / Capacity"} -> 
        TypeSystem`PackageScope`AtomShape[212.8], {"Age Restrictions"} -> 
        TypeSystem`PackageScope`AtomShape[156.8], {"Age Group"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"Wait"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Start Date"} -> 
        TypeSystem`PackageScope`AtomShape[156.8], {"Season"} -> 
        TypeSystem`PackageScope`AtomShape[425.6], {"Level"} -> 
        TypeSystem`PackageScope`AtomShape[201.60000000000002`], {
         "Time of Year"} -> TypeSystem`PackageScope`AtomShape[67.2]|>, 1], 
     "Type" -> TypeSystem`Struct[{
       "ID", "Name", "Flags", "Time of dayTime of day", 
        "Day of the WeekDay of the Week", "Size / CapacitySize / Capacity", 
        "Age Restrictions", "Age Group", "Wait", "Start Date", "Season", 
        "Level", "Time of Year"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 13, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ID", 
                  Style[
                  "ID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ID"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ID"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6309"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{526.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Flags", 
                  Style[
                  "Flags", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Flags"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flags"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Full", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flags"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time of dayTime of day", 
                  Style[
                  "Time of dayTime of day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Time of dayTime of day"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Time of dayTime of day"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["10:00am", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Time of dayTime of day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Day of the WeekDay of the Week", 
                  Style[
                  "Day of the WeekDay of the Week", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day of the WeekDay of the Week"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day of the WeekDay of the Week"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["S", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day of the WeekDay of the Week"]}, "Item", False], 
               "Mouse"], ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Size / CapacitySize / Capacity", 
                  Style[
                  "Size / CapacitySize / Capacity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Size / CapacitySize / Capacity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Size / CapacitySize / Capacity"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["20            of 20", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Size / CapacitySize / Capacity"]}, "Item", False], 
               "Mouse"], ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age Restrictions", 
                  Style[
                  "Age Restrictions", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Age Restrictions"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Age Restrictions"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["3y 10m - 7y 3m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Age Restrictions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age Group", 
                  Style[
                  "Age Group", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Age Group"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Age Group"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["U-7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Age Group"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Wait", 
                  Style[
                  "Wait", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Wait"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Wait"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Wait"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Start Date", 
                  Style[
                  "Start Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Start Date"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Start Date"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Sun 03/31/2024", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Start Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Season", 
                  Style[
                  "Season", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Season"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Season"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["24-SP Basketball Classes (Pre K - 6th)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Season"]}, "Item", False], "Mouse"], 
              ImageSize -> {{425.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Level", 
                  Style[
                  "Level", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Level"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Level"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["101 Intro to Bball", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Level"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time of Year", 
                  Style[
                  "Time of Year", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Time of Year"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Time of Year"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Spring", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Time of Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{657., {275.7010498046875, 284.2989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{657., {275.7010498046875, 284.2989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924388223564476*^9, 3.92438827243041*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"1ab20a5d-6050-495c-9010-d9e07f324ce1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jt", " ", "=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{"t", ",", " ", "nk"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.924387748990921*^9, 3.9243877772224817`*^9}, {
  3.924387946367893*^9, 3.924387976352635*^9}, {3.924388007592308*^9, 
  3.924388009854804*^9}, {3.924388089337989*^9, 3.924388092459003*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"26e14889-2219-46d4-85e8-bd95c1b8468a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ID\"\>", "\[Rule]", "6308"}], ",", 
   RowBox[{"\<\"Name\"\>", 
    "\[Rule]", "\<\"[BBall 101] Saturday 9:00am-9:50am (Ages 4-6)\"\>"}], ",", 
   RowBox[{"\<\"Flags\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"\<\"Time of dayTime of day\"\>", "\[Rule]", "\<\"09:00am\"\>"}], 
   ",", 
   RowBox[{"\<\"Day of the WeekDay of the Week\"\>", 
    "\[Rule]", "\<\"Sa\"\>"}], ",", 
   RowBox[{"\<\"Size / CapacitySize / Capacity\"\>", 
    "\[Rule]", "\<\"19            of 20\"\>"}], ",", 
   RowBox[{"\<\"Age Restrictions\"\>", "\[Rule]", "\<\"3y 10m - 7y 3m\"\>"}], 
   ",", 
   RowBox[{"\<\"Age Group\"\>", "\[Rule]", "\<\"U-7\"\>"}], ",", 
   RowBox[{"\<\"Wait\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"Start Date\"\>", "\[Rule]", "\<\"Sat 03/30/2024\"\>"}], ",", 
   RowBox[{"\<\"Season\"\>", 
    "\[Rule]", "\<\"24-SP Basketball Classes (Pre K - 6th)\"\>"}], ",", 
   RowBox[{"\<\"Level\"\>", "\[Rule]", "\<\"101 Intro to Bball\"\>"}], ",", 
   RowBox[{"\<\"Time of Year\"\>", "\[Rule]", "\<\"Spring\"\>"}], ",", 
   RowBox[{"\<\"NameAI\"\>", "\[Rule]", "\<\"BBall 101\"\>"}], ",", 
   RowBox[{"\<\"DayAI\"\>", "\[Rule]", "\<\"Saturday\"\>"}], ",", 
   RowBox[{"\<\"TimeAI\"\>", "\[Rule]", "\<\"9:00am-9:50am\"\>"}], ",", 
   RowBox[{"\<\"AgeAI\"\>", "\[Rule]", "\<\"4-6\"\>"}], ",", 
   RowBox[{"\<\"GradeAI\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.924388015310424*^9, 3.924388093100519*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"b7b85016-b2bd-4657-aba2-4b360de7a5e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jt2", " ", "=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{"t2", ",", " ", "nk"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.924388279604097*^9, 3.9243882928711367`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"00b5e128-5bd8-4428-9432-fd1b72db522b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ID\"\>", "\[Rule]", "6309"}], ",", 
   RowBox[{"\<\"Name\"\>", 
    "\[Rule]", "\<\"[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)\"\>"}], 
   ",", 
   RowBox[{"\<\"Flags\"\>", "\[Rule]", "\<\"Full\"\>"}], ",", 
   RowBox[{"\<\"Time of dayTime of day\"\>", "\[Rule]", "\<\"10:00am\"\>"}], 
   ",", 
   RowBox[{"\<\"Day of the WeekDay of the Week\"\>", "\[Rule]", "\<\"S\"\>"}],
    ",", 
   RowBox[{"\<\"Size / CapacitySize / Capacity\"\>", 
    "\[Rule]", "\<\"20            of 20\"\>"}], ",", 
   RowBox[{"\<\"Age Restrictions\"\>", "\[Rule]", "\<\"3y 10m - 7y 3m\"\>"}], 
   ",", 
   RowBox[{"\<\"Age Group\"\>", "\[Rule]", "\<\"U-7\"\>"}], ",", 
   RowBox[{"\<\"Wait\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Start Date\"\>", "\[Rule]", "\<\"Sun 03/31/2024\"\>"}], ",", 
   RowBox[{"\<\"Season\"\>", 
    "\[Rule]", "\<\"24-SP Basketball Classes (Pre K - 6th)\"\>"}], ",", 
   RowBox[{"\<\"Level\"\>", "\[Rule]", "\<\"101 Intro to Bball\"\>"}], ",", 
   RowBox[{"\<\"Time of Year\"\>", "\[Rule]", "\<\"Spring\"\>"}], ",", 
   RowBox[{"\<\"NameAI\"\>", "\[Rule]", "\<\"BBall 101\"\>"}], ",", 
   RowBox[{"\<\"DayAI\"\>", "\[Rule]", "\<\"Saturday\"\>"}], ",", 
   RowBox[{"\<\"TimeAI\"\>", "\[Rule]", "\<\"9:00am-9:50am\"\>"}], ",", 
   RowBox[{"\<\"AgeAI\"\>", "\[Rule]", "\<\"4-6\"\>"}], ",", 
   RowBox[{"\<\"GradeAI\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.924388293202569*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"83b5f667-d0cb-4f72-bc66-122bbb7cd18b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", " ", "=", " ", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", 
    RowBox[{"jt", ",", " ", "jt2"}], "}"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.924388323278185*^9, 3.924388334160941*^9}, {
  3.9243883797708483`*^9, 3.924388385394627*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"c7448f6e-08e5-4507-8310-dd9b12ff7911"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "ID" -> 6308, "Name" -> 
        "[BBall 101] Saturday 9:00am-9:50am (Ages 4-6)", "Flags" -> "", 
        "Time of dayTime of day" -> "09:00am", 
        "Day of the WeekDay of the Week" -> "Sa", 
        "Size / CapacitySize / Capacity" -> "19            of 20", 
        "Age Restrictions" -> "3y 10m - 7y 3m", "Age Group" -> "U-7", "Wait" -> 
        0, "Start Date" -> "Sat 03/30/2024", "Season" -> 
        "24-SP Basketball Classes (Pre K - 6th)", "Level" -> 
        "101 Intro to Bball", "Time of Year" -> "Spring", "NameAI" -> 
        "BBall 101", "DayAI" -> "Saturday", "TimeAI" -> "9:00am-9:50am", 
        "AgeAI" -> "4-6", "GradeAI" -> ""|>, <|
       "ID" -> 6309, "Name" -> 
        "[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)", "Flags" -> "Full", 
        "Time of dayTime of day" -> "10:00am", 
        "Day of the WeekDay of the Week" -> "S", 
        "Size / CapacitySize / Capacity" -> "20            of 20", 
        "Age Restrictions" -> "3y 10m - 7y 3m", "Age Group" -> "U-7", "Wait" -> 
        2, "Start Date" -> "Sun 03/31/2024", "Season" -> 
        "24-SP Basketball Classes (Pre K - 6th)", "Level" -> 
        "101 Intro to Bball", "Time of Year" -> "Spring", "NameAI" -> 
        "BBall 101", "DayAI" -> "Saturday", "TimeAI" -> "9:00am-9:50am", 
        "AgeAI" -> "4-6", "GradeAI" -> ""|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "ID"} -> 1, {All, "Name"} -> 
        1, {All, "Flags"} -> 1, {All, "Time of dayTime of day"} -> 
        1, {All, "Day of the WeekDay of the Week"} -> 
        1, {All, "Size / CapacitySize / Capacity"} -> 
        1, {All, "Age Restrictions"} -> 1, {All, "Age Group"} -> 
        1, {All, "Wait"} -> 1, {All, "Start Date"} -> 1, {All, "Season"} -> 
        1, {All, "Level"} -> 1, {All, "Time of Year"} -> 1, {All, "NameAI"} -> 
        1, {All, "DayAI"} -> 1, {All, "TimeAI"} -> 1, {All, "AgeAI"} -> 
        1, {All, "GradeAI"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "ID" -> TypeSystem`PackageScope`AtomShape[34], "Name" -> 
            TypeSystem`PackageScope`AtomShape[526.4000000000001], "Flags" -> 
            TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
            "Time of dayTime of day" -> 
            TypeSystem`PackageScope`AtomShape[78.4], 
            "Day of the WeekDay of the Week" -> 
            TypeSystem`PackageScope`AtomShape[33.6], 
            "Size / CapacitySize / Capacity" -> 
            TypeSystem`PackageScope`AtomShape[212.8], "Age Restrictions" -> 
            TypeSystem`PackageScope`AtomShape[156.8], "Age Group" -> 
            TypeSystem`PackageScope`AtomShape[33.6], "Wait" -> 
            TypeSystem`PackageScope`AtomShape[34], "Start Date" -> 
            TypeSystem`PackageScope`AtomShape[156.8], "Season" -> 
            TypeSystem`PackageScope`AtomShape[425.6], "Level" -> 
            TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "Time of Year" -> TypeSystem`PackageScope`AtomShape[67.2], 
            "NameAI" -> 
            TypeSystem`PackageScope`AtomShape[100.80000000000001`], "DayAI" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], "TimeAI" -> 
            TypeSystem`PackageScope`AtomShape[145.60000000000002`], "AgeAI" -> 
            TypeSystem`PackageScope`AtomShape[33.6], "GradeAI" -> 
            TypeSystem`PackageScope`AtomShape[33.6]|>], 
          DirectedInfinity[1], 10, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "ID", "Name", "Flags", "Time of dayTime of day", 
         "Day of the WeekDay of the Week", "Size / CapacitySize / Capacity", 
         "Age Restrictions", "Age Group", "Wait", "Start Date", "Season", 
         "Level", "Time of Year", "NameAI", "DayAI", "TimeAI", "AgeAI", 
         "GradeAI"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "ID"} -> 1, {All, "Name"} -> 
        1, {All, "Flags"} -> 1, {All, "Time of dayTime of day"} -> 
        1, {All, "Day of the WeekDay of the Week"} -> 
        1, {All, "Size / CapacitySize / Capacity"} -> 
        1, {All, "Age Restrictions"} -> 1, {All, "Age Group"} -> 
        1, {All, "Wait"} -> 1, {All, "Start Date"} -> 1, {All, "Season"} -> 
        1, {All, "Level"} -> 1, {All, "Time of Year"} -> 1, {All, "NameAI"} -> 
        1, {All, "DayAI"} -> 1, {All, "TimeAI"} -> 1, {All, "AgeAI"} -> 
        1, {All, "GradeAI"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "ID" -> TypeSystem`PackageScope`AtomShape[34], "Name" -> 
            TypeSystem`PackageScope`AtomShape[526.4000000000001], "Flags" -> 
            TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
            "Time of dayTime of day" -> 
            TypeSystem`PackageScope`AtomShape[78.4], 
            "Day of the WeekDay of the Week" -> 
            TypeSystem`PackageScope`AtomShape[33.6], 
            "Size / CapacitySize / Capacity" -> 
            TypeSystem`PackageScope`AtomShape[212.8], "Age Restrictions" -> 
            TypeSystem`PackageScope`AtomShape[156.8], "Age Group" -> 
            TypeSystem`PackageScope`AtomShape[33.6], "Wait" -> 
            TypeSystem`PackageScope`AtomShape[34], "Start Date" -> 
            TypeSystem`PackageScope`AtomShape[156.8], "Season" -> 
            TypeSystem`PackageScope`AtomShape[425.6], "Level" -> 
            TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "Time of Year" -> TypeSystem`PackageScope`AtomShape[67.2], 
            "NameAI" -> 
            TypeSystem`PackageScope`AtomShape[100.80000000000001`], "DayAI" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], "TimeAI" -> 
            TypeSystem`PackageScope`AtomShape[145.60000000000002`], "AgeAI" -> 
            TypeSystem`PackageScope`AtomShape[33.6], "GradeAI" -> 
            TypeSystem`PackageScope`AtomShape[33.6]|>], 
          DirectedInfinity[1], 10, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "ID", "Name", "Flags", "Time of dayTime of day", 
         "Day of the WeekDay of the Week", "Size / CapacitySize / Capacity", 
         "Age Restrictions", "Age Group", "Wait", "Start Date", "Season", 
         "Level", "Time of Year", "NameAI", "DayAI", "TimeAI", "AgeAI", 
         "GradeAI"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 10, "DataRowCount" -> 2, "DataColumnCount" -> 
     18, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ID", 
                  Style[
                  "ID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ID"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ID"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Flags", 
                  Style[
                  "Flags", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Flags"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Flags"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time of dayTime of day", 
                  Style[
                  "Time of dayTime of day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Time of dayTime of day"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Time of dayTime of day"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Day of the WeekDay of the Week", 
                  Style[
                  "Day of the WeekDay of the Week", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Day of the WeekDay of the Week"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Day of the WeekDay of the Week"}, "ColumnHeader", True],
                "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Size / CapacitySize / Capacity", 
                  Style[
                  "Size / CapacitySize / Capacity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Size / CapacitySize / Capacity"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Size / CapacitySize / Capacity"}, "ColumnHeader", True],
                "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age Restrictions", 
                  Style[
                  "Age Restrictions", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Age Restrictions"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Age Restrictions"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age Group", 
                  Style[
                  "Age Group", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Age Group"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Age Group"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Wait", 
                  Style[
                  "Wait", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Wait"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Wait"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Start Date", 
                  Style[
                  "Start Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Start Date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Start Date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6308"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["[BBall 101] Saturday 9:00am-9:50am (Ages 4-6)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{526.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Flags"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["09:00am", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Time of dayTime of day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Sa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Day of the WeekDay of the Week"]}, "Item", False], 
               "Mouse"], ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["19            of 20", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Size / CapacitySize / Capacity"]}, "Item", False], 
               "Mouse"], ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3y 10m - 7y 3m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Age Restrictions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["U-7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Age Group"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Wait"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Sat 03/30/2024", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Start Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6309"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{526.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Full", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Flags"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["10:00am", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Time of dayTime of day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["S", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Day of the WeekDay of the Week"]}, "Item", False], 
               "Mouse"], ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["20            of 20", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Size / CapacitySize / Capacity"]}, "Item", False], 
               "Mouse"], ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3y 10m - 7y 3m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Age Restrictions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["U-7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Age Group"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Wait"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Sun 03/31/2024", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Start Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[True, 18, 1], {1, 18 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[False, 18, 1], {1, 18 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[18, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[18, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 18, 1], {1, 18 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 18, 1], {1, 18 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1925., {102.2010498046875, 110.7989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1925., {102.2010498046875, 110.7989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924388334562148*^9, 3.924388385721647*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"f6e488b2-cb9c-4dfd-987d-92ae38df9c43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", "[", 
  RowBox[{"GroupBy", "[", "\"\<DayAI\>\"", "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.924388338398797*^9, 3.924388399637394*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"dc3bbd74-a5a7-4eba-affa-e6939c16b83a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Saturday" -> {<|
         "ID" -> 6308, "Name" -> 
          "[BBall 101] Saturday 9:00am-9:50am (Ages 4-6)", "Flags" -> "", 
          "Time of dayTime of day" -> "09:00am", 
          "Day of the WeekDay of the Week" -> "Sa", 
          "Size / CapacitySize / Capacity" -> "19            of 20", 
          "Age Restrictions" -> "3y 10m - 7y 3m", "Age Group" -> "U-7", 
          "Wait" -> 0, "Start Date" -> "Sat 03/30/2024", "Season" -> 
          "24-SP Basketball Classes (Pre K - 6th)", "Level" -> 
          "101 Intro to Bball", "Time of Year" -> "Spring", "NameAI" -> 
          "BBall 101", "DayAI" -> "Saturday", "TimeAI" -> "9:00am-9:50am", 
          "AgeAI" -> "4-6", "GradeAI" -> ""|>, <|
         "ID" -> 6309, "Name" -> 
          "[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)", "Flags" -> 
          "Full", "Time of dayTime of day" -> "10:00am", 
          "Day of the WeekDay of the Week" -> "S", 
          "Size / CapacitySize / Capacity" -> "20            of 20", 
          "Age Restrictions" -> "3y 10m - 7y 3m", "Age Group" -> "U-7", 
          "Wait" -> 2, "Start Date" -> "Sun 03/31/2024", "Season" -> 
          "24-SP Basketball Classes (Pre K - 6th)", "Level" -> 
          "101 Intro to Bball", "Time of Year" -> "Spring", "NameAI" -> 
          "BBall 101", "DayAI" -> "Saturday", "TimeAI" -> "9:00am-9:50am", 
          "AgeAI" -> "4-6", "GradeAI" -> ""|>}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "ID"} -> 
        1, {All, All, "Name"} -> 1, {All, All, "Flags"} -> 
        1, {All, All, "Time of dayTime of day"} -> 
        1, {All, All, "Day of the WeekDay of the Week"} -> 
        1, {All, All, "Size / CapacitySize / Capacity"} -> 
        1, {All, All, "Age Restrictions"} -> 1, {All, All, "Age Group"} -> 
        1, {All, All, "Wait"} -> 1, {All, All, "Start Date"} -> 
        1, {All, All, "Season"} -> 1, {All, All, "Level"} -> 
        1, {All, All, "Time of Year"} -> 1, {All, All, "NameAI"} -> 
        1, {All, All, "DayAI"} -> 1, {All, All, "TimeAI"} -> 
        1, {All, All, "AgeAI"} -> 1, {All, All, "GradeAI"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "ID" -> TypeSystem`PackageScope`AtomShape[34], "Name" -> 
               TypeSystem`PackageScope`AtomShape[526.4000000000001], "Flags" -> 
               TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
               "Time of dayTime of day" -> 
               TypeSystem`PackageScope`AtomShape[78.4], 
               "Day of the WeekDay of the Week" -> 
               TypeSystem`PackageScope`AtomShape[33.6], 
               "Size / CapacitySize / Capacity" -> 
               TypeSystem`PackageScope`AtomShape[212.8], "Age Restrictions" -> 
               TypeSystem`PackageScope`AtomShape[156.8], "Age Group" -> 
               TypeSystem`PackageScope`AtomShape[33.6], "Wait" -> 
               TypeSystem`PackageScope`AtomShape[34], "Start Date" -> 
               TypeSystem`PackageScope`AtomShape[156.8], "Season" -> 
               TypeSystem`PackageScope`AtomShape[425.6], "Level" -> 
               TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
               "Time of Year" -> TypeSystem`PackageScope`AtomShape[67.2], 
               "NameAI" -> 
               TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
               "DayAI" -> 
               TypeSystem`PackageScope`AtomShape[89.60000000000001], "TimeAI" -> 
               TypeSystem`PackageScope`AtomShape[145.60000000000002`], 
               "AgeAI" -> TypeSystem`PackageScope`AtomShape[33.6], "GradeAI" -> 
               TypeSystem`PackageScope`AtomShape[33.6]|>], 
             DirectedInfinity[1], 10, {All, All}]], 2, 
           DirectedInfinity[1], {All}]]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "ID", "Name", "Flags", "Time of dayTime of day", 
          "Day of the WeekDay of the Week", "Size / CapacitySize / Capacity", 
          "Age Restrictions", "Age Group", "Wait", "Start Date", "Season", 
          "Level", "Time of Year", "NameAI", "DayAI", "TimeAI", "AgeAI", 
          "GradeAI"}, {
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String]}], 2], 1], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "ID"} -> 
        1, {All, All, "Name"} -> 1, {All, All, "Flags"} -> 
        1, {All, All, "Time of dayTime of day"} -> 
        1, {All, All, "Day of the WeekDay of the Week"} -> 
        1, {All, All, "Size / CapacitySize / Capacity"} -> 
        1, {All, All, "Age Restrictions"} -> 1, {All, All, "Age Group"} -> 
        1, {All, All, "Wait"} -> 1, {All, All, "Start Date"} -> 
        1, {All, All, "Season"} -> 1, {All, All, "Level"} -> 
        1, {All, All, "Time of Year"} -> 1, {All, All, "NameAI"} -> 
        1, {All, All, "DayAI"} -> 1, {All, All, "TimeAI"} -> 
        1, {All, All, "AgeAI"} -> 1, {All, All, "GradeAI"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[89.60000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "ID" -> TypeSystem`PackageScope`AtomShape[34], "Name" -> 
               TypeSystem`PackageScope`AtomShape[526.4000000000001], "Flags" -> 
               TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
               "Time of dayTime of day" -> 
               TypeSystem`PackageScope`AtomShape[78.4], 
               "Day of the WeekDay of the Week" -> 
               TypeSystem`PackageScope`AtomShape[33.6], 
               "Size / CapacitySize / Capacity" -> 
               TypeSystem`PackageScope`AtomShape[212.8], "Age Restrictions" -> 
               TypeSystem`PackageScope`AtomShape[156.8], "Age Group" -> 
               TypeSystem`PackageScope`AtomShape[33.6], "Wait" -> 
               TypeSystem`PackageScope`AtomShape[34], "Start Date" -> 
               TypeSystem`PackageScope`AtomShape[156.8], "Season" -> 
               TypeSystem`PackageScope`AtomShape[425.6], "Level" -> 
               TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
               "Time of Year" -> TypeSystem`PackageScope`AtomShape[67.2], 
               "NameAI" -> 
               TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
               "DayAI" -> 
               TypeSystem`PackageScope`AtomShape[89.60000000000001], "TimeAI" -> 
               TypeSystem`PackageScope`AtomShape[145.60000000000002`], 
               "AgeAI" -> TypeSystem`PackageScope`AtomShape[33.6], "GradeAI" -> 
               TypeSystem`PackageScope`AtomShape[33.6]|>], 
             DirectedInfinity[1], 10, {All, All}]], 2, 
           DirectedInfinity[1], {All}]]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "ID", "Name", "Flags", "Time of dayTime of day", 
          "Day of the WeekDay of the Week", "Size / CapacitySize / Capacity", 
          "Age Restrictions", "Age Group", "Wait", "Start Date", "Season", 
          "Level", "Time of Year", "NameAI", "DayAI", "TimeAI", "AgeAI", 
          "GradeAI"}, {
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String]}], 2], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     1, "DataColumnCount" -> 18, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ID", 
                  Style[
                  "ID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "ID"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "ID"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Flags", 
                  Style[
                  "Flags", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Flags"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Flags"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time of dayTime of day", 
                  Style[
                  "Time of dayTime of day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Time of dayTime of day"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Time of dayTime of day"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Day of the WeekDay of the Week", 
                  Style[
                  "Day of the WeekDay of the Week", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Day of the WeekDay of the Week"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Day of the WeekDay of the Week"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Size / CapacitySize / Capacity", 
                  Style[
                  "Size / CapacitySize / Capacity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Size / CapacitySize / Capacity"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Size / CapacitySize / Capacity"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age Restrictions", 
                  Style[
                  "Age Restrictions", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Age Restrictions"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Age Restrictions"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age Group", 
                  Style[
                  "Age Group", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Age Group"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Age Group"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Wait", 
                  Style[
                  "Wait", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Wait"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Wait"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Start Date", 
                  Style[
                  "Start Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Start Date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Start Date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturday", 
                  Style[
                  "Saturday", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturday"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6308"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 1, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["[BBall 101] Saturday 9:00am-9:50am (Ages 4-6)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{526.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 1, 
                 Key["Flags"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["09:00am", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 1, 
                 Key["Time of dayTime of day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Sa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 1, 
                 Key["Day of the WeekDay of the Week"]}, "Item", False], 
               "Mouse"], ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["19            of 20", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 1, 
                 Key["Size / CapacitySize / Capacity"]}, "Item", False], 
               "Mouse"], ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3y 10m - 7y 3m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 1, 
                 Key["Age Restrictions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["U-7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 1, 
                 Key["Age Group"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 1, 
                 Key["Wait"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Sat 03/30/2024", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 1, 
                 Key["Start Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["6309"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 2, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["[BBall 101] Sunday 10:00am - 10:50am (Ages 4-6)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{526.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Full", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 2, 
                 Key["Flags"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["10:00am", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 2, 
                 Key["Time of dayTime of day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["S", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 2, 
                 Key["Day of the WeekDay of the Week"]}, "Item", False], 
               "Mouse"], ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["20            of 20", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 2, 
                 Key["Size / CapacitySize / Capacity"]}, "Item", False], 
               "Mouse"], ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3y 10m - 7y 3m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 2, 
                 Key["Age Restrictions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["U-7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 2, 
                 Key["Age Group"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 2, 
                 Key["Wait"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Sun 03/31/2024", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturday"], 2, 
                 Key["Start Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[True, 18, 1], {1, 18 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[False, 18, 1], {1, 18 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[18, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[18, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 18, 1], {1, 18 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 18, 1], {1, 18 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{2028., {102.2010498046875, 110.7989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{2028., {102.2010498046875, 110.7989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924388401436761*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"f58080d1-f771-4997-8b5e-d247171223d2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"prettify", "[", 
    RowBox[{"csv_", ",", " ", "categories_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "values", ",", " ", "dict", ",", " ", "title", ",", " ", "body"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", "values", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"dict", " ", "=", " ", 
       RowBox[{"AssociationThread", "[", 
        RowBox[{"categories", ",", " ", "values"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"title", " ", "=", " ", 
       RowBox[{
        RowBox[{"StringTemplate", "[", "\"\<<b>``</b><br>\>\"", "]"}], "[", 
        RowBox[{"dict", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"body", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"KeyValueMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "#1", "<>", "\"\<: \>\"", " ", "<>", "#2", "<>", "\"\<<br>\>\""}], 
           "&"}], ",", " ", 
          RowBox[{"nk", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"EmbeddedHTML", "[", 
       RowBox[{"title", "<>", "body"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.924378275745408*^9, 3.924378383837797*^9}, {
   3.924378420863274*^9, 3.924378532676824*^9}, {3.92437856732622*^9, 
   3.924378624149963*^9}, {3.924378673673106*^9, 3.924378685460256*^9}, {
   3.924378750408407*^9, 3.924378771724455*^9}, {3.9243788083725758`*^9, 
   3.924378878635347*^9}, {3.924378944591567*^9, 3.9243789515283537`*^9}, {
   3.924378982703371*^9, 3.9243789858545723`*^9}, 3.924379029397435*^9, {
   3.92437906962364*^9, 
   3.9243790822968187`*^9}},ExpressionUUID->"91eef072-cc2c-4224-86fb-\
453afca2e237"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prettify", "[", 
  RowBox[{"\"\<[GAME-ON] Thursday 4:55pm-5:55pm (2nd - 4th)\>\"", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Name\>\"", ",", "\"\<Day\>\"", ",", "\"\<Time\>\"", ",", 
     "\"\<Age\>\"", ",", "\"\<Grade\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92437888371073*^9, 3.924378910115726*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"e69e5e87-92ca-48ac-95a3-d2c4d82b7fd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GAME-ON\"\>", ",", "\<\"Thursday\"\>", 
   ",", "\<\"4:55pm-5:55pm\"\>", ",", "\<\"\"\>", ",", "\<\"2nd-4th\"\>"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.924378963251233*^9, 3.924379037492755*^9},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"2a2df904-2f11-472c-9bd5-3626c19158dd"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[Null, 
    EmbeddedHTML[
    "<b>GAME-ON</b><br>Day: Thursday<br>Time: 4:55pm-5:55pm<br>Grade: \
2nd-4th<br>"]], 
   TagBox[
   "\"<b>GAME-ON</b><br>Day: Thursday<br>Time: 4:55pm-5:55pm<br>Grade: \
2nd-4th<br>\"", Short], 
   Defer["<b>GAME-ON</b><br>Day: Thursday<br>Time: 4:55pm-5:55pm<br>Grade: \
2nd-4th<br>"], {"DataForm" -> "HTML"}},
  "EmbeddedHTML"]], "Output",
 CellChangeTimes->{3.924378913824295*^9, 3.924378963314254*^9, 
  3.9243790375529537`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"7041c0b6-02ff-42dc-adf9-6011747aed87"]
}, Open  ]]
},
WindowSize->{808, 671},
WindowMargins->{{130, Automatic}, {Automatic, 15}},
Magnification->1.5,
FrontEndVersion->"14.0 for Mac OS X x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dabd22bd-60ab-4244-a67d-140ae0dee772"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 352, 7, 105, "Input",ExpressionUUID->"b4550adc-338e-48f6-b0c1-85387e60aaed"],
Cell[913, 29, 455, 10, 140, "Input",ExpressionUUID->"d21ab447-1b95-4b42-b403-f010a95cecce"],
Cell[CellGroupData[{
Cell[1393, 43, 1448, 29, 326, "Input",ExpressionUUID->"31315ae4-1ee6-4f8c-bab6-99f0498d7076"],
Cell[2844, 74, 7950, 160, 399, "Output",ExpressionUUID->"36a333e0-c444-44a5-850f-588974086f3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10831, 239, 262, 4, 78, "Input",ExpressionUUID->"615e1588-47df-4495-9d01-d1e954fe41de"],
Cell[11096, 245, 411, 6, 52, "Output",ExpressionUUID->"e8e678c6-9908-4a49-bcae-0e7cf028512e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11544, 256, 307, 5, 46, "Input",ExpressionUUID->"0891531d-81bf-4ed4-98a5-8d6f2e0a6f5a"],
Cell[11854, 263, 317, 4, 52, "Output",ExpressionUUID->"6ec2819d-625a-44c6-a0b6-25b6eb6d8eef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12208, 272, 256, 4, 46, "Input",ExpressionUUID->"3dd4632e-88e1-43b5-a466-0658d43ff262"],
Cell[12467, 278, 264, 3, 52, "Output",ExpressionUUID->"ce16f53b-af97-4089-bc24-5ecfa501f7b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12768, 286, 261, 4, 46, "Input",ExpressionUUID->"04f9339e-79d3-4ba4-82eb-69fe303e950c"],
Cell[13032, 292, 273, 3, 52, "Output",ExpressionUUID->"f03d47f8-9124-4877-8943-e5aeb5385afd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13342, 300, 258, 4, 46, "Input",ExpressionUUID->"f7dcab45-c77a-454f-b19a-41fec30a803d"],
Cell[13603, 306, 250, 4, 52, "Output",ExpressionUUID->"a9d05270-b702-4cfa-9adb-9636a9bbcb54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13890, 315, 265, 5, 78, "Input",ExpressionUUID->"a4353213-df44-42a0-86be-10e9ada20dec"],
Cell[14158, 322, 200, 2, 52, "Output",ExpressionUUID->"6575387b-5e48-4b3e-bfd6-441d51b9f885"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14395, 329, 340, 7, 78, "Input",ExpressionUUID->"30ea1e02-58c0-450e-bc38-0f24a2f12fd3"],
Cell[14738, 338, 216, 2, 52, "Output",ExpressionUUID->"cccd6c5a-92dc-45ec-8069-57bb392cac17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14991, 345, 335, 6, 46, "Input",ExpressionUUID->"9b0e0eab-cada-46bd-bc18-df8e0ace737d"],
Cell[15329, 353, 352, 7, 52, "Output",ExpressionUUID->"8123bc59-e78d-4c8c-819a-87276949d550"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15718, 365, 567, 10, 46, "Input",ExpressionUUID->"bdaa79d2-3fa4-4d16-8db6-d30dc499bd09"],
Cell[16288, 377, 282, 5, 52, "Output",ExpressionUUID->"158e5596-7b13-4b1a-967f-634c1bbd265b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16607, 387, 286, 5, 46, "Input",ExpressionUUID->"18682e5b-16f7-49e5-a235-94de2a77e039"],
Cell[16896, 394, 562, 10, 84, "Output",ExpressionUUID->"41f272e3-bd79-4833-a02a-f822f949b925"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17495, 409, 200, 4, 46, "Input",ExpressionUUID->"66c55e3c-1eed-4408-9348-2d49a5439dab"],
Cell[17698, 415, 163, 2, 52, "Output",ExpressionUUID->"3195276b-6916-4e3b-93ce-cef531eab9b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17898, 422, 331, 6, 46, "Input",ExpressionUUID->"0c9e3c9b-6a7f-4d41-92e6-c1c41c212d96"],
Cell[18232, 430, 530, 10, 84, "Output",ExpressionUUID->"648f4c62-a427-42a1-a960-dd8fb501b434"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18799, 445, 207, 3, 46, "Input",ExpressionUUID->"e542f3c5-8797-47dc-837f-bae30715c51a"],
Cell[19009, 450, 235, 3, 84, "Output",ExpressionUUID->"9715a415-a847-4240-ba5f-3496386ce7c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19281, 458, 354, 7, 46, "Input",ExpressionUUID->"5fbcbccf-7dc8-4c22-ba82-519c0bcf29aa"],
Cell[19638, 467, 223, 3, 52, "Output",ExpressionUUID->"5ab1d13d-cd0a-4460-aec8-bdb417a3a326"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19898, 475, 600, 15, 78, "Input",ExpressionUUID->"526e1126-d356-474e-a59f-29f69f10679f"],
Cell[20501, 492, 218, 3, 84, "Output",ExpressionUUID->"b2722561-b70a-4074-9c40-a8033842e511"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20756, 500, 287, 5, 46, "Input",ExpressionUUID->"44f47fa0-eddc-42b3-9bce-1e02d82bc8ac"],
Cell[21046, 507, 591, 14, 94, "Output",ExpressionUUID->"48978715-b500-480d-a7be-32e8524a7a3e"]
}, Open  ]],
Cell[21652, 524, 924, 22, 326, "Input",ExpressionUUID->"217b64a9-4b01-43d9-b544-3183f6b96105"],
Cell[22579, 548, 1232, 25, 264, "Input",ExpressionUUID->"abffcb51-a5e8-429f-aa7b-492b2b0149be"],
Cell[CellGroupData[{
Cell[23836, 577, 611, 14, 108, "Code",ExpressionUUID->"39a847df-c3c6-4d79-82fb-d6a82df527a2"],
Cell[24450, 593, 7715, 156, 399, "Output",ExpressionUUID->"7913167a-3fec-44ab-b601-45386fae6e27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32202, 754, 378, 8, 78, "Code",ExpressionUUID->"5301f54c-c2b7-470c-909a-b7992abb7b69"],
Cell[32583, 764, 286, 6, 52, "Output",ExpressionUUID->"9e3669aa-b6a8-4153-9664-b5f0366d5241"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32906, 775, 880, 21, 171, "Code",ExpressionUUID->"cb703d48-8d55-4287-854e-303df8f1747f",
 InitializationCell->False],
Cell[33789, 798, 626, 12, 208, "Output",ExpressionUUID->"746bc8db-5d37-4316-a5c0-be501fa66693"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34452, 815, 459, 9, 78, "Code",ExpressionUUID->"5183922e-6259-4808-b665-35efd8e3428d"],
Cell[34914, 826, 390, 6, 52, "Output",ExpressionUUID->"319d0d13-6774-4b9e-8d64-8afc65781b1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35341, 837, 438, 9, 78, "Code",ExpressionUUID->"eeb75f34-8e66-48e2-854b-a8964888fa9e"],
Cell[35782, 848, 424, 9, 52, "Output",ExpressionUUID->"be45f102-7f43-4604-8842-f7883436495f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36243, 862, 471, 12, 78, "Code",ExpressionUUID->"cce762ae-fe71-4526-a2cc-a06b8411f10e"],
Cell[36717, 876, 572, 11, 84, "Output",ExpressionUUID->"20b1cd87-ff3b-40a0-bae6-1c2667168b5b"]
}, Open  ]],
Cell[37304, 890, 184, 3, 78, "Code",ExpressionUUID->"021bb075-0437-4908-8b61-df06e3c48a0e"],
Cell[37491, 895, 615, 15, 78, "Code",ExpressionUUID->"98c690b4-6cb9-4ca5-933b-940d98bab56d"],
Cell[CellGroupData[{
Cell[38131, 914, 445, 12, 78, "Code",ExpressionUUID->"0d2c719f-e037-40d1-8b61-0e80258f3b8d"],
Cell[38579, 928, 51502, 942, 589, "Output",ExpressionUUID->"1ab20a5d-6050-495c-9010-d9e07f324ce1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90118, 1875, 415, 8, 78, "Code",ExpressionUUID->"26e14889-2219-46d4-85e8-bd95c1b8468a"],
Cell[90536, 1885, 1610, 30, 363, "Output",ExpressionUUID->"b7b85016-b2bd-4657-aba2-4b360de7a5e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92183, 1920, 273, 6, 78, "Code",ExpressionUUID->"00b5e128-5bd8-4428-9432-fd1b72db522b"],
Cell[92459, 1928, 1596, 31, 363, "Output",ExpressionUUID->"83b5f667-d0cb-4f72-bc66-122bbb7cd18b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94092, 1964, 349, 8, 78, "Code",ExpressionUUID->"c7448f6e-08e5-4507-8310-dd9b12ff7911"],
Cell[94444, 1974, 69611, 1283, 241, "Output",ExpressionUUID->"f6e488b2-cb9c-4dfd-987d-92ae38df9c43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164092, 3262, 248, 5, 78, "Code",ExpressionUUID->"dc3bbd74-a5a7-4eba-affa-e6939c16b83a"],
Cell[164343, 3269, 74463, 1380, 241, "Output",ExpressionUUID->"f58080d1-f771-4997-8b5e-d247171223d2"]
}, Open  ]],
Cell[238821, 4652, 1992, 46, 388, "Input",ExpressionUUID->"91eef072-cc2c-4224-86fb-453afca2e237"],
Cell[CellGroupData[{
Cell[240838, 4702, 428, 8, 109, "Input",ExpressionUUID->"e69e5e87-92ca-48ac-95a3-d2c4d82b7fd1"],
Cell[241269, 4712, 348, 8, 36, "Print",ExpressionUUID->"2a2df904-2f11-472c-9bd5-3626c19158dd"],
Cell[241620, 4722, 589, 14, 94, "Output",ExpressionUUID->"7041c0b6-02ff-42dc-adf9-6011747aed87"]
}, Open  ]]
}
]
*)

