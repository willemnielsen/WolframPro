(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1832463,      36480]
NotebookOptionsPosition[   1807014,      36053]
NotebookOutlinePosition[   1807675,      36077]
CellTagsIndexPosition[   1807592,      36072]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Experimenting", "Section",
 CellChangeTimes->{{3.924470077152125*^9, 
  3.9244701081308928`*^9}},ExpressionUUID->"01a76147-5c90-465d-944d-\
f4046f940b31"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.92447344838459*^9, 
  3.9244734609367847`*^9}},ExpressionUUID->"a852eb76-49a3-499e-b362-\
33aed1602e0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     TemplateBox[{"\"abbreviation\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"AdministrativeDivision\"", ",", "\"StateAbbreviation\""}],
          "]"}], "\"EntityProperty[\\\"AdministrativeDivision\\\", \
\\\"StateAbbreviation\\\"]\""},
      "EntityProperty"], "]"}], "&"}], ",", 
   RowBox[{"EntityList", "[", 
    TemplateBox[{"\"all US states with District of Columbia\"", 
      RowBox[{"EntityClass", "[", 
        RowBox[{"\"AdministrativeDivision\"", ",", "\"AllUSStatesPlusDC\""}], 
        "]"}], "\"EntityClass[\\\"AdministrativeDivision\\\", \
\\\"AllUSStatesPlusDC\\\"]\"", "\"administrative divisions\""},
     "EntityClass"], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9244733752666817`*^9, 3.924473444452532*^9}, {
  3.924473510892555*^9, 3.924473537604762*^9}},
 NumberMarks->False,
 CellLabel->
  "In[346]:=",ExpressionUUID->"ed03da22-7ccb-4dc2-a229-964d9f35cb79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AL\"\>", ",", "\<\"AK\"\>", ",", "\<\"AZ\"\>", 
   ",", "\<\"AR\"\>", ",", "\<\"CA\"\>", ",", "\<\"CO\"\>", ",", "\<\"CT\"\>",
    ",", "\<\"DE\"\>", ",", "\<\"DC\"\>", ",", "\<\"FL\"\>", 
   ",", "\<\"GA\"\>", ",", "\<\"HI\"\>", ",", "\<\"ID\"\>", ",", "\<\"IL\"\>",
    ",", "\<\"IN\"\>", ",", "\<\"IA\"\>", ",", "\<\"KS\"\>", 
   ",", "\<\"KY\"\>", ",", "\<\"LA\"\>", ",", "\<\"ME\"\>", ",", "\<\"MD\"\>",
    ",", "\<\"MA\"\>", ",", "\<\"MI\"\>", ",", "\<\"MN\"\>", 
   ",", "\<\"MS\"\>", ",", "\<\"MO\"\>", ",", "\<\"MT\"\>", ",", "\<\"NE\"\>",
    ",", "\<\"NV\"\>", ",", "\<\"NH\"\>", ",", "\<\"NJ\"\>", 
   ",", "\<\"NM\"\>", ",", "\<\"NY\"\>", ",", "\<\"NC\"\>", ",", "\<\"ND\"\>",
    ",", "\<\"OH\"\>", ",", "\<\"OK\"\>", ",", "\<\"OR\"\>", 
   ",", "\<\"PA\"\>", ",", "\<\"RI\"\>", ",", "\<\"SC\"\>", ",", "\<\"SD\"\>",
    ",", "\<\"TN\"\>", ",", "\<\"TX\"\>", ",", "\<\"UT\"\>", 
   ",", "\<\"VT\"\>", ",", "\<\"VA\"\>", ",", "\<\"WA\"\>", ",", "\<\"WV\"\>",
    ",", "\<\"WI\"\>", ",", "\<\"WY\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.924473196690855*^9, {3.9244733880276737`*^9, 3.9244734221012373`*^9}, 
   3.924473556461096*^9},
 CellLabel->
  "Out[346]=",ExpressionUUID->"40e35f5b-9f53-4d64-9a59-12990a5ec541"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stateLinks", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=NY\>\"",
     ",", " ", "\"\<Hyperlinks\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924468296866825*^9, 3.9244683620483437`*^9}, {
  3.9244684607973003`*^9, 3.924468558106536*^9}, {3.924468588685954*^9, 
  3.924468589158157*^9}, {3.924469705278837*^9, 3.924469713726413*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"5c2731fa-d784-4450-b58e-bebca699ce7c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"https://publicreporting.sts.org//\"\>", 
   ",", "\<\"http://www.sts.org/\"\>", 
   ",", "\<\"https://publicreporting.sts.org/search/acsd\"\>", 
   ",", "\<\"https://publicreporting.sts.org/acsd-exp\"\>", 
   ",", "\<\"https://publicreporting.sts.org/chsd-exp\"\>", 
   ",", "\<\"https://publicreporting.sts.org/gtsd\"\>", 
   ",", "\<\"https://publicreporting.sts.org/gtsd-exp\"\>", 
   ",", "\<\"https://publicreporting.sts.org/resources\"\>", 
   ",", "\<\"https://publicreporting.sts.org/consent-forms\"\>", 
   ",", "\<\"http://www.sts.org/media/sts-public-reporting-toolkit/frequently-\
asked-questions-and-answers-about-sts-national-database-and-public-reporting\"\
\>", ",", "\<\"http://www.sts.org/public-reporting-glossary\"\>", 
   ",", "\<\"http://www.sts.org/media/sts-public-reporting-toolkit\"\>", 
   ",", "\<\"https://publicreporting.sts.org/additional-info\"\>", 
   ",", "\<\"https://publicreporting.sts.org/contact\"\>", 
   ",", "\<\"https://ctsurgerypatients.org/\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50127\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50119\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50075\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50063\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50097\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50006\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50082\"\>", 
   ",", "\<\"http://www.sts.org/misc/notice-and-disclaimer\"\>", 
   ",", "\<\"http://www.sts.org/sts-privacy-statement\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{3.924470225686521*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"4e503e24-9f18-49d8-8094-bde0ebbe5987"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hospName", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=NY\>\"",
     ",", " ", "\"\<Data\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924521150618993*^9, 3.924521160477523*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"29a48fb7-8626-4d3b-9ddc-ecaef4167c9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Explanation of Star Ratings\"\>", 
     ",", "\<\"Congenital Heart\"\>", 
     ",", "\<\"Explanation of Star Ratings\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Consent Forms\"\>", ",", "\<\"FAQs\"\>", 
       ",", "\<\"Glossary\"\>", ",", "\<\"Toolkit\"\>", 
       ",", "\<\"Additional Info\"\>", ",", "\<\"Contact\"\>"}], "}"}], 
     ",", "\<\"Patient Information\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Name\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Albany Medical Center Albany, New York \"\>", 
       ",", "\<\"Cohen Children's Medical Center of New York New Hyde Park, \
New York \"\>", 
       ",", "\<\"Hassenfeld Children's Hospital at NYU Langone New York, New \
York \"\>", 
       ",", "\<\"Montefiore Medical Center & Albert Einstein College of \
Medicine New York, New York \"\>", 
       ",", "\<\"Mount Sinai Hospital New York, New York \"\>", 
       ",", "\<\"New York Presbyterian / Morgan Stanley Children's Hospital \
New York, New York \"\>", 
       ",", "\<\"University of Rochester Medical Center Rochester, New York \
\"\>"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.924521151983947*^9, 3.924521172297161*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"3f4d3f59-b8ab-4ead-80f6-113f2ee2272d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"hospName", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.924521173254312*^9, 3.924521187314328*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ff4c71aa-e1c6-438a-b019-5d3365c16cbd"],

Cell[BoxData["\<\"Albany Medical Center Albany, New York \"\>"], "Output",
 CellChangeTimes->{{3.924521176551468*^9, 3.924521187580336*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"55adec9e-d037-4133-a787-ccca4ce337d3"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.924521216704159*^9, 
  3.924521219539557*^9}},ExpressionUUID->"16256053-7921-4ff5-8617-\
3b612843c9b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stateFacLinks", " ", "=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"stateLinks", ",", " ", 
    RowBox[{
     RowBox[{"StringContainsQ", "[", 
      RowBox[{"#", ",", " ", "\"\<congenital\>\""}], "]"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9244685939279413`*^9, 3.924468682458469*^9}, {
  3.92446872328195*^9, 3.9244687283852787`*^9}, {3.924469732167056*^9, 
  3.924469764787463*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"5dab7c5b-ff07-4ae9-8488-f3830f6c0d30"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"https://publicreporting.sts.org/congenital/50127\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50119\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50075\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50063\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50097\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50006\"\>", 
   ",", "\<\"https://publicreporting.sts.org/congenital/50082\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9244702206576633`*^9, 3.92447023077431*^9}},
 CellLabel->
  "Out[271]=",ExpressionUUID->"8c29d67c-cc34-4b70-9c4c-58bca1e42b23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stateLocs", "  ", "=", "  ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=NY\>\"",
     ",", " ", "\"\<Data\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924474736306745*^9, 3.924474748821631*^9}, {
  3.924474891656927*^9, 3.924474942485229*^9}, {3.924475071012453*^9, 
  3.924475071774735*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"e649e96f-ab2b-463a-8bb7-8b08453991f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Explanation of Star Ratings\"\>", 
     ",", "\<\"Congenital Heart\"\>", 
     ",", "\<\"Explanation of Star Ratings\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Consent Forms\"\>", ",", "\<\"FAQs\"\>", 
       ",", "\<\"Glossary\"\>", ",", "\<\"Toolkit\"\>", 
       ",", "\<\"Additional Info\"\>", ",", "\<\"Contact\"\>"}], "}"}], 
     ",", "\<\"Patient Information\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Name\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Albany Medical Center Albany, New York \"\>", 
       ",", "\<\"Cohen Children's Medical Center of New York New Hyde Park, \
New York \"\>", 
       ",", "\<\"Hassenfeld Children's Hospital at NYU Langone New York, New \
York \"\>", 
       ",", "\<\"Montefiore Medical Center & Albert Einstein College of \
Medicine New York, New York \"\>", 
       ",", "\<\"Mount Sinai Hospital New York, New York \"\>", 
       ",", "\<\"New York Presbyterian / Morgan Stanley Children's Hospital \
New York, New York \"\>", 
       ",", "\<\"University of Rochester Medical Center Rochester, New York \
\"\>"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.924474749662924*^9, 3.924474943348497*^9, 
  3.924475072816862*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"3f0d7fd4-86cb-4394-aa00-36bdd8d726c3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tool", "=", 
   RowBox[{"LLMTool", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<getCity\>\"", ",", "\"\<Get a city from a string\>\""}], 
      "}"}], ",", 
     RowBox[{"\"\<city\>\"", "->", "\"\<City\>\""}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Slot", "[", "\"\<city\>\"", "]"}], "[", "\"\<Population\>\"", 
       "]"}], "&"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"req", "=", 
   RowBox[{"LLMToolRequest", "[", 
    RowBox[{"\"\<cityPopulationFinder\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<city\>\"", "->", "\"\<Chicago\>\""}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.924476727467683*^9, 3.924476743963737*^9}, {
  3.9244767852085047`*^9, 
  3.924476792338551*^9}},ExpressionUUID->"b8e875cf-fb2d-4075-94d2-\
8a3f42e1f0cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stateXML", "  ", "=", "  ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=NY\>\"\
", ",", " ", "\"\<XMLObject\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9244772629658403`*^9, 3.924477265552891*^9}, 
   3.924477325565336*^9, {3.924478367513858*^9, 3.924478369889945*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"fc219e3c-6f1f-452c-ada0-89ebee4ae7a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stateLocs", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.92447766550554*^9, 3.9244776692148037`*^9}, {
  3.9244777853008127`*^9, 3.9244778825025473`*^9}, {3.924477920687957*^9, 
  3.9244779523619633`*^9}, {3.924477992171898*^9, 3.924477994036701*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"7225bc00-de74-4820-a447-5683cf2c8782"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstCase", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"stateLocs", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], ",", "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<div\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<search--location\>\""}], "}"}],
      ",", 
     RowBox[{"{", "\"\<Albany, New York\>\"", "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.924477563711174*^9, 3.924477600997044*^9}, {
  3.924477897149705*^9, 3.924477913462269*^9}, {3.924477998224063*^9, 
  3.9244780503690987`*^9}},
 CellLabel->
  "In[456]:=",ExpressionUUID->"9abd4808-406a-4c52-a13a-40b259a3e8d2"],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"NotFound\"\>", "]"}]], "Output",
 CellChangeTimes->{3.924478050636271*^9},
 CellLabel->
  "Out[456]=",ExpressionUUID->"f2c0a41d-7a0d-428d-8f7b-9cdfa365e965"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stateLocXML", " ", "=", " ", 
  RowBox[{"Cases", "[", 
   RowBox[{"stateXML", ",", "  ", 
    RowBox[{"XMLElement", "[", 
     RowBox[{"\"\<div\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<search--location\>\""}], 
       "}"}], ",", 
      RowBox[{"{", "_String", "}"}]}], "]"}], ",", "  ", "Infinity"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9244773268438683`*^9, 3.924477336542777*^9}, {
  3.924477425173627*^9, 3.9244775195483*^9}, {3.9244781377755623`*^9, 
  3.9244781616675797`*^9}, {3.924478224868944*^9, 3.924478244853006*^9}, {
  3.92447833159553*^9, 3.924478345235979*^9}, {3.924478375471911*^9, 
  3.924478385797607*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"6253e34d-ff58-4952-aba4-c88e2405457d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"div\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"search--location\"\>"}], "}"}],
      ",", 
     RowBox[{"{", "\<\"Albany, New York\"\>", "}"}]}], "]"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"div\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"search--location\"\>"}], "}"}],
      ",", 
     RowBox[{"{", "\<\"New Hyde Park, New York\"\>", "}"}]}], "]"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"div\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"search--location\"\>"}], "}"}],
      ",", 
     RowBox[{"{", "\<\"New York, New York\"\>", "}"}]}], "]"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"div\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"search--location\"\>"}], "}"}],
      ",", 
     RowBox[{"{", "\<\"New York, New York\"\>", "}"}]}], "]"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"div\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"search--location\"\>"}], "}"}],
      ",", 
     RowBox[{"{", "\<\"New York, New York\"\>", "}"}]}], "]"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"div\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"search--location\"\>"}], "}"}],
      ",", 
     RowBox[{"{", "\<\"New York, New York\"\>", "}"}]}], "]"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"div\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"search--location\"\>"}], "}"}],
      ",", 
     RowBox[{"{", "\<\"Rochester, New York\"\>", "}"}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.924477331360725*^9, {3.924477513298933*^9, 3.92447751971968*^9}, 
   3.9244781493825397`*^9, {3.924478232558352*^9, 3.92447824550185*^9}, {
   3.924478334268918*^9, 3.924478346425666*^9}, 3.924478386509564*^9},
 CellLabel->
  "Out[464]=",ExpressionUUID->"584018ae-3f41-438c-a86c-b1e1341e89f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"locs", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Last", "[", 
     RowBox[{"Last", "[", "#", "]"}], "]"}], "&"}], "/@", " ", 
   "stateLocXML"}]}]], "Code",
 CellChangeTimes->{{3.924478388839332*^9, 3.924478412955799*^9}, {
  3.924478562654984*^9, 3.924478578791733*^9}, {3.924478721391107*^9, 
  3.924478746042761*^9}},
 CellLabel->
  "In[472]:=",ExpressionUUID->"6716368c-d63d-4f11-8681-276ae4e43576"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Albany, New York\"\>", ",", "\<\"New Hyde Park, New York\"\>", 
   ",", "\<\"New York, New York\"\>", ",", "\<\"New York, New York\"\>", 
   ",", "\<\"New York, New York\"\>", ",", "\<\"New York, New York\"\>", 
   ",", "\<\"Rochester, New York\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.924478393603599*^9, 3.924478413299564*^9}, 
   3.9244785790719147`*^9, 3.924478746670327*^9},
 CellLabel->
  "Out[472]=",ExpressionUUID->"3a68f513-43ec-4b6a-b6ed-124f89f6a374"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{{3.924478274061495*^9, 3.9244782794147*^9}},
 CellLabel->
  "In[460]:=",ExpressionUUID->"68b8091d-7aed-40f6-8d9a-ff36df0bf55e"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[<|
  "query" -> "Albany, NY", "boxes" -> TemplateBox[{"\"Albany\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"City\"", ",", 
          RowBox[{"{", 
            
            RowBox[{"\"Albany\"", ",", "\"NewYork\"", ",", 
              "\"UnitedStates\""}], "}"}]}], "]"}], 
      "\"Entity[\\\"City\\\", {\\\"Albany\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], "allassumptions" -> {}, 
   "assumptions" -> {}, "open" -> {1, 2}, 
   "querystate" -> {
    "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
     0.658636`6.2701904583687655, "Messages" -> {}}, "contextinfo" -> 
   Automatic, "version" -> 5|>,
  "LinguisticAssistantTemplate"]], "Input",
 CellChangeTimes->{3.92447633457836*^9},
 CellLabel->
  "In[402]:=",ExpressionUUID->"05a297a5-502b-44b9-99a0-a28ae525cb4c"],

Cell[BoxData[
 TemplateBox[{"\"Albany\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{"\"Albany\"", ",", "\"NewYork\"", ",", "\"UnitedStates\""}], 
         "}"}]}], "]"}], 
   "\"Entity[\\\"City\\\", {\\\"Albany\\\", \\\"NewYork\\\", \\\"UnitedStates\
\\\"}]\"", "\"city\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.924476340175672*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"e917a0a2-4da4-48b9-a59e-31de9006d00d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoLocation", "[", "\"\<Albany, NY\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924476420694581*^9, 3.924476430343398*^9}},
 CellLabel->
  "In[403]:=",ExpressionUUID->"e907f49a-af97-4e4f-bd11-7e899e68764d"],

Cell[BoxData[
 RowBox[{"GeoLocation", "[", "\<\"Albany, NY\"\>", "]"}]], "Output",
 CellChangeTimes->{3.924476430723332*^9},
 CellLabel->
  "Out[403]=",ExpressionUUID->"d5039d46-0b6f-4be8-94d8-61608311d163"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.924476462091527*^9, 
  3.924476484281666*^9}},ExpressionUUID->"2296991b-ebfa-40dd-9ca0-\
c89c784eeea5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tool", "=", 
  RowBox[{"LLMTool", "[", 
   RowBox[{"\"\<getCity\>\"", ",", "\"\<string\>\"", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<City\>\"", "]"}], "[", "#", "]"}], 
     "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.92447630115444*^9, 3.9244763303269167`*^9}, {
  3.924476362869766*^9, 3.924476381228801*^9}, {3.9244764586999397`*^9, 
  3.924476508442616*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"af149f9f-eeb0-420d-994b-6f356f3e73e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LLMTool",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"getCity\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"getCity\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Function: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{
                    RowBox[{"Interpreter", "[", "\"City\"", "]"}], "[", "#1", 
                    "]"}], "&"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LLMTool[<|
   "Name" -> "getCity", "Description" -> "", 
    "Parameters" -> {
     "string" -> <|
       "Interpreter" -> "String", "Help" -> Missing["NotSpecified"], 
        "Required" -> True|>}, "Function" -> (Interpreter["City"][#]& )|>, {}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924476517849207*^9, 3.924476929024952*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"bba0eb5e-8553-402d-8b78-916c809f2395"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", 
  "\"\<Get the \\\"City, State\\\" from the following input: Albany Medical \
Center Albany, New York\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924476974035036*^9, 3.924477064418232*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"3519d01d-df20-4ee7-bbac-5b5c6684b7c3"],

Cell[BoxData["\<\"Albany, New York\"\>"], "Output",
 CellChangeTimes->{3.924477070926512*^9},
 CellLabel->
  "Out[412]=",ExpressionUUID->"1de32a1d-a1e3-42c0-8e10-e7799087d3f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\"\<Albany Medical Center Albany, New York\>\""], "Input",
 CellChangeTimes->{{3.9244771948321667`*^9, 3.924477197397449*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"020d5ce8-5acb-4d36-8845-6247fdf8c6b6"],

Cell[BoxData["\<\"Albany Medical Center Albany, New York\"\>"], "Output",
 CellChangeTimes->{3.924477197812961*^9},
 CellLabel->
  "Out[414]=",ExpressionUUID->"b46a4ba9-7c5a-4af8-8fde-af9cc8282bd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{"\"\<Albany Medical Center Albany, New York\>\"", ",", 
   RowBox[{"WordCharacter", ".."}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[415]:=",ExpressionUUID->"62ad80ff-f9f9-43e9-823b-9f76225f3c22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Albany\"\>", ",", "\<\"Medical\"\>", ",", "\<\"Center\"\>", 
   ",", "\<\"Albany\"\>", ",", "\<\"New\"\>", ",", "\<\"York\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9244772006622553`*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"5532203d-31bd-4c02-8aa1-8daabd442b8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoLocation", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.924477087237239*^9, 3.924477090969905*^9}},
 CellLabel->
  "In[413]:=",ExpressionUUID->"bc2d01bb-6a83-42a5-8cd7-c16ec7b56c7a"],

Cell[BoxData[
 RowBox[{"GeoLocation", "[", "\<\"Albany, New York\"\>", "]"}]], "Output",
 CellChangeTimes->{3.924477091317952*^9},
 CellLabel->
  "Out[413]=",ExpressionUUID->"a10a1f5b-1b3a-402b-9e16-d6d81a1ff819"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", 
  RowBox[{
  "\"\<Find the city in Albany Medical Center Albany, New York and plug it \
into the tool.\>\"", ",", 
   RowBox[{"LLMEvaluator", "->", 
    RowBox[{"<|", 
     RowBox[{"\"\<Tools\>\"", "->", "tool"}], "|>"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924476523546864*^9, 3.9244765984233513`*^9}, {
  3.9244766416108093`*^9, 3.9244766535952053`*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"08402a59-0ac8-49b8-a860-82972151a3f3"],

Cell[BoxData["\<\"It seems that the tool was not able to interpret the city \
from the given input. Let's try again by providing a simpler input.\"\>"], \
"Output",
 CellChangeTimes->{
  3.924476602175514*^9, 3.9244766578880653`*^9, {3.924476915605589*^9, 
   3.924476935100628*^9}},
 CellLabel->
  "Out[411]=",ExpressionUUID->"96bd5931-d686-415d-ab60-f17122904cdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"i", " ", "=", " ", 
  RowBox[{"Interpreter", "[", "\"\<Location\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.924475574352963*^9, 3.924475641789875*^9}, {
  3.924475935577547*^9, 3.924475936209682*^9}, {3.924476008955027*^9, 
  3.924476078431695*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"f5d23859-daf5-4351-9143-acd8a171ac82"],

Cell[BoxData[
 RowBox[{"Interpreter", "[", "\<\"Location\"\>", "]"}]], "Output",
 CellChangeTimes->{
  3.924475609305101*^9, {3.924476011221697*^9, 3.924476053021297*^9}, 
   3.9244760860750523`*^9},
 CellLabel->
  "Out[397]=",ExpressionUUID->"3d6972bc-5d36-43fc-a09e-99eb07f6060f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"i", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"stateLocs", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "6", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.924476016674418*^9, 3.92447610381607*^9}},
 CellLabel->
  "In[401]:=",ExpressionUUID->"e0d03cff-069e-4b9e-a4f2-19db6d5c03f2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"No geographic location interpretation found. Try again.\
\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"No geographic location interpretation found. Try again.\
\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Type\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Location\"", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Input\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"New York Presbyterian / Morgan Stanley Children's \
Hospital New York, New York \"", HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "InterpretationFailure", <|
   "MessageTemplate" :> MessageName[Interpreter, "semantictype"], 
    "MessageParameters" -> <|
     "Type" -> "geographic location", "Input" -> 
      "New York Presbyterian / Morgan Stanley Children's Hospital New York, \
New York "|>, "Type" -> "Location", "Input" -> 
    "New York Presbyterian / Morgan Stanley Children's Hospital New York, New \
York "|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.92447602235152*^9, 3.9244761057822237`*^9}},
 CellLabel->
  "Out[401]=",ExpressionUUID->"61e8a9ad-02dc-40a4-9bba-d15d3411906e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SemanticInterpretation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"stateLocs", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9244757115799513`*^9, 3.924475741486912*^9}},
 CellLabel->
  "In[384]:=",ExpressionUUID->"a73cf6bd-0417-449a-81ea-0323e63acc80"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.924475734665851*^9, 3.924475743021668*^9}},
 CellLabel->
  "Out[384]=",ExpressionUUID->"be4927ea-fb27-49a0-b555-fef262675c32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"i", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"stateLocs", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "5", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.924475612473925*^9, 3.924475627337544*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"323e896e-f5b7-4006-bd40-86232a321f37"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"No city interpretation found. Try again.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"No city interpretation found. Try again.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Type\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"City\"", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Input\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Mount Sinai Hospital New York, New York \"", HoldForm], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "InterpretationFailure", <|
   "MessageTemplate" :> MessageName[Interpreter, "semantictype"], 
    "MessageParameters" -> <|
     "Type" -> "city", "Input" -> 
      "Mount Sinai Hospital New York, New York "|>, "Type" -> "City", "Input" -> 
    "Mount Sinai Hospital New York, New York "|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924475629445179*^9},
 CellLabel->
  "Out[382]=",ExpressionUUID->"faf9359c-a895-4dd4-8062-25f119a079cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", " ", "=", " ", 
  RowBox[{"FindGeoLocation", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"stateLocs", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9244747638226643`*^9, 3.924474777826964*^9}, {
  3.9244753232220373`*^9, 3.9244753493184347`*^9}, {3.924475436762497*^9, 
  3.924475506328887*^9}},
 CellLabel->
  "In[379]:=",ExpressionUUID->"4cb90da9-1a1a-4c6d-8535-8a566cefa912"],

Cell[BoxData[
 RowBox[{"GeoPosition", "[", 
  RowBox[{"{", 
   RowBox[{"40.7900429`", ",", 
    RowBox[{"-", "73.9531482337464`"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.924474766700192*^9, 3.924474778192606*^9}, {
  3.9244753199306307`*^9, 3.924475350095612*^9}, {3.924475450817581*^9, 
  3.9244755075112963`*^9}},
 CellLabel->
  "Out[379]=",ExpressionUUID->"9c83a748-cba3-4457-8439-bda9ce99f98b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoGraphics", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.924475357289432*^9, 3.92447536918925*^9}},
 CellLabel->
  "In[380]:=",ExpressionUUID->"a7759daa-6487-4725-81ee-fec544636d0a"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1: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
SIsievg0V7Gw5FOU10Ip7mM/1LJhdmZK5ktu/O6d+sS1XLnLkuKU1V4hnsEl
lzjiTLGVihAaK7200l8Y4rTzMU5Kqnsw7e/29fdLET1++GBuupAdz9tOrMYc
awntOXpS98lsM8gQArwqN6OcoHSkMidYRE8seLYcJZnRa+vqbXlQq0VmO5yV
Plm+u8yffqYRobk0h/KZ2fAKFpQDTbIZ02mGQMGl8w2yW7ANHTNxmtJnbaKV
1N3LPW5hPi5w9aABq2V+o+WAJhSDDYeze3PSM398p54s2aMOBBwVVyt4FXdI
HWCyAvMTLgFQ+tXx7ky9agsMINKcjR3xj0H/nosZMaWx0kqU5q47phxxal9v
DM464/vxJYTyPp2s9+7uTPNwhbab19/minSO1iGIrNi0sF0iFB6380M7zmfN
snOy7JomR4mMi1tzfZZiMftFTv02tLgdrxrTURqBgUkwIb2xoQAzsDS6mpec
4Xi611IZ+OPK7C/G5vwkjQbBxiO0tgFn9UO9huaQbEtu/2adHdnTIVueCsNZ
zsC9rDcaeUJ7OqZb5DzJ4AgjaKY0TpJB4FhOI87wGvmfLFdcTRz5FftklmMg
s6rXY0Nutfc7js+eeR4q+vQTyO7Nsll7LRKHVUq972vIyaDc8JozqItgr/SP
kdn0ltwKcy3yaaDzNN5Bvl4aMqvUTD3X17QGYEaiSeZnBYu0tMD5a2+l+hDG
PItyCjxocmJY9mL+Ob65m+XfmxQ/YNnM2b77UzNisn6XygmtGbB4vc4mFtRT
8ZRC9pL6VWiVD0pBrDGPX4tsFc66hAPbrcWPuhq0Zadf5dbvZJe8IjLUQtaa
QSiQRDgrUuZT2phWx/kcBq1lJjnxtOxc+2pbWiroJYVqQWwXdldjo0LhSy7f
12jbFNabjdKxcirHi9uajK3PXl5a0cJG2fYsusdVoQ1umdsHxaK3+CvJ2rWW
4FG6X1m6pWRzTmiLM/qJj7OybcWUxkldmXgoeJ2nV0FbDSeemsK7nEdcdcnZ
IzavSKuZLG0sOQzyPcaeabJswQnEVLX607S+7fxXOwq/6rZYT/M4ztIY39XH
R/NQkRvR7cbtkm9o4HEkQyQ4QGo3Q2r/GJloj6JixHY2tlNzU6iREEmoNKPF
iuJZ0kV7HHnyQQGyQG3GAX4mKJ3WMg4deckwLddirK6fS0Z6q1VcxrIZ84Y+
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
ZsEyzEXiY+l/pfP9yt2XeZN3HGoF3P96791OtmbZuaEKxit6TNo3INFxNaA6
JLO/jhrONmqu90qqIQJkY8vMsYmrSu5JUKVkIR3/Qdq8BjzilL2nIdgRTfJv
grDKX3r8cK/38mkWIe/WRph4+m3ijT3/033mrcipUnmZ9oB1m/5ZxTQ4y+fZ
tTa7MH1WKwGdTux/lmVQ+0UtGNQUQNlKeQVF9ZPNzCvFdtXS3V3HvNDn2S+n
LDUPbRPqOtF7igvlUX6FHqCuao0HsGasqC9+gNfl838zOfjK9NL1yeHX/GYV
pt7KXAQwl4/NX3oezF0++w1+g8W8U1oa0RzAXACX7FSxAC/hyQzOAlpdKI6B
p+Asox71v2Nod5BZDd4p316v7a0fKWIsnM3vEUv9+bYDeGpKu/de2SSh0pTj
28MvNqpQN8px2aYPbhBkc673B5mMJh+YYhevAEAz2UoeoQB6ACMwSNhqOhXN
/BixfgWI3zVa7Ou+4Cs36C1WsXP7BrwW01yCDr/iFakAqMs1t0J2zxazJOeh
52MfMqwzPozFjfXQADp7AeVPblrFHAtbYed9CcolujvVaF00Vxy0ZzP4Wj/6
3YfwPhAwySVON8V9B2rZu5T59cVY//ngcAdbIFuInDzRhYtCur29XVM8DmWz
Hpy1aqbRXrFOd1+3ubYKyzaFjwzf9zogl3AEczmXtbTZa+czoR7JUBfXe2If
Mq+xYK1ANo7MYuVKE32+8Otwv5km8plDKoydcskLXkBU229tP3RuEkA7usG8
NM+P1W2288isN5yVKuB+Km4vf+nKuWfcVoB9AlbJL9RTtShFIvYTFTVVu1gQ
06P/4IWDAkz2048eqapFDlVo5kJ5SF83wXnu4+YANBbya87Mrm8AqZkcp/Fy
t/oIqNDVOu4d1UhLmclJSucbJzZqM0rZ4jjZu7KVJGiscp64Iw9/SsxTnn/n
7H6hMvOKTzK1lDnMdwFxQBayzItUhtGeSj5jDd/Xx12UcjVV+7RpU7hoxT79
Vw8+3ufDe33PZg34mycAX6ju2FSx4Qq49H13jB9qtdN2hAoRI7P6k1vA7AVk
BbieNNWwS3PTDH3YY4gzmwl4MVH1r7HykPHZ4hggu3hn/GiQDUlKTVvmfRHy
jE8HtVAbQ8O0lYC1YFuaxw5nOuA4zLXC1syD78nk1mj7vXImUAvixJ5VpU4Z
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
NeG42BHTcn29gP1QMiBTuawUSi6Geg15TYOKRoaZbhfP3p56w0x2V/50u/MP
JLcotFXhm9Vhi+dhcGQm9Z1DabVcWer5YaHzr4DUhAOmOKts1hY9UJx1i1UD
2IYuxayH0aBjkx5pPFJDWLqt5BGdMouEvsHTjJtFlH3wFtycg3bOGkryyp5B
cKfnQLl+xRKLudeKSlSSkg22ejHZNMNN6f97RszHa0tgjfCLgRXO3p54pd/y
9MNvXeo8385PHGfNCV4uyHrgzcrw3ciL23qCT71/1qPHc8Wemq27PC7opJ9x
OWA+ARm9AkJwTF93NKTbKjoAN5cEcRzdsRuVwGvoq2UcROq5u6DtMUz7HmKE
lWXbbtGxtto15W4M4qXcURaKUJ6OSWXHzBo31dmJJY99ytS/O4zS1jd2NTbT
bY62ULZJNmTeSNQi3iFcuDn20aWPblRHF+1cAMqnw9kQpwQLVtQES2s69kKg
9gXirOsLcWU95+swlpEJ5vE4ongblV0T3knmQkzNI4gySbV7qQKV4GknKEvs
h/zBWHkY7NAOR4d6efZlvgb7dlMBQNr65LuJPTl92GfPfs+75xO7LMngabVi
UOs9N7dLpQTbjeu/S91XQctxBZwYZ2MBQxmlM3zWirYcDNqR1VSms4Y5pIwz
E7sn8shJagvXx+YZXB77HzVhisIZkE4JROqMLO2ZlBm5aUBSVv4ZMeTq0Euu
Z6WljrSd62O3dFFkNN6+a0usybVBq4Pz4L6J74XPuVKCPF65oK6mVQ0zj+/K
ojQPSS5m2GPnrAlx3J2lV3FeD2sqR0nWUfBZD4Ka2Shq8oylJGpk9uoZrxZa
f2ilaTTsFYPPdB2qWYWkxfsrcd1S2tbpX4fJut0YxDSTyPBrC5df0e26fXNF
xeJ54+vD/OjbdJWFE6RSQdEWO3TmGwpMavEpbr1qAEDvUL556tdm+l8fnx8U
zk7Pd3viDFxSVWkgksIy4FIiFbYkOGUVfsE7gbtDPBitPfMAql4qP+HutVur
YgnLWiIGVe2Z7XsJP/XCcyKzDA4fAuLKmX1SeoPOKGPIyawNbIgbV+ArOMtO
ROt8Az3C90aSWnie3eOCFRkPu2LAfGRCNLuhGHeajMaWERb4eIyzwUZx3RFz
N4j8+LmIqrOmAqDLk6fB+sWxH5p3PvSHZpXlh17iE5ZkjF6u+zXZjW3lsFOK
mWzmfQ3Zt6fov5NZRt40J9/7/aTc1Zn/Ws8u5yZP7ESL7YZ1eVpUR5wMocig
av/wmeHLHbocMNyp8aGY2B7pmX2eiCbhLHyWMSneHBPUPj+rfetK8UUZjWkS
VzS6cbgIrdpm3RQkF2196I6yurTnvb3PQEYt7Zy0ximoTMt7ScB5OROEs7k5
M/q+CTMqb53pFwS0vc1cVWROgmKVGc0P4OwXn93/ZPmsz8Y9g/2+N4+nUiz0
5fykKK0IoDpm+Ns1PN71Y0EGxMp/rkVCQ5zN5AjXD4jNLQen/f00nkpZvfWj
zQDKYhzcVebZlMF5stQRe1pvTZxQxUmVciin4pBKOrYzrS4KN3u7ztFYVtG6
L5zO1IUHeZXyE7f6OCUIQiYYm/NSBJ3jrCWwhCRWeKVWMo6zHNerOTRRXBQG
aZ2zH/g7mM5pxiKuTN1ugjuYy5Os8w+uahLPLA+gG3Lr6/LstaayCEAnWrsH
cdapEIDLdAdcMn+Cm8ZYzfddUG+53BBkD8TiRKwu0qO1uavviida7FPQGW5F
yljtn89faoXMvptfjXN55i5+34WFLaR5IIWncYsHBgot0zykjspaLr7plXDp
vGfxnAyxVb6+ffSxCRRzp4nGCmS5VVYq4ybtODHGNRVg0RgNjuVQvhsErpXO
I22K0aEeGY2heDGZtSJuwXsunNWFY7ONxUnWD7rQmWvUEGdrxDZN6pE9Qfs0
EePc6Y0ZqzYL5ipWzURaxtpARmVpKb0XDBWMPl58b/fWJD03K8fwn7gmVSvN
aiUsvsdOdq7/5FFlwBlr/BqrJZsDenbQjCFhaWel+hauG85GgcfT3X9vbtO1
nuXRH+4cDInk36nSuWeOWdLGyxuGbmPz3d0X21xFanvHCqgpwTaGURCQxieL
VSu09PwQ5nzW1uSP1ifToEfZk595t69fHHmBrl6RxMMUe+qmoCRYqDnO7odg
Y6ZflZURWMiG7IgWJ9XGBmQ/XKhx3CWwNloUFfpRTTe3uzIb65laGXnr1tjx
7d5vA7U88ktnvjmxesDk4kZvdtgxMuleWm/Sg9KzDE2Oe7Ubqv41wVmBbJzO
o8aU4ndvhtUaaR0eqi89sGmZBFdcLQTayFTMmJjBeag3LsrDlg9uFS1ntrrI
G4v7Xbgewjhth4GAnLtwro0GxrHPhbkxJXDxb0yKZUN+VOmvXaDlmYxCiLtN
uQpeRJi+5aZ7THEirPnZQDeSavcou8eL+VoCfogj4uJeDq69xkCWZuOKsXLu
jKH7AuR295F0ReVEZXG1wW0MOgQDWsHm+TQttx5P68U56xvzZ5CStuZQy1xq
uckXv2piUKe+stnxdbCVqXLr3d8Qn9Ui1v2SnlU01femaBpTujrGxmttv3f1
xqXJ1urynHwabYpSWplORkVAkFOWnJHhbAT94CxD4aLBAkG9cTCiwx77dFKe
2fA5jF5sLi7jDs7miiZWLNV9QZiMxk5mWVvKmJwbPKfSPKxnILPKzAVxXIJM
ZJYeyowvu7EukLCbjVlHxWJQcRXahnFQ+ZU+D4ISGTQvNkCpoj8zP2odK19g
A6Pt7sodF+w6yQ2zR1mO18TbTp8HfsAyxhQX46jjd47dPvdbdy790YORb8XP
u0C2vpL7U+FsHIcsbguwQmZdQgrYheee7bncNrIAtoKw71+r0q59nJwF+Pic
6Tkxn91Pc+6KW/bsPA/UvkCjMW3/88/rxRXrmzx3+ylFEgA1wdkE1watEnTG
hlzPandSVYcYo8tpzQL90OOQLX2v68eKlWWKiEvT0ripHhVeeTj7k53Lf9jb
eVr6Et5c8gI06Sss1eslvn/txqWLtTCPesTkIkreoR5nPYnJUYntJZClm7Ch
Iq6EKeQP9fReV6UIVQjzcY7V7bmfxupP+gm82zJudkp3K9dVClDdAEyZuwBZ
gNUvCu8Fu7SN2W4vQBC7a4WzXLt4CeRps7HblBNkHWuu5DTw278SzYTVOs66
hhiTNpeP0wSAMppj9c5ZiRwmpQRCU3o1A6vTjCONJdsVN5FZoHYyFBg9LNJY
pt0mAWwJrEfiQvAOUTzWM0zsAOuDD/5YMcOwGysD13YMOFNtdKZ9Jkb5JV0B
aXsjL5JioBDILL+SKgWtlZIBJ1tO58mEP1lsT1Bvlkm2FJW5V8GX3u52r8L2
6OH9nott+tfrGhQ6/0ogy2v/xFVPFILHQX4zOAu2stJWdSR5YBWLC2LK/6vq
M/KHMjKJoHHpDR4BybxweyfpUSmZjaOGtu+VpN3kusf6CQTTq/bEUFsvDOWZ
s1oqfKno6Uu1Z/stI2yB3+aRKdYMFKGCQOWMBeDtdCaGBRA2g621h33kW4eB
LG1woaV7b6I8Uf/bsRkjtrJR6I/LNDIy/H7n+Y7RWQARwrCXVjQYXdx4ITgL
dvtDWrw5RuMoCdQ+PS1960rxxeJsyITNew/3olTozBTEjOrx5zHONp+aFkJ1
iZoNeWSIqbWe1TpIMWOLxvI80qCuQZDHTMoqFu/FMoq5dtMQ7u9wkC33vsQ0
tXDpxM1zvwPUnuvr394+0BnzCQa7JecC8cng7PraMj9xKJGSZAwoivgydpnW
SsgsFXwo2GZmc2hqY0i0C6CUcmCmAY5yzsqcqPlkwUIWS1KlYKHCb527mUk2
mH1gsrcmTmhloqQkWpItOzvhtlnIrFBV6ha7QdiNf/kcwivJr8/uFTPuWg4B
2l7LX5Y/2l1CXqAnDtOVCgSLk/XJdz3xIUHMh1UhIIDrAyVdi1iS2gGXLpm/
aeZA5qz80QCrL9EB3NizxjYeASWjcWaQRWYtQeNeyeNp65OjpbTQHGS9nunj
UDhGES+KWmEwOdAvPr23d7fEZpYA23Zs7/7Kw5k3zNkXNANzPW9D6IBUz4Hy
Z01rRZNOOvVrSXG61nC2dW0Kd54Gg8A3PFlVZNAtFXBJJYeCsyxxeRIZPUAW
1ilKW8PZCy8LZ+kAdNhzfs19GWqRK3HVm47IQ62kFfdmyv8r4SkgErRN0nlm
fsSxwgSV3BhKmBWZNR93IUmikZKqbMu7qeqFv6c/ls8bL5BCq8kdr3bPXfz+
ducfsEwSk63H2Xo3wZFNSwWeJvlhxUm3i2cffTwGM61Mvwdc0rgfbk+9IS8t
n7O0aB2F71z8Kn22oLuT/0kFGdOWlO+5+e6xw0A2DjCuby2qSbDZoUgdBBst
uTgEJLPGDuXLhzovdbvk8jNEPR2Gs57Kt5+aEGtQ+/SUFpCVevOLavW1VOqz
OKVw61O6f14fB9WwiZ9K0cjjkAVMceVx/uUR8/RYiXwCOvGuKgvZOGSLUxr4
qeSOmYEBWaC2UjjzyfJZQDPTEziakpL2rNLx5sjsdQfZ7Uqpt7+7JuIaafHV
t90gURvHQcV8HGhQBGNDApvB/dhirNAjX5bI0h7nRrlnFpzViYRAi1XLMt4x
rWCVp7dSgEO9vAKpbCa7MSMpGzK75aC8Z3t+dX9rgRUOqJ15EnnYmSL4XPpR
e5EQop+pfRjOlH2upHGqsW2c7glqdaso6pibgX66T8EBl0vPV3KOe+asrEBW
hinF2ZkLx+PHmT7IRt2EzGqi9vJzmXQhbXYYmfUPmSF9HmPm5JO45ilcz4WR
uXXN/9vxdWN291eYBmG1ctdakZr0HoOSmMAjC4CNPIAiMmsRUKnO8PnC0etw
mGwrODtauF7Tvjh1DDAVEzQvw1DPnfVphdRCiKxkwMKMyKyUJ20VNH7FS7a5
3RhGrA6Mzw96eVlO9otUSF+Ocob6wa2laxMDiig2A376UIfSGDMaMW57ABH0
pA8aZNCWGSDkpoUIqDSE2C8oh1DKlbjteAgspP+2ND1YBV631u6tyQxcyuAf
fyLLP2ch5mgl1Ad+AOKDgIaJIWyJD9UElDQA1LyxAz8w4alyH9ApAUlTUOzv
iDJ61tNYlLV4BaLm9nPWYxbHHg7n7t14jZeA7PnfBWd5w6pAse4xzoKwwlkg
dYeV85VvxwHGc5MnmoBs6zgLSjbZScfM2ntXrnZ0vDs7e9WlGrnxQFvuO1Ha
Z8iWbYizbjemsdvERnFzbHtn6+TEU8dEvSgZKG/1qR8xI1CQqjyzqsgZQ61m
zuaOXZ+shKGKbVYgItQ1Dj82sbXZCc26vGfqrkd8i/YpF7xYvLyomv9Xhqyg
VeXM74O2ZkBeGIiDoPZT/uhBR3Tp/Ws3LucnQSKmBR5DLz5br1CRUdHnW/ip
99z0l6JEnuLWmKyaR45Jff10qGj3hdNKsxJK1pIC7kz6YwL2hbx+aFoZCJNS
kwWyBvcWjzbfsh/2AJjKbuxe2uGBLkCWYZRhzZYZ1UV79g+m/MierHBNW5MP
vcQaJmM0dtdzX2FJo8dMGCtL7KeZrTDNZDUVuDZdVd1M5fV7JQhTSgnBxn4J
WGbkV/piQbmx+e4MzorPAuj1gywyC9NhHmuyiOKuqBwi1cXMzyE+fVB0lQNG
A/QUOnMWnl2rSCHYGeyPD+G2VhW0zaY7WK1FmYb34C/vAVb6I0VH1cWzdJu2
Y140pxU145OtRUCZQFOUy8OhnVrSVc7CKvBKa3HopzJue/gTW/Kv8ri/CIqI
HtoKFgOybVempzaGvO6PysuGm7PGLiUM6DtUOjMf1jh18MxyaPPMRtoU0H/V
pVXWmMtTK7pY2c2CMxW0nZvNg7bwaMGrEA2U5xTUAU65ntgewNnADW3BcPrX
GbTSWBtd0gqBnije2LOTFMrlKTZ7qawTr1oti6ff3SxEUJvYDOlVBme5Fh6o
7DF+HEKh8hw6UVkp5qCulp2dctiDTNb+NbvxOzUvrenjXfiGP9rLoz9sDrKT
IROnlduPW+tIyzMYJ7QFXm9ubSgDiHURVxxAFOVsfohWcBbEF8Imk3AIPJ4M
sccc4qkoLRu/cJxtAgSKAVaFdNEKyAtw4xhUrqsr17xxh8hHQ/v033aZo2gP
bi0LsBReK6dknADijW2EkpYvNtkRF4u3+u9DP66c/4ZeFXs8+v6re/eTwjdA
iUI+mOEVrkyzknbT00AtzDcW7fEgnxhVD2DH7XFIuisd7adFRbmmsqOyJjly
+aGlRQPwDek8ymDKT40wRSi7NpZYlJtbXl1Z7zkv5fExerT9QN5BVWisEFbW
YwaWN9oAyFNkV2yjuD33UxqoyuFUXC924MKj+QqS+8nyWcZWZ829AaN0O0MM
xGpy1JaWi37DuNY0w0iXBLicyP7niWy1xzMz8uMDr7v0AcQ2fpa5EPRB+6+P
gHIyyyTGhOn+x7haipB0/HBlKgXYxJMz1Ca+XhJDc1eUFBr1fi7fBdTCRB59
PPZ48T1JNwCyidZi2zFoSLH9z5d6fqhE2rW235tcG2jdaNxiBNTcwpKTWVBS
NFBcVXoIbjSG8vMVAOo6w1bqLtxRWkLAuXQtWPm8m18FZHPTQ05m+YrVxRep
PK9rUPAr0WcOCpoIpwwZgwXABNzSnNlYaJFh5FHlWw8S81pL4qoSBBaceeF4
VlY819IcFupBme3BDzFd8PG+wdOLYz9026zePPjgj4GnWu3gkP8r/wI/Z59a
PMQ4K6x3NPTEWBXZWVvJy62gGov1KosW1ngQZ1W9XeeS+Jc9Tj40lcObGz4V
xxILZFkEKn0JNs2t7sVn7UROH9OWEFvakUy2dZyFrjb0z06GDNx6fGwbWTjb
c1nrUqB2+LIx/cNw1n9+pGyFYyhzEcdNZtftKae0HOKp0nxeoAxUizgLY2Iy
30uldSZTbX+ZK58WZ/cDowwVhFfjOGSVlZd+10LpekagL53uyrFljy7dWRv3
zFmFmoCw1s78vntsi7n23GC78MjIVEBbhePKZA3ajnf92ONSYMqZ7FcO5PE2
jqcwVqicTt9JN597Il4rFd4bJraAO8o+Br6BSI5CZ+g8XLKWMLsw6oXzVOlP
ub0mt7U8o4fUAgxCUDGTlUBWwcaitILpXdNTMss5r/UmU6vdM9gOpAKsDz/8
VsxzY5ILKEO094N+hcePZdYYorT55cVyqrpZr7gI4nPdM0ZjtThtVuIY7py9
/7Dq0VYP7yfb6/60KnVhdoIOWKJHCiX1ZY6lstjkSkFmHWThaw9uZXU1S3Nj
VmAl8FkQSskmcCvm9lzP22ZX7H/JuG2o/A5LshCpaKoEcMFfWq77NT+7VozG
P+scOjICivkq9swyCasShwMHp6PBAcuMePZ1aZ3AnM9JsSICJYVlDJSTWZYH
HLp/4upcedzDqzhNYZng26X1XbtSZkOgVpRfVFQCUBYEkgpAfVI4Lgs2j6pF
1abZZGmtpdXdVOHfOaBc8A5PqcpKUYlLygUWpl/J/6t5/G9cUjYrFP5q8Xx+
bZBmRfE8dyzgLD9nanKcrVhyenJeHrcgxN9LBP9rFXl8IQHg0vNosy3XgIpx
9trEgA7E9hxI4cRqnLLnPFq+W3o1ZTcGXm9PvbF7a9Id09MzPQdqCoS28f6h
0cUNgfLI22+gtPwMNmeIrW4n6K2FKwQQfB4Icz7Lqpujy/AoTdTCjVXfeeuU
9oWT2eY4ux+kimLDsgtuGEO8uexs7qma4pBjP6yYLFyGx1/ySvXTPttnRPiB
SIAjtiEnz8g7xxxnxV+2Pz6gtgQkufXYVQTtNV8Lz6jBzfZUHO7LfiT+rNPP
LDP43MTqj3LL7gcumcmaUQsziQVB2fmWC8Jrm1JSUgnwxeZ0+Z7Y1YNbJlol
DDVSPNAVJ/WAuaAYDz4jBpTr8u1GNZWA2gadDLZoboDP7hUBeg59a+w4PYHn
CmoPeHLHjq8MJVFGVhc4xtCH1SAWtOSZXA1Thj10PM6o4mQ90pip4/qF7wtq
AdndKHPWlKu3xrbvliwDaHOI1SDzv5NZzwyt16YAWRrqhADTfh292otZjHc3
ASbPInFjIMMuQNEcIp1J8F1VyC3QBTA69RWL01NRvFjyPZxaIvze9ntATK7Y
A1s88uFthcyOFq4rrZVDgJKKR1LoEQBqjClFsam+NxkKkMtR1aIWx68kBOTh
/Uvvv+W97RgxmUeGt1aPoO2YVhqKEFZiOG9E6zgib7xwvP9xFNAcWHE1YxOA
mnojKCNZDhTAobvCyezD+1U9pBBALRgUyyEDNfTT9hmOrmqYNK6CR0wxtgll
u2Ea7PnV8YHF6fevlXgzqfqzui5tx8q9f+nOd50XV9nJrHQR91KdYbchi9La
w1UpikQr+poTyRhS7BGLcJZnX2MF2kogy5usx/DZfasOmUpSnP51Szsqno1V
MoTmpfJ0nNqz0/m1Uvf/O7nW04S9Qk4z7chbi20a7q1JThCo1zE6C8L6Esue
nZ3q83hpT+XWDGSrVRUnUuN95+yBlWrrOPvCyWxznAXX6rGAyYemSjcSH3ha
nFWz9Ng04EehyKGCbS2pNga7zfXsZCgVRN1gikNWHBQge/Pc72jCL6SVR5hJ
MsAtzXywqXngk3CTSdthWnk6+2kM2DMsM/ZTrG9Yu4fpQqsOgFL4zqGBMDfb
bixMq4SuRl4Gh831ZGUiWzHACqo6kzWL8UAXzfOGVHXXo763Kwec7PF7uKcq
/niuzaNKvwOu+3AdcOnhjaETy2P/A5Iro71ajLMNy7vvhxo9Hohbu08Gfhqv
yUOk0Delr+XhT5fmN/dTZzEXKzxla05mvXZqfXUezjSjsujto+owuwJtzbRl
4WeGs7zRVHZnfbp+KSjTn8/8zLE0gRRTKOhpCNv9UuXMV4W5NT4bnaBNnimW
MaMCbYcBLjAHn23+dEOKM2HGdFJi9Tx6cs7KO8zI5wbP9Xa3u7WTORBUMl9h
qKLOe08vLVx4maMz7a/O93v/VRcewijIC/FU1+0Q4VgwysJUT4bb6o8RAxA9
/Akyy1lbtuzCjJUJOEhmK+mt7kFQ8jILlOkkH9Ixd84K69lAEM/SokbZNob8
vfhsDWdDq5w6xlnoagqj5UQWmXVZDL+XRGmFs3p1fJeepK/KGuKsh2QzYoqy
djLLGYlKQwB9wLd7//DTB8XdqFKeCDUYzSWonvva47VeVnQ3z/7n5qHFky3L
jtW3TP7skTir5Nn3O89LpPH67ATXcWy5+px6UPycncTPNbBbv1mLIPurxFnZ
aRvmxkqmWEDzzDjLTno7T3tCpWzITFNx+LEHA2R6shcUID17ZT9IQoGqlfPf
+GT5LNsz1Zt23PuveqyUWwt301rt7NNdioDIYe5Uk9U96JxVgk/GaPxUTRFQ
DaNbVf7ml6G6n+R571VycfhTNViQVJGBqyC+6YNDf4SzPLCOsHqNTd8S05AM
cpzzK7QCYuKgLxvtwfaMDBQNkstomzDIwF/GoVNArZKDuAq+5zNTNbtxOVQu
rj/32f43YqOx7POx0Zj3jMbek7vANFfBw59kc9CxZAGIPbOucBjDt5rFqTZi
1rG0yPR8t4d6QmzNIh0io+pvGL6SidVZG7NlaiK7AltcDvVb4WUmk6vkjtO1
pGD3QWfMfZrwgUhuiRhzQbrmEVBmMV6Ycc+sGY3H25mo5Wxl9oZIeqQxzwI4
5Xhki4QQq8aVkrF39OKrHq5MNy7NV5j5azsf+IG7pzmEpn12IkOoUNu85HNj
HEJhRXyonYtcP158T3x2Nfd3AlM6oNI8MZkVunkMla1nRsxBrHI5jjh7qbC/
NC4UBCX/ckxmM22lMm44GxkZlNuri8hoSBPSpUWi2yCpeedhUQnQ7xyI9Xpw
a37/4Dq2Ycgxl8BB1pOVBO4zvuzkrph+bz9VPPZsJovQHuj89N92YRyPK4Og
7XzfEQ7ZFtWMGzYgteEOG1YNcJGK3uml0eHeL4JCo3nYH1eeX3eRnd9/kIwq
mJvdpuUs2hebNtscZ/eCJOBhxVJ1WYWzMdg9FcjKJ/vLUF6HJajbkGOoTabf
tEKQt4a6PUBGufclJv9HhVcs2b/7Hz1PZzmt+yNo4+jgEUTJA2Ma6slzahn9
q7j/z+CbjvvfcHrfLBdkTr99a9OIbci4icOfnEHTf5otNkKocIIagczyKmwV
2gp2Y+P/3kFxy0xz10D8oTs3r+UvN05+uTMpT24cNMX7rSvfv3/TnL9xHFT9
Bd2PlJM90hjEtLRZ1y9q+63ernOKTJYCiVuM9XTPbA7RbaVBeZhxEzKbrt+y
nnTGR/VexY5LY22Os8xsDe8HNWDFyaxTLf0LQfNuaNaV5+5xuU9qwx+1fy9/
9QycDjyNg1gaYO7p3yq2/3l3X1dzzywjY+FPkcoibBSYgFW5E5AJOdfztlvU
+/u6HFVBQ4/RVWSOLwmUzmMMK9351rmviaW6pjE/vzYx4AUI+DmfWJGjoAbs
H3KTa2UCL3tSesOSbhbfY6y0mLHI4ZBrbGmzs4MSGxGQefyzREK8Np+QToIV
FlgV1lGAspYWZswfOtMEcQYWp02tIl3qcFEcJbX2cCiXG9SfJiez+wmMrntP
WFroZtDkFuMyrzHIwkPdRC+Q5exAc25jHY6ju9GYN7J36WQVv8310sXdu7cs
D1r1wjf6h5ud8nPi7MlDKG3DMCrH2Y9uVPMj3Wlm2czC9VEg8hm8tCDsiX/9
6OWTH/7Pjml26zjL+3qcbXGfv0qcVYpNc6CU3fgZCB3zp4OsTPSxDXlv7zMr
HJMGzMQVgvzQDVMdgdGFSyfk/a+c+X2mtY6RyZ7B/jhWajnfriCZ0mRHogt0
6dXKQgM/qQ7E0UHbWmaNrSqNOSrEN2M0bgJemZYh494s4DAQfKaOzc0ZK3Yz
/koc/rRp0RFJRISq/Gg8zQpdLkjBWMDKG6X2yEUbH64hF8vgbEzhHQEtqHvB
dPOaJHNJzUlrA2EuxJbrwrXw5VO9q32/kXLyvrmiagV6LG02RIhpEeIaUFMb
5o1dqeYhv1bGqFIMVyfrma0ns9zkDVUWt++VfLrg/VLPDz0Iimn/sBNfW8lP
Toy5My44QYqan5lPct2vufFTH2rmp4e6M68Wz0OmfMFggb4XX2UurY9mickv
2AcWdA5kZwYguK+wEldy3+79Uwg1gwCweoAuM7OXLuLei1FVqT1eQ8dZHmAN
mb26ulmePO2Gbkgxp+MhSSKArtnIzRzrN+qP2dXVnwBuxT7x+otP70G0Q6VO
k1VM3DpjbXE4EHikrFvNHo53wlmZrOU85YoAUpKX/CJEpo0VuupBwev1gLN0
xg0Lcxe/3zd4WoD+RaqksZsWy4vjoGJi6zjrbzwo2oLqb+Qh6ZwC65DClKW2
KSpMzUPp0vMthQLca3tJsZU1X+2wKovxfTcofngG94PJf9we/N5273duDP7P
TOmcpw1bOrI19NI2x9nu6xZDNXy5Q70Nzut1h9rWARd4Fcj+Y9+8g+x+o8p6
LRqN2eyfe6e+DJzNCEHsB7ZlEQuHT8Va0QlrnhZngQMryRFEgfSYJJXiS1di
LYuQdGBzstVUPQhJDWfpvVR610OhoKttg5azY1FP/W942o4SPPUv81sxZ1m6
0ptqeKYZy7lgrt5orJoyrYyAPMsNR0aaxsptB+lul84qs0bhT6bJnw4F1wjQ
cd4neJX6hEcUi9LqkyN1NRvirFZTDFGMgCoG1LDonkZMi7R64QtJXsBkTWO5
7grWxwNzsjHK5AaTUryMEtTYhRbhsx9Vh8HZykYeMptaWmyO8jDjejKrWNbD
lkZ3Hy6xTwYhVjOG1d7dLKg8SuaHmuUSi+vIELNozIP4g1bLYqx/ORExX6WF
zvS/zlTvs31pcyoONu4YKTD5A3AHMDdjXg4BVIULL4O5gCx4Aci6F5jJmaP7
I8BZKKiJZYNWm6Btb3e7qBCvICxcknFOPLNDPT69c5pvXy4Ac170hwMJsoEz
e5xTDitkUcUffQLndSAQ6LBn1tieMMtof5GW92Wfc/kudU9k1rKQQlyW5/by
Zie9CfdS/Qd3nir3di9UEBNWWsrVSoPSqDGfza8NOmdkdQH/FVXndNhPnDkr
VPUQ4hhqFYzkAcZ6tL9IXckhWXiV1Rd7dhCPlyhOZgFZ1jA17cpy4pytnDoW
m4s5ymZlxh3rlnt14RuPFt7jqo0PvXVY4fXmmPhUrT675zDsdqjlTddAv4oO
fFxOnNdPHlcWq0ZLWwyLEnq6HhQ/V/4sV+eZcfYF1g6IWyZZVVq7TahZGlG/
Krtx6xO4ZXMMWtFYKfdKIR+Q9UvD9OWV3LUBh5gLjvK4ew2jQz1s2EKhwq1Y
av/uv3QN56atcg2H9trxzDNiuLwBi2WAdenCwzrPNvLqyuaceJBTmy3Y1ErC
rJol6ZSy3klFCDuOAGEAR2yDhczGtDouPcAQSUHRmay0i5kW2JXQtnWurTWP
4kWVD+X+zTiKmEGw7OPcCLgZrzcYJRUg2NmYB1W3DxYHEdqqEl8cJeWaxlwa
t+HDgmOtRc5L8h3cNh4BRWNhLITilZ6k4iEWH+Ky81C5zGkG23WDWCxvChx1
sSBA1tYA69OOhnFUuZcNVcUZmWuEWfJLWlHXEcM1YTETrJySsouaSNRmLSan
SUYPmMvkD6QeaVtWupD+VS0DiHnCqUNlJaXCJfIUPW9L8EHkQsIUdJLeAqmQ
cSezJ0MAsyfybPf+Idt7nC3zm4cr81vZnzX/a2R0CI0VG1geX5ow+3jmR0C/
W5X51XRqifLsURir79/uzMKVzCXbT7L+zTuvCLfdqFAdv/XMuyY46+T9o/bv
wX995WASrwsz/iilNLOW0aNnUwjr0ch6zQ2eE17HK42GfyKz3DmWQrhZiA3L
nqfMhfBbdC8tXOu5Woaz7xy7efY/89p9sa05yKo9p8JwvVpFK4Xw5ldWYxOK
xrNhCFMraHsyZNrq6oO2UOZnwNkvIwJKjbmLiVrlqHaPklKPXXutiBt7k0KF
a9vyhhG+szUHZZB6Uq3U8nRPyDvYZRsO8ejBffVtv1FAlDdnQx42U3nnmFXe
2SiOF6+oUi3Ti2cALacKxg6y8sbKIVu/QpCYoVpcz303LQg72YLKokNkHGWk
xgpEXF7TERvE4U8uZewY53HgWyHG1UF2dKhXXlpV55EYFK3FNYASeayWfVoq
Yj8qh1RfWIGeqFqfyuPKrC3DvuzttJVi+2yPabkrPqpSOOM1Czgv7ccBUaDD
9pDoTAQUZFDjw7IwLoRX2Mi79a+8NaXlH3OyucaCHC5Yxizkd9F+qrJ45Jh4
mLEF5wyb4Xd1vnajQnhlwYDKmSTvJ48V7XNtYiC2aj64teR4wYpFcaQAjbgM
fROddJzNr44fqe8koUWoKwQ2y3Mbwa4nDYGnLBXurI3XEt9GkmqzQgGrhReE
KYSJ0rZyfsdm7+ZX40Qe4AMs8EAdli5u/BSmeJWfsMB+IgBlWBxPVZdH6k8q
7+v6WhkyywWt3kiM8653EYf7unu0EuIDZXFVAq86w5NyNM6uGr5X0xzhqzcu
ORbwc45OU35N7JONM3rq6e3Pb38UTrmmq69xtvTkgU7ecC50+IsoAkrnlcHZ
0ni7O2f9EJ7ipOHlQFyU5AJd+Ebf4Okm5/sCoTYWOm6xBgGslmdZvgmI7VSu
dy9V8HiqzjiGSuJ4L0gcPAPOfhkyUDHOmthdqA3aMEDlsNY6zs4VhmQRNfdr
MAoBKwIOmVsXb48PLl19b2I5v2ZBgGPz3cqPkBGVmTPMV8Wg9N4gTtXryBQs
jOSbPr20DZpWEpBhxs85m15ibWSpPYibO4wK9DNRQECGcAey5hFQ7NO1Frfv
lurLyzYeitkJBjkzwzM+Epzc2/tMtZPYIWRQePTJ1e8xvfMrH+rYcs5aRQjr
ShTwPlsMBOR1nG1lAcAQ1Rd2D6hU1rjxepj+hsUsrYznpwxw2Yl47l5UIK9Y
trsFyC6v5DM1Cz5ZPlvLrvL5v/d45fw3YhspoBxmIZMWqSezcmtubs64Fmgi
1z/y1sP71ZhaKtfjMJVFb7en3qipGQ/8IPE4rI6peJBwlkm7eHPMvW8hASpr
1XS1JXoCreYara3kTRg512vlq0oDrARca3HSZKBuNH9g6wWNwT4wF/KV0NjD
AZf2ePE905G4+KrCjBNnypgl+DC8UCGRWRdY8ElbYcZGqdJDKMvVp3rOy43n
mT8GP44FYmPR0t1bk0qYpZkdO6R+q7K8pQWpaEXkmXULMMOoLB6F43rK6m5I
oVV4m/5VbKH6wJg3xxpwlhbjrFGzKAbbyu1VZji00Havpqa4HvtkPcuGs1AA
cExjOQXLXN4pyQJgxXbTokWKgFL4027IwD0QKJUqQYGz8kcraZc73FUlLZx7
plubbXZ+58ggqNYZaPPmXtoWQVaw+Mmj9doy5nJHiGdbZ/ptGK588pA6d3Es
8bWPN3fuLkDfDsPiJu21c/1fHp/lnlQAEq9MyPe3FlrE2UwRAVDs2qVXmVK4
yjGO3K3MgCNeQaC301yHDXcITgG1AC4Xa2i8i+nUlW9htTz7l/u66jkIM7yj
59Xc27Nnv+eWRqasUJV1GbjhFnWdRrXZ/jdi9ATamKjfv26rsoyndS+IPKse
fc1ofFCusBUBKEUIZ07BCOlAl8YHNqrBscrmqcUVfNmafp0FhkAwExjmsors
REoU3itVdZe79si+KSjoMIrnlXoy2sW1n4cYJIaOYbT6tlFtPnFPrcqSpJ7e
4+53fpxUmf++Fj+slCz9NqhVWxJ0QNubQXL2UeEV3UKguUD2zFSNzIrPxjnd
Sgtln0x0Tq/M61ewKbp5MfdHH4/V3LLDf+Le/O2NvMkmBO65fc9Yc67Yo2lc
COLVZxjMwlSPFjDce1IbUykcP4rstzTH2VYKuzepgsfn0DETm0ozQOvRVrX8
TNM41H0AbTVQyp3Jdb9GJzkjE6EN9NzJLDgeFyPY6X8pjkGCycYuaYVFmQc2
ZOC6ixbEsdieEP7EsVT5DpAFICRkochkVgJi+qWpWtUAZ6ZaD4CwyplV7QBF
5CZMNoQfCwE9vhpknJ5vFhHE4L9/rZTBWZhRKEN/Xdd0zUqbGZ7q0HRYaBun
87h/Vg5rHV32Dbm8NT7gtR4QKUGJ1nHispBzIvUCyFwp71icNsuuagHV3WeY
iutxdurGKLNKdbtBGo63VrQpjsTZ1qnoYMlGbOH6qIbXcqVX8irULpdxvCuQ
9B/75l8++SGtCc4WbtgJqvjsM+Dsl4GwY8vVzZ2qkym5RJmTW4TauIiAQNap
IhNLGiCXUKG9J3cFl8xFHPGw+ZyVDEg3XrzCorq0Oh0XLQVwuatj65+aew/l
2nM+W2r/LkxKRBVC6kjhBVOkX6GZEHQwk92NK7TD9P9VpN7xQoX8BL6tDJdy
fjOxQ8pvksPaKoGmjvLl6286BnkFNwVQxYFhjKTX4hGrjdmokFce2yO7x56b
LBVcZx5m3XADWcKBWnZiyadBB5Lx2d7eUl28uIYg3352r+i1h1yCgxWFfLJW
CaK3pi4FCt8aO757Z1I+jsv5yUxGjxpY7/FpdzcLnhYqn4UTCoXfiAs0PJfH
5b5Y/BbOpaBlbhgPpuJ8w6KrPFbo8jQZjiIzKbOleUnulfajCD2L6R3o1A/j
W5d7Mn81mQyP1FrkrJtoQIGzE0uLcp4atw1lCw4A7qmvCKeA1I2Zrjvr09vF
syw8zPeXO63FAI1/Qb1gd0rI7OapX+ufuAqvr6aJPFZTJqwZdoMusbN4fmiW
52ADBIzYldsG5RORhdl0zkOMMW3vbsmRiL6xGRCTBG6FEquMsOUIpHin6jxe
SsBiswOxpT9WSuNgdrMpQKaiwVdvXGqCMoAsDbSNcZb92G5DvLRSloSkqnLL
QYW2yqXVTSVObSu61LErjLZwlMIV2b215FMsE79yxcU7tzZF3tlhfUEf79jc
xe/HsM6kKpqvm5A+1NuNeSgA2eLNsY0b+bm18YbBUc8ZeAyUt54iBPFM58C1
4f7OdHiNozGB8JgoogkshmMqrph24l8/aoiYSUBUvgLCAiKjixtPi7P89svA
WVU3UDNzSsiYkOkSytkwlLQhzu6HxNXYHqupw0wcCwP+Of+6JMVCyTSND0Nz
BtmiCktXHGelE+X2bTl2tXGsmjhZMnuUa/QBLjIaa8knSiIs9qQeunf/5nWA
1b02R4YzxYXw1DiRVozn9Vkke6Goh3zWt2/VChTaox2R2fsPazonsnJrG66a
QBbmaBUHRnrAIM7aB0d+Wy8+26RJVKrJmsER4TA+65qiMqiqTAODIykJW/DE
tXrTdcLjtUteTlfnu3M5lBpJg8bLvS8lxDYUhmBBwgm+f+2GcJY7pLKRd7tx
eWtK+xeFTAwXQeaLeduZhUxz8pzWn0gcYGxktnh2P/X+A5SZPGvO2qc4gMZj
SiXYq22YkF09mBvA66I+uDXvFecnV7vlmT3ysYXMNqmCB87OLSy5ymJMY2+d
+23wd7v3D20yX5+uTL8Hzv7i03t8uPXub9yeeGUu30U/6ZIVeJ3qYAOYbC3y
9sLLLFfqLcZ7oTidYqjE1ORzBGge3q9KzCGOdREIgpIc0VUW+VdQ6MG3xvRH
auk8Elp0o7T246G2fMtRZEaGE7kck25mmZolfnWk0Ric5U0GZ+NIKgV9eaKu
vhWJVj855YyhWByTRYJuCRVScUqrnbjKIhuzpQWENyqc5wFavPHTd3VHVjiq
48xOLHM2PEGx/pVYrRVCHB4aHrOnBtgFlRzXntNFe2ZqvUXj8/vXqoJR3ULx
8LopnhGYXjNKK4SFzDaJBHYY3bg7y54zmUENrc2Z9s+9U19GRo/j7Nb065q0
uVWEZTBHxa8eNi2nOeCWQHq3MhNrQcRhvR50ZJxivl/BDzpEE2IrHQMz1wSc
5RCQPkXPsgbwtBcYnMvhWoDKlCWAg6pJ3Ps7xyA7ihDej2i1zMXcWnGfpSY0
mZZIaIJHOuvySg1kM+XdD2vgMriTOVnGXAOi0Gs/dJwRI8ad+aHFg4U6d8rf
URUeR0yQSLlavNlYmJZJuUnfFLbEflyA6zCczcj7x/2xogzLM5xjbnpIRbdZ
WoOni1WT91dVoIz8iC8qyuOvPCq8Iqg1E/Gpr4C2N9PyZDfP/Q4kl8mfNVU1
ZFZ6sDF3iJW2T3FWRmO7YdIbI0ZGi30a6vHK7My95h7NFGa6NRlXI+W9eqhA
Jl7rx8eNpfIqfpGq4NaweLOgByHX/Zrng7hmr6kdDv20dYNbcw0oG5OFeUk7
xkZjuC3MVIgDV5Lb+vMn92DuD2fe2Lu/st37p6DzxpUfwVI3SwOA742L314d
fm2p54fgdeXUMXbrtQ+2c6aLKNusYtrdJ8sIA7uqy6BZguvF8oaRkfCgOcdT
kFUbvfgqwxW0uE9LpJG9CWcNa7ZNcoTOa4JK7PMDnW6OkGQEcCOw48aLB5+r
72V6mitUTKZBUBmc1X7os0QVOFkWSB5U7M5ZUWkgMhQ6XHU/BUdXmrCDsuf4
KC4rfWxLou1yIit7qB5nobHq2MLlVxRwpQWkMB36vLaSN19Gz9vbvUmZwkz+
7GjhysjI8J2by7x+8qhWQghsOrIszgts4KwfWuuum1sKlh7aqZbcHMGE3mKv
XBJKQTJ1z8XRYlBfUgQUD/Vi1YjSgw++vXtn0vSRJgeZvR1qgy5TYkE1p2Qk
bRfntsSAJc8g0OAIG5eZC8u2IZdikNCihaZUFw8gyMiQEEf1dJg2FfajxFuv
nceU7rKKQKc6BlFN4wS+aWRWCvlBV5A+eIFUFgNTqz0+0c0O/HQyGJSOTICN
jcbejsxsqlewVESHm+vBQTcg7N0vx2HG8cj4G8ZQ1mCGxVE1PpyKCLhIBe+b
dE/iWs3Pxe3Gwv240XMFG0uxWYZ6/xYyDiyqOc5mliWSmuQmfPjhtwSvQltr
7xzjPVAL8+WetJDmckEcWXbjlWq+3mhck7yIAqTlQ2SKdkLBfM6/nhuysThZ
Gm+vgWzuuOrf/fz2RzJB8+q7Ym73zotKxPXK47OTn3E5LWGgc3e6zU14tXhe
k/yRz+yRJd2D6FapJp6cvgIcbrxdmR3UkskKCU29Ac8FalVLqBqqtPOvQfOZ
r3okA2hbq3zXdgyqC5hq3RJnyzKYzPNwOkkdynzqVFfJpyCmF2UAZOlGWOqs
i7HKpcvl46DKgdLShZ0DQG4aBZHZG6CmowhqJdIIyoDybCMUdnssV2e62EBo
cTKEz7ndWG9inPVgKp0pe+O4nrkjzyxLKe4iOh8binmvuDsBolub94KYlQfO
sTe7MwOZlU88kdIqXIkzZ9VMq0pOsXBjy1YgV4Wc6eqtFRu99rPkep37WleH
1d3IlwfA1lAXxqq+xjgbFn7rYB+gAFQ9Z/WcVtro4kaMs1sbs1oAVytlbtS4
HAA4S39aWYICtWzJHE7LbN9KSuyXJE9xMk3sDVEo35HzkRn7oM5Yr+bwew+X
dAd6ObZQs6mkJyIs9f9he71mFK2WuFf/gVae6vjsyUHd7CD46aH7RmwHuuYL
V7RZYSrnfIdHxt15jiD8Vj6avU93V3JtYaZ69dF28pO5C8l6r9BxfKcy702T
G71yIzPvqys5/5d5r3znQIxxw5YajYvarfPlJo3zyrhldx+vcxZra8sagTs3
N/s633Vs2oy8llvTP6kB1oPaDvu622l0g9eG8eFsY5mz7UHcuD2pNntYY0Jg
Vw+3SpwRrw23YazqFf65B1SSL42NTIY6DbbcirNcDQJSZWPzz0Z3RX9XYjUy
PnvudxKQTbnYTtcf8C9LDrGS4f4Lvtv88pIQltdbW0mkMX3glgiX9Y07q7n9
T6tqe7uVIMO1wrVgwBXNHhZs+dHBCzubZkl+PP+TRMp++gejfW1P7Cyqm8Uk
raloMh3J3jZ2Zu+ZqbzKpTT7zMNk6TjUfyHM8FVva0GJgs6Upi48um+TMz+8
duk19fBq6bz638oD+2bv5JtXFpribIVBrtbh7Nh0F6cMZtHDVGv0VT5hEfv5
k7u3Lv351unfAEDvdP/R44X3brZ/Tb9a6TnuUGtlnc/8vhWsn/o7fshwMWil
uYI8TaBGWmxxjQ9nZyYZOtr4SA80UCtqgIOfxFHcq2N/v3B9LGy5zsg8CcgV
tCneoPEV18jo7ae7v4z+QunqJ9KxUVSbKefP5jkul/iJccwKX42NmMYj0O9q
4Rr5epzduJFP+WxSsTR/8YQv1x+aM4XdrutCc3Qu8d6TdZgyiw3OiNFQ6WRZ
29y3xbf8UF0Kd4JSfip2R5ULdC9dY3f6+pN/9/c/59TYA6djRuCxXobam2e6
lcbPcydzaPEOmabvbpf2DMcrfMVjUk2lRWaG2sZmuj78wMpYW+kQc6VVhoaG
eKXthSeR18vFzY6ZpAmnntOM3KRxLI6oo6tpsa1qMt4lVumgf0eLOBtIKxtf
3/yAKeKpcNZWsEOthkk/W4szNLkKFiOXznuyk8ynC/7PnqSllx6vW1JbAFke
W/CUeVi4cwCV7kwdBl7skztBJRvCavM6B+U2iMsDCcpV5Tn+LQseFmwAJSBe
me3KDbZ7D72eyHj3a0y8MdRqA5iszzNgSjnNqJVDObMkyDQ3Gm9VEpxle41J
k19xUjEUsszgTDMlS8yo1XWG3T5Zfi8ms3F/YlUx9mlQ2/ku+NgE30FYtViH
pL6pDC7XNB6oTGMlI/DilT1zRWZmpuL1Ax/Go612ab5Sj7Nzi0v8luY796Xd
cp/VALp19jeBWitbEygtOMto3Ln4VW1jdUUHugSy+dX89Ma4oJah0NXhzkyd
769qWlMLCUF5vWfqc5jQNMVgAjFCWNrc8DvB/Ggbp8HGbwC4zLf3LJCpwhH1
hgdEM79iocO0X42b/3ynkmf7rbtzwaydDOYTW7q3Wn/zjfePNm1NLC7Xitu6
D2XlsmCCfgrioWz6RBjE+d48+7sA9O7GlYczr/vPN0//9lL/KzW07TnONuNd
r42bNSYPKNCscjrImwrsgyDcHrQQSG8w94tPfw5yfXjp3P3r/yQaG4MsWwpn
TV7g0TpjomVJcjUXLIxZAWaCIYcz/THiHH1o6EqIRKqosTf+5XOhPNtwLF33
eqhdDXKXgKzjbKHzr30EVnNt4S4ynBXi93VZvWy4PFOTr6/09+Dndy0GbKw3
nMuG434A2are6J5kG/mMQuBTsv70vbEfvTFF6MIVgaxVbXgnEScpTfbYmKeq
erxfW7Flhi0AworFSh7kktVCZehHTBcyNEEVTfvuyabjrJ5BPlmqVmkgFKAm
XOv4MoltdacqhNXReR6V9gIuGNEOKExnWgTZGE8/2lgob0/FnT/aaPz+yJck
A5XBWaMSc2cFtTcWJ7lw3FS0YNzI8S8IyNxoGiz57um+N1XUm1eeC3PtpVOr
Q63fz4dBLVvGxDbYnbq4/RxcEsq8UsrkpYIImqZWRt/yHAquDvzXYz+ujHcr
qMnRVoSRnasojEPGcr7doXZm4C12fpjttGY0jnZo60P+bVSGYL9O3G8r1L2S
yYiem4ps/wWdgsUwdJ1xAahH4y8t9Z+IEXz3oHw9y6EgxZBUuGuwKni8zlUD
YcHZ/r7Ow5YQ0s1gV8mJVA41Hack8XWukflzI4h3MtscZ8spzvI5GO0ZLr6u
s9us3FPo+msnswCucNbGZPJlbcYKZHzgx+Ds4u1x7g3FsJXKBZkadH25mmsW
p111YGX+ZwqKEdAY1lDi9P/0QSmKfTo3O5nAZch+TTBxe30aGsuHYKXegAvM
hJoelfscIzsNbDUmO/RTuHBYk1RtSZASZO43PmHCaXEOgc8euVlf4SDOnvoK
kzMoo0UFQ6RDj1581ZmmBBOATlYaNRWpCKnZocd+04wvd3xdg/lJ+VKx/bvw
PqiW3ui9GpBty5h2C2yDNVvBo/bfeTj839a7X5q78H1D8A/fhpqBGquzA7wW
LbrjDaCNoVYpau5zHiIwWoNMVyHOBqz9Fzw2kq/4l6vp6MZDwb86ZS2ihD5G
mQOgy4agFZreu9GYNnvuL53PMrnBExlAjius53D7IdlQfyA/nzNJStSa22zP
ArGCCQV2KeWKRL+iIigU4IIs9FPVtzkXKQwoDlkEWesKNrM+VGYsDi29Lr6E
SKRrZ/OmepeeI+3O1hw0Ngla6/y/bZGwu+7kUXw2ZpRAm2BX6CZoq1fjf4Et
prS8rhRNv0X2pY3FSZHZZwB6mCmdZ04obIw5QB+Joa+dvfylgiztwQf/XfPY
zz/81p218eB7LUPBmP0EAfI1CMggC9cuvRpkdtogg8Xc+W1zIhyYXRPb8uN1
D+K9Vyd/5G0+KMFmiK1YlStCsJ/4J64dBI92mFYmhU8OMB2PHy5vTTv9jKmZ
S+nGrJavxM0zwMS/GaOxNBgFsnpgOeXMT2I0YUuvr21BOOE0aVqXmiX8/irw
6mQ2NqF7i1mts0i6VA+j9I1FLBfOrMf9F4DahgDK5M+B4sunbOL6Ld1Fy0Vv
eDgt0uJdra0tc6tncBZWy/vxmTm3XYjPhvC2C0u3J0qTF+N5/uHwf43Tfz65
+j2pW5Qvv7Q59JLFjK1dXqnmk6tTLjgsxvZbaFGouVDNtGplhvFnXoLDJjg7
/xNm9Zp9eKZLNxvwLQ4LwvLGUdgFWKy+VfnAIZhO1RkLCZi6YPz3ieUG+koA
wG2dzB5pNHacraaiiBpA8I65mlsOlgSo6SJODbdrbSAyqFgaPnk49XcNqs+H
N4Cjfgvsgsic+53xV+KQ5vp2a/BlCLLgHoQ1xQ/WTrJLB6INX44B3WKuzvw+
+we+H24VgTAmBKGqyDhgp+ea+4T1nsJ642APLugTcztWvL4kv7UEpdyIicvd
DzbqQJwdajPOWdt5mhsI7oOwdIBbSyYL/2M8wXE6wIGuT/SH4xqJBme3Ep9s
JeWw1fTf2quTCOCSPXNphN08sOCpzPLra8scZSdI5zHNsirziyLEV4Axh5NP
xAxiAWT595Ng6Nao3jz7X5wkOqqOjQyJSFrbXXec5V8Wfp0fVZ6KSD5DA/ug
z96lnZ0FODgnxfmG+sUVgPiZ90z/ry4vO0w3x9m3h0qvt2Apes62HFWEYfri
gibqgiYolEiJCgFzg+2aN5YTMbSaBbWez4rmWP2Uo1SS+AmgkyG2EDG308aM
mO4pnMl8rCs5sz8PdCXBEsvvqc77WtvvTa0Pxg+RQy3nZYiZ6gN4VA9vPP+X
c+RfIakDisn2RmT24VZJGMeb+FjxigL679XMLTUgXbfcubnJe8cyA8RgPXhY
OMEpsFuI21jPW16WvQnOphkiy+K2IHVtoIKPRnxWtmueu/rB57nm28wV1N72
U0pOs9NPffHlqQZZQqwxZApoQmndDxUqs1cAJuljS+JPgorsJF63Sx5/59I3
MyLJmcb6hEGrzp5Z6j/hfgF3zjK7MvulbrIDjckSVHWQfTL3t8x78j+Kj7ir
F8IlnOUq+654RphsuayiFZmdA6P8UEZa0FnosLY9pehlGY1bJLO0H7f3t2La
Om9spAZesEhopkzEzOTjXYlfWPBkvumgsqi0PmOCUbItOHjt0msHYPf0b4O2
4PgvPv052xuGNsXZu2PHaezh5tnfvdP9R4yzduv79/cx2sb/6ofgNchemT4/
fOH/G5vu0iVg9NZWLG3NsxgUizU7eeXRTknQDH7B05+E1BvuAS6WoXBQYYpZ
7cDiVH7lsj/FrEy0BrAivKnFQ7imYQTu2e3a8ngIharEkKp4EoFd/JUQ9kla
fqWm2bJwneWELxWMudO3wEyBWh2RywSUO/qzFrKL9emuIalFkVV1giyYHcGB
UZbZSXbP6d9iD/e2FhxVeejGcyN6LzoZJpOEzwJwIGyIgvhyTakcxQk1HeC5
0zjwhktzqbgkC3bsMm4RZ2G1ctd6O2xjtvzyIqDiZgkRUeyNoDYElpchSkCt
k03+dc/XmorPHg6yrTfxPubYmNiyc8DI+aymfbcYy53qPJEtmaWZjY0Sfjxa
PPfd+mgHh1oai4T6qJ6gynhAaiOGOXf/1aJ9gkOTVcTi7XEtJ7yf+yFiitve
f24O5RDtL96dYb7lq+9q8A0r7xUfV/qZMUzI/aC3NOML9mWAepIZfAsDHupV
NJQcxPUklE8sD2K9mLmIsUMczKWxpJm79M+HhRwniPxwCWqfuSW4TxriLI2h
4Lq74hyTjOVq3bOAw3i+hT7nV/tgrxlim8HZ+P3t3HHN8GarXHiP2ZUJuR5k
n4S8SLll1QQfinWhYzUDb++rPPigZLqUSvbA7CfzXZrLc2D/MUY/CSo3W3fn
7t2ekYeUb9mmxdmDiQKcbWVLcNYClhyqOr4+evFVxlz6pYL41Vyb+/VAHw+R
EibWRr79u+XJd/wTi5U69RVeASA46cOZ10FA4ZGMxpxXrv9dmPJU35urhW4G
c+fmCkcHHOX1Zhkz2PkWnBpqZpV2+18x63GwMxvgBnfwYZBt7uMUndmeX/Fb
lg3cPAAr18t9mpysYpN4b4VILM9XGLfOI6mwPS49RJW7ot5oDOAmtTXfOcbO
tU+mF57Hi+d+pqNYYtHDkoiz7MDskJO1afP+hhaQGZDdSaM640bf3B6i3bLo
dddDeIR79JXZ2dIL8fmTu4oX4pbT0c0lfW9taOgKJ8gF5bx2bppXbuv0b4YL
95uhCG/RyWMskA6pBFg9KUCwCx/8UsmsN44Y7Op23OmpPj1N0+OD1cosHfO4
LLUXfnQeK0D2y15OOM5CGGvFxFOolf2QqRKoVUQ9H66MJqITMejQzDx7Z4pp
llmoeTRRfXMBh3qPrdZ+c2vmhgNDeTydcsZQdWNxEujc7Pj647XLvBY6jjcM
4F+p5tVbOZeXD5Y63U9Nyp4SMtv/hkcyx0Zj+llvVa7HL48RqlXF+nQ3ZrJq
T25OxG5ZWK0WG9DeDCI7meVNhtgyOL6lorPoKuCueOPDwqWCNmAuY+zNkGhA
9kbpw+nuf/CR9zHJNDrArFXvpRWqcqdpDB15oXKWmNDXqdBrHvxc0bzquZmu
GqU6dczNBaDt7NW/B3BXRr6vV25a7lVGL4Oz4U1NawIKpnCjTIOSbBfPeYDx
9vzbHsAJZ+GSCZUAyutz78ND2Yncst58BV5PZmHTIrOMGL8Co2lOkMND9E7r
ZPbNKwutGI1P1tmNgUIns1NjvTo6DzKfMCHTxi1BxvyYn+0U48INNMBrXZXc
w+UQqvJQwLN01tA6ZXq665OLCLEy+0zggMAEcz7DKJC9PfWGEoLMSRr8pAyI
mKkpo87mYXaM2/KHb0NgOZxha3onOAQ7C7ZPglUczGVm4DQ9sI1lg/ybWmKp
b0xN3J8ciLOeL1vMieK4ugevxGQWvuxLFO2NnXDK9BZoFne23S6PO2MVhnLi
8lnLesw2pul0c0X6tBkOy91lw7u2rEMIvuk2vbKArtTDa1lOwQ3N1ZG6F2Oy
H0pWcYjZmUkaYw7C6mqyZ93qwJbjLKyWbSRfkxhpby7zSeyudSMtSAfA/WpA
lqMsVauOs5vlGS1sPl5bYqgV/9x6vPEztNfOXv7VgKzjLDdhDLU///BbYFZS
yCaF2vJUh9yyEmhynK0vgQEs2g7rLMbM/5kPLas6NxLjlHKLXBkG0AELckNv
+VR/7dKrXqLU2aIHSd6+9NLIxVfllo37o07CPemwdmVytevZMt/0xKU2EvPj
2njGaMyYHJb/Uk8290OcjyLKeGpYEmQOF1eOuzl3tlrqFz33OGQPshK8ZhA2
WSGktYS2LeyzHKTwrPSJ4o0bqnupzs4BR3NqEj9wgdanHRpYe2RGPtM02nGk
N4cWqvKkOM7KmAzK7JssXq/c0ywJtBCiYz7Vr7X9Xv16qXPWfs6rDsEyhpXA
1vRPGuIsHI3Xh8P/7dMHpRgH4ZWQtRocz/9Ec2ksPrYW/AucPhBpP4mYrHy7
3Jm/DCGjENsMznq4XWnqwt3tkmzOxQPh7sWrq60+pIBsKxMC24zOzifU79RX
oOoAlhDH5vbhdkE/cMDzpaAdoFCTPNO+QYzj2qlfKy0U3Zdqbzq+zmmCWX1d
7Y6zCYQFhihVMQ9AsmoFFuozszr295KksKDrmyseqyO0lcNUGUCq76P7hJlW
UU/8ZPfmJCcCsNKrhPy6/TmNqQZtWUho6nCGCJqA7LIV8yoGSj8H+v7Vo6R6
B87HdxcXzp3L4D4dgy8rokmqF3LOciwnnub5DYsH3lTWEyQNipEH4JVvaaYq
GbyxCq/VEuiXwVcuAm6pYfc3nAtbEu72FpcSqGWWo1dswOBY+LEpPBfZp86L
MwrVMQKDhh7CCpXa886xsVC9yIGVX1k1k/Rf+Wd/NdgagywACp+NY7G0Jvzs
03/jjYKNhbNfRkQWIPtl5/JkcDZMI8ZHYqil3c4dF33jurBiBGRp/OvPAt+C
0Q3JowNcPA9rYyBPfkxm+DhSKEYNqYMCsro5PdYRkAWJMttfvvimtOaqoaqL
ccl7cw/vbVV3VjkWZyfjJ8jL51PFXrd+H4YX5ZluBxeOKGc0TUFfraTNegvl
QnKKfcoNZj2km4Mv+2hXZ8+IeJrocerMlQEZdAaRGyKswFoIOzs5CFqBXLyB
J4Kwfd3tvNaHQ8NkLW4ntRiLYiuQKV7zxLb0JkzWm9yXDe3GwKJPOEqABW01
PmwTRHF7OU1Qnl553PjSmW/U31SKreLnCc4Gk/7c2jhs98bQ35iuQv+JW5f+
nHZv5LtBozh5vTP+itCWeRvkdZCFbVnNnUdJ8gVTqEUR31sDZ1cm2nM9b60t
j5vJN8JZNrMAqjBVsrH8uQ09s4CsrTnvzvmHvHLbn2w5P7HFSGPaz0YtfVWj
ByrRSQOLMI3T29X5QUXzfv7kLn0WyIpSWUmsoTNuMg0j/00z4KT/MpijfW3M
/6DexXM/E0CoULKTU2VOiScKuPkW2GUNY1LG0z8Y7HxLmTUQfAZEzQYnZAAB
skFFPxX1urfGsRTOxA4tFj2NgIKifnjp3LVLrxXbvxtjLr3lLuUrt/cCXjpN
Zf149JoMF+Adxx0r1PQrWBV4sDHQJidsElwUqLcZLvY/V4SzXA8isw6s9Jzp
UUqPHF3/8pNMGNUv07hlNmOB4S5aPlEEuGIAlJ0EerJcfDj1d3v3y+azC06Q
2CiteGY+5+qn96dh1s2z/0VLER52T5YRzpbmpms4Gz5fesqqry+qKfBYnmLP
7qHzMmh/SUbjX0HC7GE4Wz/z0yyfceKERx+Vr74rq6ZopnBHfqvDWhwaJNOi
5/soCKfhjM2cfz3fzwbApYzVQPx492vzhazkwpZJR/9Ej8b24EsmjrE8A7IA
svwWYFVgjzcWDKpxdpifEaCx5KbSh7Wgr1wSSiSQNQ540MHapDliGnE7iHdP
bk7EkhRat+grOZ3dW81QM6c1Mch/Fp4dUNWSm9Yte4j3HFE4m7FUs4GiEx0N
G+65upKLY8MOA1nZLmpLlDtTMc7Ol8uuKeE4y4IhwIetZq2i/YKFEkmvA6gt
TvZ6GEyh668zt9P0xrgDtw6hfZp5udyjS8Y9wEwlq6/4bJPGBkmy7ZOabXku
36XMIJMp2PuM+fZKvjPO2WFCltQA00Icnyym7FEE7IEJkwcEtFV/7N4bP/9U
T2iLkca0dyfXVmcH3GIMoICq0j0AF7jz+bcyfZ7ZG57IPeAptIw8IFszmZ78
T4UrbbYrhUV1fN2kPG6uyDLMr0SBQRDWJCKkoQSP8URZAzgig8b2YCs4K7ux
RSjd3wBbM9eUsWV7uwfSZFJZXD0dCbRim5ppt3AlWIODJsNmcan/lVjMGfC1
AlVR6o2EI+RAf2L1+woyRDAydJhxGJ8a5fTN68He0nAjTl8iGCKzgjNXzxDX
qIY6wvxL5+Mj1v+BpApRlsWY/tAYdgaWMQyR0qsxDQffVf8iUaKQCb3NUrQ8
qir2Dst8rVCorN341FemL73peErjWPLP+ocP79mi91cPsmqMoaCWs/Psns3y
jLtoXzjX/pWZi71dGe9mjopnzjtzb5rd+EDZsu9ovgXpmL1jdQUlzzZhtTGI
+8zM51NFK1R6WMqPplCm3PJUh5VTLPWL3FlsT5Rjux+MxrcvmRcJSrv36S7Y
pG1AHA4EtMUgG+d9QPoa5r0KSY0hhlh6L4o6N3wKRiDvZ33EV0OocjIb9Jwv
ZL51i/Gj8ZfcPuCYqDBs+S5d/aZhpJnio2CySU29ikWvMbYLc5aSAM5moqdG
R4ZU51cG3sYgW+o/ALKHJNVqicWrLzwA8RjBPd64FBnQbP87VU/56errkpvA
5u3xK6XJi9t9f/Zw5nUuKIipVGi1xdvj4LV+ZbUJUjJLY5KcyJ+VpWLu0j9b
VmZYTYFuytw8rK2O/b2d5odvzw2/U8PZ4Xf0c81+miFjrSemR2EN85ViPtU+
eVjyqu4hotiIHuNze3FEZHa2/43Oj57uGW8x0phtrq7mN4b+RqZU6JhinzRr
ASjWsQ/fBmqnhtuHhkydSekhFnMYtH8dYqCHpYXievdLtkpZeA8mpXOHWGmF
ZjF+wbkpf6KaeWZTk7JF8QXlCkBQIHv/+j8BcPKTZqYIdsJg0tyVqbhZy0cO
0hAc3V2ogCwrHC3gBTHsE0iKncvi8mCfoUmgiiyWrE5TWC143Jf5pheKfl40
i2eTI/jUVziXg2HD65w4ZDOmn4f9cThOx9J4gyaVe3XZP7fSk0SzseL757YZ
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
kgGH5sMKxSSytLixGO/vTtUqe62NPabnVuZvfU65ioAULRNpbEuC4U6Ye6H/
ZGbxI854KM6ypqrLalld53eO+SzNXe3ufbAIqCjDYqr9W5LRoJW2hnUJKk7k
HltmSFf3gok3uK2GdxKcVPeCW3a1EcjyL4/OVdWeuEHlXF4pNhoLZxej4j5q
n+6VY5uzzH3jqcbC4Th7BDLbUqiYPuHpF5ioNT/DMcEC59F8kEKCqKIIL5O2
S9zzYKx2vBzjrDtnb7V+DWLIJadAuaaMzoO0QI9AgeOYxOhAq9yyknqgD8p8
UcytTKBJusp9i/fIVOfxkgEis1Vd/TQyWaKOFhcXXJD8yaJRFedDwE9RbD0t
Or8mTQlFBZueZKoEpdgAIbIhZttJeshGPpsPt9SjPcFQ1SeysghVHew1lZ7n
A2c0jnD1JOR3+72vA9C/+Ozf1Rg3GqPBblpIWDmwgNpW1b3tJCjvgV4mUR6W
c+ys5CB1jKvwtCn+5AHu6Gr3yU3FlfIqQDTL1bp60lh27yu7g/+4KXmKjjcZ
H7DDNC5S6/FU+z/HICun7X9onH0qBe8gs49q3U+7W/PmifjofrA/PAyJgaW1
1aWujtbHdQE3Qh/mtzgXFd6ncmA+1/EZPHJzJVCrKV1uSt4LtmzOnGca3+h/
+aOf/mndNNvNpWpUJF/X7Dqe1hTgNZejs7kvUojj0VAs2C50Xq+Wmu2sako0
as1tyJUGCbxArce7LhVakg8BZPUhs8DYm3qVoTiKeVaDIKgFeRUbfCifNVSN
hoj3S2S2bmM9IMa9NPh3Siz95ef3uS8wcafDdVv9cPHQljZHMkg9V6k4yI4s
j7iepNryXG+c1bjS8gcubJJMHUFDDJrPDeIJ5KYYr7ll8cwa5OGrjWo6JOFP
LqWr1sh6DLYqYGm50JL/r6XxBp09mwaLfTHbhTzqi0zUefAVcI+VL44n2lkL
hxLVIxqNW/tHbQEZSsTSH7CP448NveX4zmNfGjrrBkkxKXYbDlk5Fra6XnJv
LKBs8Ugp7CoISvZ2mdy9tizviAy/kqMxcYnUYkwb6mpR4TwBE8fkIVRIEr9X
lmz5J4tEHGas7omNegF0IRqQJDLO6YRBAjtZKuLkF6soF8KbdXbL5B1ojZwR
doGKRHJhZ4CJy1SJWKsDGPaE43seq9d/V0qRyufJfJ1x9R6EKrHVnKDTL3Cc
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
okNMn8FWp7RK8JkPmuq/5aa0WaBKlX0kyainD8LLt/Faon9sTB0+XchxnNTz
gtbj9b17WhWkJRKMcnLnSM045gJgq3KjXIJSIucZeD225vtSedzS2SLYVTrP
VGmoLVfVtAaSqjReObU0elN2XuYnzpGdToLOICO/VbUCR5CZ8R63DdIZ1eNT
FQN2ktedOEr5bBzDE7edpX7fobnzUt0D30Cr7hgpHNA5U9BNguT7E0md98OR
bzy99R9EaQEyZ8caf6BKzsrEnRS0jgEdXhfTx0TywtBMuDzvDYZSgWJvlf5v
d3LOsn0n720MspVrr7u0SJctg7MeTnzToinuS6g533yz6nb9/l4CsiFf2Pbm
kcbKQnJxj+xi6aNt8DQOXTsMpXtNq3m1Mj14xiu95hkxwCqL8fLIj1ud7zan
MZ+L6G1X+y1jbrIJtTGZfffOqOy0/Lt86/xah6q1annRm7MhzFglA4qLucdk
VlUDmOqZKj2XR1Xn3GUsMJJ8X+j5luKXBBNsxsZAs8KfBLWM0szgGSdlzPYq
GeBmXme1zVVN6FL/6KD+3VgyKa31wTRYKwRKsVsr+rPeogT1RWrTZqkQu2hV
XFU4q7KzrvskwzLwJ7zmzcb0X8dKFIAsR9nZsijctnzWcyW81jzAqrUHcFmc
18MguMoxJ6L1g2QkJc3EDeO0XXnK9LZ77gnU0uTblVqXusFxWaKEUUr818fm
hWVaHA0VU1oFHv+WyawawyIJKRafl+Y2hiv3Hb+ePk5Epdx1+4I4+yLAmmnq
c9zu3hnV3cjtZAUlWycoi9EPmYOOyxbLdxy8Slbr8MGasm+4J49S8x3wKm0K
1Zlt2/Qrn8MzfLbRruB7jLOZunU05k9HkOV792MpCYgbXWrakEevZ1zGzNhS
82jLdvMqix4ZpW54/pE8fZnTUe0ebflw+a0WSjvyDYnt+8YyKThUuSwV7382
v6F7crFdpUujYBm14ZCPY6HLkU6j56fvXPhdMAu6kQl/iqpjmK1Y1W9jex3/
xuIn+eAlS3QNDlnQM5ZM7L5JlUICUMGxO+xG7DjdWBk9VpYivWqW6xSKEMVk
Vp7Z9+q3lQzLa16B06ocpk7JjD1ZEz4TqYzA/FbJs9yfYFlMZiW8n1Se/fSZ
hyvvrk49CtXJU9nG7aCabq3TJAnIFli0YjLrKMBzHZdipydxx7QZfYMNhRCa
Lbk1YVsSpuDDZGEQfLvaz8bMhafvr6nkn0UUh5o+Ojtlm8Zla1hOJI6znm8u
VcuAbFL69vbbH6/+zEvmMZ+DvNz24zfOCNS8+KzDFhOS4sQAvrTmzpbctT6G
ynsVzlpNnxvfjs3FHK4h3dT31/LZN9oVjyT751KyeOD6bq7NspYQz20LrHH4
MXRVLJjPQT1fO0nb/+m+Qe3wtWSVwnqGceNwBdUi8tBDC5PwluSwTPVrZ0MX
1CSwxpMEqE6qDgWtBWfXbypcLXhk/ublBhWfqMWGYiEvIOtYQ1MdvRfBWZ6p
PM4qLOoUHc7jI1M9l0nBxo312sJM1pYLYsIfQVv+eAPDrS8vMpNIhZIGjkjZ
UtvwNz3ZsqXr+Yvbyk4bV6zLtGp1AZanUJl8hBW/zUcuxTib0fY5isSNLeFl
b7excM0dbUfBlG1MNmNDjnyszNWdDONrcz3usfIPnTQdBW0KieUepZy0uWDY
X1QEl/6NXbQ0KC2vfOgmaxF8x1k3HctIDt1LZtp2sg9wzyylPZsISgD0jAkE
Ng6U4nVt+PWYyTZB9sLv3pm7wnWB5sto4HFi0qNW38BTuup0FViMC7J7k6DT
j4cWVChWjX8twL5vUi3+ViALRqs+kUdAWUh2KGMXQ238b4bMquISl8Y0D0d+
vNa5MKLbK1hpxCHQwlkIkQvySwuC+wcsMFmAoJMgOsbUJ0lGUGMzvf2Yu4Bm
NaCBmVbYykB1MiQW17+Lc2Z3Fns18TL/x37VlcaMarmmVDRJdKV7zPayG3vm
rBHP2szjD6oJmQ170N6kOQmAsrxhA6/axg61bo+jbT1PBNKaVHVPI6w+uDe5
XfqOLfykdsKby1/lk88/eSRbKK2R5tUyegwvXQUERWa9WIAKB3iUFNfFVLye
PvlwaypmsnSAH87MTLK8yZBZSYt4vLfvUOKKEjRWXHQGWLm4ur72PoQ0a+li
YtGpsIZV5dtvFtB5986oU2b2bFKcXWh/xU0VB9JU4i05kS3NJ5Q/sBzYUPz3
pGFLY/cWWpfof+NLoEvljq6K335zwgjIQuiSSnmz46fG2baG4tM5attWnhXn
AlmkuMjMzyzRdjOJQh/u3dvdWgGRafLhesl7cd682U26i0xNjoY8O53qyh0E
t4vrQuQBjm/z0VMz44m61ObmWr6Yjls7Z/veWGk0ADiRUA8rVXk+aVwU25Bb
liipOl++EkEjzc3Mm7gdZBVH1zzxW38c46y36nJLlFFsek0iJBsVd3eK2OZj
hxKuGgDUXbTe+NaAOAqXMsnE1LC8PDcQO3wnZgfEXsupr1nGecBabWTFhKqi
e9VgEXxUcxj15ujZZVPsU1lJgmnglpUBalfhSC3W99B1EQpzI3mxgBhG4yVW
016x3tRFMff6x1sSmxWZZTPncaGUxgQMUdBjYcbbo9Ac3v/m0195yVdQhrlX
ONsN9SjO5aG5RQI0UTQsxArq5Hz8zuxVCREYAAVJQ0903Vw3VXz6uZnWamcP
Ehpy3zRnKiUifgs720ylvM1DXR4UXrsolo82mEJ/XM1YNBb4FuvXaNwffQN4
TZZ/F0whgQa4s4ZhSwaTgzqd5EmXcpSLbjngquQ6n5htdn0mkyT7/vhf0p/9
h6bTSP+blYhD80LA4rOyQlu91CfbsqGJsIOP5pMNwBrn9eQ9uYrgklk7Lp2j
5nnHoLb8qp388pkmPrv/aNl90+rzchDk0VpONJlOltPKAl22rOk4orTjN878
82JrpsW2WdmQuQljnFUF2y731inGGPA9aUat8pLatvXaLIsBXfdgQVoqhhgt
JFYas0DtsRXlZCK2ap7BGZqppNO6z205Kzsf1Lxs+c+9fIAqUsUTpomRpnEy
VybmhUEu0BpLQkG33YYsy3ZB2tFRqLXXKXLGZIVSqaj2OLtmmcVxP90/m2mb
9QsZ06u/j03H3oChcI81n5dmpJAsxjkliibPTbN+GEYPfIpBdqbar+Al4BXS
CuirEq5EIL05mApb6XOGkOYbv2pLePObNc+rdMbt2MtRhaO8mvGtW6UW5pJ+
5ak64IVES7gi9z6Y9UK0sTZU/iJCiKaGL+geABGGxy56MXTBzRdBf6+yMMSy
RPBk4bvByxkKoxtvUsXVbsyGkNmC8KeB8abomSQm9CzHKosMGp10L2qc1atC
55JM9JRYKxS+NOY2Z9iratVp5wCoYq3lm7bc27l+UblY3deSTz/aXi+9uTXw
LV7f6/uTxd7X79xbE3jVZ3s9As3ctedeYQNg1wrUnnvl/ZE/a5TPyxSvGnmM
oQ4B2+XsVPVAWObgeLDyNseKtZ4sfyfk8GoDcJa1zW6jJS7ONaW5FrVGQ2V9
eFX9IKm1Cz3b5vXQHw8/9qhjJ7zbq/MZnKXniUjX58+tcG3nZK5MA47nrX5N
U+FZJ2W93TV3rTt/G6E07bXporVZpsF/M0t090RsXvg3F2Z+G0k93TeQFIT9
9Udbongxzq5sNBiHboSkHE87faWp7KQd64QaCzNDq7W7XwRR4mBEylpf42aB
f4c24c/WxmdnJovdtfM/v8Hi3xw9AcJuWcJ7eyStBTtzwa7Ar2q1TdyvFewO
IK6ybvH+TRU/hQkm6sSDWettK3EsG7LycNvakJs92Vp0lcW8MIVXhG/7WyYE
Zn7V/vP2yYM7qpEXN0guu+qEswtb47HpOI4v4loDf/p8NlX+VPTye/fK9XLf
4sD3mqV2MhV20lBkhs5NAaBzLFkMjru/5p279hoT1Z+2wkFbAKV7CnOqbte5
KCLIVpE2NEixeDGNN/kEW06tSWavva6Ipm7ILEghMiu3bN5i7LaUpMRSjsx6
Y00IQ3QYAshMHiqafplylZQK17DwV6FSULf46NAMlTJLaqqEZ+VZrdSfYLIg
bAGZjevfgVDi0RZvkOby0EkQkz4kXtSgEOiB0PQEGkhPVt+dTmq1h7NgtZCA
4O23TT8quAKTGjeh9JsKAH1wb3JnsRcUZjN4YqiSmYz2UrXMxo92qnxFx4R9
rNx6SnemllbcYLt867zMAsJi3ux5rQ3QdvwvQaXbI1cl6AqKeTi04I/hVSjU
w40Z9hDHFYvdb6yMy/cqPAplyyrOZ1kvbW2uyVyvBY+wzNu9PcM1OpAJfIrz
eiTwaFUF12YtrTWMLdvTVQaEzy1ObLfFdJykXB19LvNy93yWTob82W2PLk69
wFufflhnbxYTknaAQ58IH+dbHU9QWndG/M9GadUgtrIbc4c7ziqnhtujy50U
+2F/cOXmSR21QG1bWORDMEXGGZXObC1232xNkYHGOJRWrtgY2sxmnpqX68uL
wwM93NWqzvPRh09mxtt4wY6C+dotxp1aRonRm0dYsf9GVPP9KMgLSAR46ep/
YW73+8dlEjN18bq0IbsxbX767fZiGuERzutZKfZJGoyASxxexfvd8b8EW2lg
Lgz3+eNaJtsUnF3bNcO4wo0ypuPm07ExF0o37jSNxmHKMmPpx1t0WIlFVlu2
NT5KOAsHsTzZGGTTqnByvKbTe4uDtWBmYOTvbJhV2Wr0rCUJs8qo1W5ZdQhn
F0OFL0GtIpAF6BljuAV3pasCi+Q8OZllD27TaHsFi6tCsOfZhalyCMt0qAVN
gE5nEzYzC0MfLc8MNgUuVBPHomLeX4M6af6XUkGG2Er96Wyoy1NAZpkA99JI
PxNTCtZgJhmniioZABC4F9X1DJmWVehWkoman/mcLa1eT1gbyMrNnuXPFQTr
jUzQ7FyV9UDbjcpAnCPDVG8VCmQqv/h7usfk75NshWIqwGI6Kduy81m/LR9c
+f0PFn5k9XH6ezi0KsO67IMV47txid/G8U46Cl1qXvpAThlqVdf1Q4vGtnXD
cVGAPy6KUBjAZaxM4DroV0jLglUcH3Ld5fBVHnE+39ZkYKeHBLIs4XyoZeM9
kX+WLsWiWFqqCWeVQsuVUhyylXI4YUqOqvzEaFu58e3/aSnt2bRKDq9374xm
cJbWZTBYMYz+dKpxuhIDbdEWfLSU8A/tSeQBaRsSHJf5Tqb6vYW5BatHALCu
cweG2gQhbMDI6WKtNDpxWYLGKgvb1pQqg3CBxVjNC9Hmm5y/rMPlgBN+MX/e
H03sHiZ2dLhBn7nJRWlFZ9qaBIttyBaonP623Bhkny1wyZ3/uMEKIx+UpWoC
sdBxuV2CcNxa0DN4YAUKCotqazr2jQW1MZ8FMqSWLyV/86te/reZaGRQNRaj
sOjiCGSdxnpNusw9D71VXWY1q/YbaLUdLhD/WGvRe8tygiaEFeDyKleUMFcS
i7rl4jBjK9f7cCFfzF0lBWvLizGZ9Vwed8vmo4iT5VDkfM/rYCfaI+s31e35
ei8Ywa7E6cxZHyqeK7hIEnnia+n9lvjUYgqTn+dd/alYypipz51o26XvuB9z
ea7fyezu6hSg6VFPfVd/IiwGtnhIWd+CO6CAIo5UqI4NOBGHaVXXFZEERHQU
tmdXFptUury5brKNMa7BL3h2zGk7PQTUbsxcgKv6bcbyb7jSEu7LtyCscHYt
iJEmrDZk/fDm4cC/B23phkkxVyZi4WIrVdBa+1h1ChohT8cPARQy7AClqrSz
tAA6C4z2wllauLENcFcaMxNzN3jVRVRtepdTVlNJYo4l1u/suzRqpeelxOXW
XbjwieKN/UHjJ+pSlBHm1dL39naq0Op6w+a606Xk9FYayqiNKW2XVeekYah4
3R++Y6GMCjSSgDBvXkQFIj8UwlmPN1679PUT4Sz9PNYy3M02bVtbG/LjA7PD
6BkEKFkh5LfJMKz9ww3abG1cAclKY3EQX/vgDjgbCxp3AtC2RDUzuXVSYjwK
XmDBogR/mmbDNL+SN1LwcyurGA3z3vMnbYzkeRsyTBx4ioUpILPlNCbnKKWr
slU24y1TgQtNzgLZex/MxsV/+Xn+vHgSlVXkeCSpB8flx0/vdzIdewNngeaY
GjAOQiUrPPS4US/3NUOR3XQcgayrFnucVbjrNjN3HQeCe+aH0RVOOFZIENtu
i7PlIP/OqQGpYWbYEciC2iK5/Aqo5XPeO0PfvPC/8i00OaOvqAaCtCWz79Vv
y+bfaZVFcw9+26oQrj3CGPrjMD/1E4XRWpzPzAXFqVqI0cGCSxmrxo3bigse
T1d/OhvIbMG85CUDlLGihxecl5QTd+ls/w9EZj3qSSptgCAfhogaE5IFc92r
Kx1gC42+/bbDtPy5fC4yK1VkzcOJ7FsohZOAbG1G9RGAe/ku+dakxQebBQ56
SncEtVahYCbxdJvdOEogkkvXoFYweu21j1d/dlC7euv63wLfHJcr1XTFapsL
r25M/3UztjwEMjXSbDtl/UjqsMtpXKYGXmngGm3v0BhliEneahvmJGeB1gMu
TMHqi/cimxpqlitL5Yl8TdjuG12ySKrDJClMhm7esH5gAXapvPki+TgqJMQh
Yi9tMUTybeo8Mpxtu7ErCb9EzG2Ls9tb69381hUXj93sdGk+IVkvO4fs7Sy5
nMvi7Pjm2lxmg19/tMXkv74zS2OhPr82LQ67VJ3n24xqx/bh0vD4Re5wJd20
jSxqBPWnYpA96qBQ4U22GsVZZcyDvn7OKOXKdNy2JruDZt6GDDA5mRVWxuZf
SQzRz8O0TK1BYSiDq1K5QKqEL+LkUxkH2qboshnwKkjyInGAl6fSCNDzpmNv
ll8z1BPL/gNPjeqACvxZIbx4joq47e65f+kLCe1Ht40imuI7HLCTKkjGHx0L
WXD5bKJ7er8tzvLzvcMNvpVghVX9W9qRl1YudV4VKzU4PujLAPkgVK8w31jV
xGQWJqsFhluMVQ4pHy3gzve2VSFiIc3ENpI2C+hNzcjb1X5QhtsS7iN5RnOS
VgaULQurKo57cfUnQLaAzAJVzUC1hWtOZq0SQZo7A7ACiB71ZA7NoEssbQop
LLGN/xY44CuwVZbwpdEfce3cziklfP2c3QKyHlsV5/LQGUaAPtAYJeYEs0U/
2WafFlp8VtIi3xgY7mf/ZgcIyT5Q4EaQ3F++dR4Adbu3fqUztXzba681X1tr
Hz+e/OajnWoMrMJW/5f+n1TAId8M3XLAmm/KmQVYS6m2Lezeop5S2JUgdpee
2VO0/35tscDd0H2LU8aGxnrbbiPo7IStnZpL94vzvkgnY5ydX1t7KUFQmXYK
R+3Zzpk+XkHyN+FOeLhvBMoCuoL0sVJlAVb9SXxyt1HljQHNgzW+lW+Xn4Cz
g33nhVPsKg8lMqV2Uzen0U6hwttSefzhg13HWTckJvVlgl5Qxsc3UzrT1kWb
mVQzNmQxHRemyOgxKptYh26kkk0xZZOlMSaz3trirIBJCCudB6fAem3sL3Yy
HccQeWVi3vOIRVSBG/bfxNnW2GPmtNmBH/gePD83w2ThmyoY1zboy70MtooI
OpNgceyW9TdswOLhyYf7AlkWJ0kEVADcRZN1tX+HKus6C5VC4JNOZLaTZ7Y2
0+sWY2Bape5Y/1gGB4z78bLbK9aCOGfew24SXouJ5R8MzY92/+ggFFLYUS8P
wnN1RFitDIzy9J1NczTaPpvg7PcGl6WyWPAI13q+6dE+MlEyh4N6LpYocHQR
Yyb80dJlQSq0dGSuDM5aZl9YWrNNUhD28+eCafZzuDOn+nR8KwpsCTWp5NH0
Yr8SmmCsjrOmcfT0CSfroV8yPou0Ppx9w/2nMhHbQM32xhdLNt5HB3UPkTKz
/KCVZU9guhVeNQJMXHTD92CFp3c2gqdpT2LC3SscHtvu3FvrBmo9uthd2/6n
YsTcCS/RiPrlNTebQGkzX4GVMg6/yP5FhIW5pxuQ0+lUiHd3v/HpCuflFaLU
5iYHf7l5/4u0vrNkGMFZ5qLdrRVQ1drWitexpYG8bGZ13mt32RLAVWXbehoJ
PGcq69kDdfLY5lu1ulCwpfNZ2Y1Vb5TXON44znahwUw9d7L40LENeT3MFUzF
eUtvY62qEjAxztZTBBQiWyhy0E3Kz8+a5J+F7Ph4t2AQTQk7DkyAsoO1DtQW
u73p5+arjWzIQBU4kuBvjs96qTsOmt5mmzGTHVlJIuVMWPLOVKbbdiKBz0o5
UyKTQt6MxdjXDEdBRU3hT6wuBK9nQ5oSsMvnnghM35im2F5Ju1z0TDQUF0L1
7mOQ9epIuoISvVQ5Y+4ucJlFUZzLw1d8yKn5EkLOi3zhAyX4X6vUVONsYNwi
iIAVsHUujWqGrDFEAFn3j2dx+JPl8qSXkvWSSx+40VunwBJR2k1CSY+GldVX
usSK27EC6EM9t0euQkVlvAXmPjqsu52TDcCy5cqEGLGx41ISgRybDuQ2VSCW
BC2dlq6X3twufWdr4Fvv9f2Jp+WO3zjTOzIGx89AbUKN12a9ZIPyg7JVq0Ky
LXCveGkPcKJZfNRqRVFDcf2al9KKoTah8I839S+jala7z5+bCT2IZbG2oWMv
Tq5/Oy0utjgQCrxKQ6lLo2v3TbsVcJ8IcPtHh06Ks6fI2TndGqATpQUuebhc
kpH39sCmeYUC1oOd+qPdZmECHrT1MPWxGZQWenu4d29hZkgRUEx6o8M3agGp
4wNJEK8bnC2mvXIByzpN++DdOwcr5af7luPjZsabsy0ltMqNQc26YnbFzYSz
+i8zCYvMvle/nSWegZir+EuMs840Y7oK9LQtzeB+3nwDs2Q4de19PhG2Hms6
jjkpq51mRo9iiUtnLEjsfLPKjzNfqT/JLZsB2TjYCfQBsPIG2IyUltYYmV45
u9e6Ze9wjz3LLQurFaVVg116t3kP+WXj/29uVyKK4rAaf6ZWwDFPZt1irGys
RAo7MNkjeV0nB5nSpcEoewWXlVOzPKxgS7GoocWWMDYQ1p8+gSxtYu6GWBh7
E+qxzw/uWW549/NqcS4PzXN5gB5bdaQV7gwlU5Jo4vyhRhWgzwayCcuAOTx2
kcHfDMIUX4Q8IOOqD9YThauQywMKT41fF4KzQd/Vn6i6ulJEJRnBLMHefKi9
WN7C8FueYK40XuXswGE/WPgROCvQBGQ5U6ZxVqTKq803LvHu6pSSbblXE8nu
YHVhEOpl09lQ2Vn/ieYuemgk99nOi/hACxqkOwOvfFJrNFO0rCrWfmJAZn3C
2oZBhrnQq5fLr38LzSktY/7WxCpQ+HIRNtPcpNylqfakOHtqWUX99qQ/0YTZ
SZLxs0//6YugEwWBdQj2jXnjUMsGorTK9NE2PKRSagKmlbAmr5m4D1MrOEvr
BuZmgl2607e3xvpl19VTBsh6s+yVs4kelLihT5JabzMPFOcTqdWjaBbOQjVw
/VsrIL5WzZgu4yAljgvoiLHaBocWIqXOmKrSzsr7+1U2YBnTKb9YtPSdu6tS
hZIWE2+MhR1nOk7stCHCf6ZSaVGrCHLH/q8Z2DcnmrVoL/zu4Pggv1Jddd0z
wF8sQsgZGdZ3sV5S5XRpI3OyrCu03oiDruGnbjR256z1Oe0krJaeqBjljaWd
vNHY6sxGasaJKkVqvjBPwcI1i7iOLh9jzngKZPO3hKzQapmQM8dZtXfu1ml3
Zq+mppLzCoJSasyJwkqLyWz/6KBfPtDfySwsySOgNmozwJPX4AMC3GjJ9hYq
HKJ2FRBrJZvXK1B+T1Oi87uNCjxRFEwbAGfxT5TXE5NZWZ7Z0pWy2KfLZagl
aTuhearIT0zDxMaHyzpcWfOsnxhtLX0mVY7aOf/qRmVA+saKSvItJfeqonjF
etFng7O1ul0/XVAuXWVtwMzmspmZBuZK8ksZ02oecP7PKBrcfdONzdWJgwG4
/X5rHXDvbTG6Oc6uXfr6sfs8kbk4307nqFWzWPHWfB+gs768+Ok/PQO/XKbY
m7Z0PktTQNTuVjPbdLlS2t5aBwGtdN3jBFsbQWIUOOaVJ7QbjONOLoBjq94e
Qq2S6qJrVQdZi7FPXbQKT1WqJq/z02+7hbBYh+oop7JoyafLi0JbfmhOveqC
9Ip9to+F3TQnc1BgxTcAUsEXOAUI65/4t669EH94FOK93VHrDtC8L7gAarnQ
7KHprs24us69YrpPG8MuxgjAsQiXgQWAW2lkB8oUMguj1NSEsJ5ypQQoVaSN
74GQwbfjOsaKKI5FqiHmwCstJrNNM0LQ2vJFjnCWS+Zkljcc+unjFPo/2tZV
8FQvXlcqE2l50xbOniGz3norDYGs/p2ZSPX2KwPrd3oUBAX8df8wwhcKisye
jcjs+uDrnt7CagcAlYQyBJar5nZyQHNhemhm9JKluM5cAJiAIYl4fJGmzHMR
bfvUnarwJ0EqG9weuconS+UJaVno56LGGTJ79Plzl33WSkMPmlW0//y5CRpH
Vt9azzcdauMqqEZgc1ArLQJme1oorrQpIeI4qFh5snyu2kl8W7y88VzReYtp
P6WrtNMPlYADb5XGlHBWC4OT5vKcqLVdoTliKlMseTNUVqxd0lr/5SbUek8b
e6g/t9+X1/lOTck1nXh0lzgrH+sLxlwxjKdz1Hq7Vm2BWh4uZdTyTG3fK4vM
mvxaAEqJG6s2Co8YIEt73iJ7uMECWzJQGTw9eLBekKeTaYCaS+7nmym1hjgl
WVDZ0taQKc7SnApdmZgXRVqoDbnaz8bKOGckq2+nQzgVcmeuVZ0+rNMx8+st
zSmc2P2zmflB4U/v1W9vrltd3RZoOOyoZeTYyvDKBn4U3LWucuxmWCXSHms6
LqfRR4LaRKcix2p5mrSlZ0UZ1A70nM2Zi50SSjNTChhHqapS3Dz2mHEA64Mg
9nZbR8De4R44q9ID0nX0bjC73hgztFJYFC0/XNyWTvB1MxwGicU0mfSH+XxY
cJZRbUa3BnkoWYxZPqmTUt5WvdrZlTZZVICsz9iibwoiSm+zH8H+ih+97w0u
//drSbxZcV0e98wyIKodrygmhSQpjdcqyIdwJtX7Y9i5BB4fJakiobMpR43d
MPJbG/MgMct4TYUpVFLWMmQfrHu4rHhuxjMLHNNW353WgcwJ3qj4CLx7Z/Tz
Tx5ZMmyrOsruxd8zF23glT6eK40ZHsw4htnIcs/X9tJ0eAWV6TXmvF6yR/gL
wBWMeaa++ZeNFBJ1nN/oGP/24g00VLB6W/R0kKUJdk+086aX9twr/WMnWDe+
xOZ+4QzDPdZu7D98KYFnbUv8nKgBtU+eJvFRD/eXp0sDX6R6jI11Q1hDk7Ts
XZhjdxRn+/CXy0Ee/914Epv/+Q0FG8fTmuyEgqducLaAb2bEoBpRsLG56vbm
LMo0NR1P9v1diLEZ9oLvrvbDdGpTdDt+3TbRw5hpiPDhh0rVVNhMxmisxtwO
woKzavTKOeyx7ahVrcKze4QO+rB707FDbQulPZsoGyf25HOvzI69WQ7yUy5z
AdSO9l+GWqqcnEDWsVI4K67aFj099MtwdnOCERCfjbcBxIWwd0IOoBJmh8av
+ZxMZ1zF8Z27xqwz4U9Wfu5WqR5J1zLxcskcPmJF646XOOqVPB3iyIo95pVP
ILZz6zc7Da9w1iJsazMqBM9r752NYo3iWP2p2DPrYcaQWYUhAXncfnovQgpo
SjgCqAXgLMRi4oLGgXueZ1mmZisPffQ55LQ0ej2u7AMT9IgpvrVqa483IbMM
CLAOgxarPTzYz5BZEFz7kXBHnDu8XDEhx9hoHNtSNi/8G5M+nr2aGUzfv5mg
w5b7F78i/BWeuhIFb7zIjmslFSAaU2Vc3Jz3v53QX1YUd+6tvdx90nPWaUJY
XoudDi/SnNKuXv6jYhARC7vzpfmg41xd3hfjrCzPL/f6voiHV+2du804ZFVw
toiC2l2WtbH0sZJ69Gol43+5rAQf4Ni3+fVHW4CgK1TEhWVFGY6ltAry7PTt
SmVic3PNjcaqxhJDLYgWZ9H2TpXjDEp4YnwgyeNkMN1VFvNCuPG/8Fkl9WRA
lga27rXirNholzgbxydbqfdgNM6UWe/edJzgXbr2iE3HjIzWq5bXM/ZmuJc2
HWr5cH/x7/evfo039XKfQFbjwAOVqYyQ54zJcfcWpcrl+bZA6v294IM4MKMx
/wK14SY0F4O7klkVhIdrVzxX0c5svLbbDDZmql+otaTzcC1cV6STxOJRVBUi
Xx1PC7A4xdt8H2vVUmliupINPDbzY73Xg6Bm0gryC7d6wgphRxjaSf1JLKPY
Ytws5n7uFYBGfJMeKpwJqE3N4wlogo/CyuVb5xML9uqUKVf0WzE7BUclZue0
lhBE0rWO+dbkLHZqrGE88Jh5gB0yJ8QlA0SQwfSYzHpNHw6qkLD10ptAauyn
aLkJLQzvG/WF6z6e9TRXyGWvzMPeLlzKpQgdZI+1zcY4G2sHCba4KGCWmpsa
vAFkfOjtjRu/KMh0zrSXzmd1/xjChlvo5e48brGX9srEnbbbALKHe/fUmP/v
731ZCcJ+scC7voGenXNfoW8sAFyN6mUl53ZqL+KoPRtuAzf/MoUuzo4Lanm+
5tfWXPoYzDVuu3dP/z7aWaZ5Lq031cLLJ55YPmkXcVAwiAIhi7j4rNsJM82R
grl6erCZ9dBWcy9jQw6RIYkwRVvlqJj7MM+3tRu/d6/MfjKUVuFPccvrB8bc
SkxQRmNgKxOxnJA4mFcXIMt6o1nEJ8LZmWq/6sKL6lauvS637GTf3/k0+LT6
Q5FfoNb7ZqFowQvQNgv4KBKG4sStUu3+Iu1ZELFRjLEa6MmrwpxityxoC7mW
T1YtFBTbUHlfY9kP1uWJyFga15fGvV6AygGwGbdcJggqUyoxs4LifsgHp4Ff
ijHIEFtwVkkoC8NvCexAGWYnf7jyUooZ9acCJsKUYoQizRgV6kmJQjCXCCuF
aGG31vLV80+fSTiCXsErp0qDjJ4K2PVd/YkEoJTOAyAm6T/BPgxJlDAv622X
W3R5ZB9nd9o6mYVQA6xaZsxP/WRzbVbLD16h+UbJ0zsKGpvUn/Uw+POvVm58
W+nJKqzjXl0wWmaKPMiqtp0L7HcTzSuchV1mgI9LIGwFPdWA3cxvY5x1OP5S
AaXTLeGm4N/OEd2csnrlP7bdwKImUpylPbcn9MuF2rOt/ll5cl86gW07+EDt
i7j1ufFCtN7+k6d7N2dn68uLeo44Hf8qN/M0PJc2LkNgiXvjl9qzqv1p5sbi
GCSLHe0QywonUoUCSYl6cCmzaIxZPl1D4hw0DztXmBWFMd9cWoGUuaJAziLh
RJbZVFEIU1tKy4zhOAvmauEB7ijGWN121QXVIldErvYfG40zZPZEpuPZgR9k
THZKlKj0fzvZYOzNmEX2TpXnFiYNp869Apn1DKDNC/+rIxHwxHV0eptv3mEZ
22nwUNFSh1fpTtzfS5DUwD1dBsyM92Qq/oDOGmRHTG4S+pkZ9pZcnuAUFhuV
NThJJqqPJhFxuRKHRyGXp8NS0KJGd7bq05MtxFY4K0ap3c72/yD/iCltR5Dq
6k9w1WKL8dBYr187FjyKfSqNXveE1tQN/SN3i5jQ340zidN2dYonRSVmvgh1
eUZLl1knTMzdAFs9Oej5889c2gLAtWqz65VEyyLUcRPPjYUp5KutTFxoLmLX
Zzzk+PEHVTcKQatBbXrotx/MOq7r5xcdSK0sDJWDtKNJL55NZK/A9wzOql6P
V4gTse2GM0oa98ubh2XLBYh58xINudoVr4pT+i0rXbBo9DVSntKubDRikLX2
YE01yr88G/LZVj2o3+ZogOanqzLgTUY83Ye9136mcsbrq+9yRnE8jDfWLcJZ
ZfE08ffDJ51wVoKExbqLfJuX5VFbKo+r8qwbjcUKhZUCrJXKhHM3iG0n82Db
CXZ68IzHJBfbt8V6QFKnpXmczUBtEha1vxiHQsXBRbG52MlsW6Nx96ZjMLTJ
Gs69ysIDeB3tvwyYetKQMcexMU+z5Q3jYGlTD+7ECUH8PCPg4IPffvUSknpM
JvHAtldBPZWG16soreKN6YBfNWg1iCx49WhktmR55reZOpAhs67YoGi3zFKK
dZR8BDIac6Fr5SEtbz6LjDmdE7dtSmeGL5UmlqplkEvENi75KsjrHekYMSJu
C8iKLh3rVptyw8LZfwGUKOnVRBED95ThV5xRr4AdPQTa9Pn26jwAahgatged
QVi/N8Bc039LU4SkNcHOWUu4loVZbHIqizIas7GfMqMtJiu9Dv51Y/Kjnerh
A2aRab+RrGZ6ZQ0C6wV9Yqsyn2dkrzJNGT0cPaoQ1618sbs1i8lgjMVS8eoS
2riacGGto9TyvLj7Fjthi339p57wu1x1+BVhAol//svN+1mQjVoeal/iCuGf
C2fPBufvC4YfByMe0+De44ONuUmrs2wVlkevz6+1n05FYxvrtVgjsS3OSjde
ZsbitJqCsGQmgdho7GT2SHoaOyvv3SvHCSxeNDZ2y3Zqz59sFFcgjZuiwuJ8
nCzUrlUTeL1XjqE2UztVQsG+W42VqgmYUnEgs0qQyWOoTMdWaboDyHptdHFY
Zj/wK3/RQTHunCsT800frszF9VFP9hHOujVVMGeVkgolNNlMahtuH7YMxI0m
S9UtN1RZd5Tn8vGvvoo3Y2UlWNe90YbMrlVlu6BBjdv2R0FNXlGCSyOTgu/W
UnE7Vriw+ZyLriowBkaliZl0YSYyq1hf+FfxtA+8ipgUk1nmVS9Stn/xK0K9
qfHrjVBnx4rTtZJZlhmmrxtqtasz794ZhY0KMUFGSULFTXrFbKMY5i/SQvCu
ZZEQ4UhlURZj/twZbSQ6LRBvJaIO625AhlYrVInnxSEVnB1ZsXWjmZdj123s
ww3/mohlYzG+yi5fbD76B+uWr/Thfjcgy7QGAgr7eFOMWaogkNR+DWh+CnUp
DgFK5gGdT/S5ZxDnm8OrO2G/JMjoEmeN0qZXp2fSXEs3frFTgLAxtwVK3BUO
Xrwse8I/I87Svv/TnlMoTyqXVq9OXVmCAqCKtRge6GkcLFgs09M2VVoYSWVT
Pg/ih3mczRSDK6C0BYmZgrbYaCwyom8FW01n1rlXlq//RSY3p7gVVyDNNCs5
FHQqMumusYFLwApkb9SajtoYZCGtC1vjcxvN2g1M+/c/uMMnDrK0o9YIZG/A
sQ7UtnzP/PTbzhAFsvdzc4VEn7zgneXUXHtdA2gW4+AnTUrppatZB1aLNz5O
p9pNxHqjJugUk9XnHtMIlAP32mBuzZQE3HWb8Wtn1IxpbqgERl3kJOaqah8d
1JdHfmwagyM/lgyjhSgHC3O+JrKMJKkPek+CkwJcFpZL5QkXhXCcZZyVNVmc
YMIcW5zLo208bfb9kT+TUgQglYgipqlncRgSx22Ggc32AkMsTVWvnN9OL/bn
75OxewuXJmvXr16QZuMX0Z+EKSTA6OPsTlsn0Yc7c05m6wvX43ShuFyRQWpw
9A8M918qbzrQs5Zoom0EuDvnX+XbthFQrGQAWeYKQLabeVs2BLHLbigVqKo+
e7OSBC9JY0ohTHHLc155gb/sGKcuoUFvVq/8x70kuPTPeSSZ0h/uLxeD7MNf
Lh9sVQ52LCWE0ZNcw8pG49rLEJ/858XZsyEm6qTaFxBYKxywv1DZngZPE373
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
WN1gDxkqDdRmcFaqFCLmhlMhdpq2vTrle6Mz/aNDzJwvBWG9xeIVoUbhCaB2
vTYroTbQFnpLz7UoAqFocoRZbbvFErggMb1yWotWJMi5lcrL/o/cH0+99M0s
RW6mNymmdu4V+Vi1qm8sXDu2q7EwRVwvry31ptFhZloPE2LGru0tKgLKC9Wp
cVLre3NAYRxT5EXG1YCPGGqlqeiHzkMt3LYe1dFrxj6d/Rd59apY0PiHfZMK
0JLpWOZitffulbk0GlUmZ0GqH5cOAzQJ10vzg7R6kXFb2c2xDr9yjoBaD1fj
gk6Vgn9WdXxaofZw5BsrlYmMxZgmMhsPHbtlkRaTWXpST4uqcxuAmKp9zBsl
4zulFc5Ke1NIGkcRN9UXowWDEn8Ui6UtZ8Z7ONzGyvhHJir4vabFOA1JYgVe
zImYogs8s4Dsteny1PCF90f+bO+CkcH3+v5EYcYKCbZcnhTQk0TvwTOl0et8
C+BuLlxjdac6Pq4yMTx2cezewrEgC2pkhCk++fXHDrW8p/EkujAFzCWp3h7e
gzXNOoCrU01ec+6V/tFBP8GRFas1Jn6n8KGkjLsCUdZnQIHNvcW2fDY20yly
W/ANSPGU5cnvqVuXVc6bchYTqwPjEwyg1gbiuUBtWxNxpm3s3j912qxK4jom
ZgKfWoKNU4hk2amIvtbU2j1OmavvWGzoH6ZWKC2f863k1IIVYsOtzTPGUidA
WPCUv+GBng+G/8+En5b+CjwFXkUVVWVgqTrPlqMjNwb7zt8euVpn3i791daN
/+tBz1cLIoGLm4gwaJhxAavBSSUHB7mOGe7S2JkWnI0oLZhLP42hS0ZyZ8kz
lTjKSQWTu2k/uHLTM2q7zO7xBvfc3lqXo5ZRVbSSlQHdm5O9orGfBJRysYS5
ylJZXEhsmFxlU0DaWWFXTNTMruxKWkO8KgjW9B/ulZOc2fOvbvf9caSp3mIE
7khmnZJEMcn5KJqYzMa6GczGYKVqlI+s7OS3z1dJyHh+laViiSopjY2/BVby
MVH1cOKx7hOA27a3KujDeknqT/TQierm5ppwVrKZHgHlRle3DzuYCk+5djHm
6l8hrGrjChOZ+gTfpngf1BWawVrhhj/s/0P9+8HPrCJ8BmRlyMoPXZwzawuA
puXWLjfn5ZHA4qHsR55xD4Ldq4+6arFKQWk54fDq2lC2Zlircn+ODptBdWF6
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
6f5Ek4TZRzYJcILumeXBnLrRJR+ruRFF/Z7XCszJBit8VE4oyxUryz5bbDQR
H6bOykZnqLQvvLmRJ7Yeq1lFy4MXh59/zhyVASzgXlTa7kal5Jw95ly1Dtyj
Y3F2Kwt3mmKxIrUq+a7tNBv3dSnt0vZ2Y+xT4ycaOpYoqiLEJ08ebjrIxuru
okWKenVEs6Jm9RFQHy9OuiwPI2be0pDmyeeJLy80QFYJs0kYVaiDFltlrfB6
Kunzygiow6Dg5+5gx1n2EOOsQqFeC2fLkwONjtqmjcfZLMYAytk3ABTVtss0
oDZjPVZFLa/vMF9N1vblypwHNYkDJlA+OeIJULFV2cOPvdSsiys6zmoncpIy
XKKEQu2t7jefzLynxByN1cTqlnSVXwm1ZofPfc/lnsBZdrUz/U8m/dTz9Z1z
v81u2T802aju2WN8db3nZOzBBG09J0s5X3JDOLZqHpAxGZCVl9lMWJMjVqdg
eUZ8tiaGPHYOzDWpipWaxBZ8tg3Uqph7+2cKMuurxFDwywaceS+WidgPldNX
8x2K94h1VJjlWLMp+4ZXWKoG0CONgVdwVmjrw+vCFBzLS8pmVI4BX4GpavHE
+eaxMAVrG8+6FZlVQJEvHqa7jsfe6jPBGa2YXlXVoal6uIikKJXL/jvg2pZX
a+XjS6Mdwe+5DnSGstRrMdQqP9STfdiGnT+5txwMmJMZ8uuMNcDKusNNIjyY
RiYrgUhQu7FgYoAe3tkUZwFBlT5nVwwRWKkgNKEkiBmS+reVXct1lPavWWYC
7nMzWJ9DNRz4LEAmm7Nq1Hp8FMT2C8RH8ROGiAWSrjU7Dw9ysvDQAEq7Ul5p
mY5NBqHBdCz9KC6Nk9n7o3/DVFCxmaScoOfz9Qac3QEUFHyoPa8tl4JCdZYe
NmKcEAd8LJgxqi7RdTbcpbBanpRHd+c8P1crCp4pu1VCmi1IKsnlcZPzvcPe
OJYLJyrb9zBO442SZA+ebWWCqBsxkfPyvY1e/tFrXZ0rH24fpnWCWoGsugef
Xb4/4UMRm4uZx2ia4ZnQgu5l2SOgeOJM8mi97KLHXAt4lkeQDg32ugZUrWJ4
YLJC6l9HtVoEta681yYCKiPmb+laqQWSCwSb9kpq04Mn68rOBhxf2S4eHWTh
X+6lbWc3ro8x/vntVaCzEWflrnXrMSPPJT4zUSsf0D0TR4Yk9t6QAZfwUAXc
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
HoBXh1pYFSD7hMxURvJ7v7rdEVtDpq3BFkOrSf6mgksSZWIbBf2yzMqMC1iK
GbEylQimKhEEJbq17a5jNy598/YmD1m3HLWCVxXp82AnL2vLgkrQcn8t2ioU
1GM96A8AAanKrDF73dRF1QeUvyzjlI9nU4JUOm9h+eHnNG4B6CwNLgPrtGwT
hzACu7bSQuTLp3zmY6WEhZsbTb/qYdbX8FJs8hiwPDP5pu9BfaMD7IoB3xOU
GP+vTI/oOZnKD5bqzeIpt3YWk2I0D+yV1JyNE1f48WFgJ9GnZlsfHb1anlmx
3ootduC/bmFOF7jaChySIVdlXlujsA5FedWx1TRSR+TnLlgBh1I5HhUOaOe2
cQvKYHlA0/TA899VaNNu99Mf1s5CWsEO4JX1k4NvJNgaagFk7eeRIT2+MoXx
E03p46AQZRUSizmwbG/4/9k9//twQ5lkgS0AF465cP5vYbKCWg22Ij5eqYdP
mwmvVOSYM/mC8bw4hXCKYU35I2zJwkHlNS9eFjegFqAHyLbyz3Hc3cVzQsAb
O5VmAEDHQnUnn6KT1XKLHXhu+HgGi7cuPNt+UBFnerVdG/FSOHTbA4nVACYQ
34NavW/GK4P+lfcQiPmtFPKfvLWLZhw9HpqBonbc++yM1T2zkFmIvIMvn9xB
pkNWTzbX7Y7OhXJO9grGDYZH3krtnKGGbcAmkVmlKypQWSyViS5g6pZnVjJD
82IEQLDETEprY6ognDnfuODsa30THXEWMgsXZgKWPELl53U47qAUEizspF5I
4mlTAOJP5RaJAzIYivJYttHBXbBJMncACuOtZBthxELJzbkeYJez6zgOmwk9
ItEcK0mbmu31Mrh87pz+giaBcz0vxNJP7Y1vIbNnJqozq6WeeQuUgtICWwyq
jrN02HKLQtqUjmJziaB1wL2Qvt/BTtUprUaq21MvOKUFeZ8EZDV5exxie9q/
evTxdghtMpxlAUgFZOXN5G1iYiPJCAUmedKNLnUjdbymQhDrntsrW644pv68
kXv+YPafFSZqIt5BxpkTFBEGWzl3sWMWhIZcIvbAQyipQzpgQQ4hQEizo3au
ymyKbyXYqNBcejjYe9oo9tRFIFXUWArGevfTdNp1Jfi4YaQ5b2/MQ2aZZan4
jscyCWEzMcYd+SwgyzPQgrNv/QcJldC3ALIbkZLGFmO7bhlXDwC9erN5CEUl
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
4e7e21H9d9FbdsKgarxm9sLmXM/Duw0OatLH777BdQZngdeVUCHIi8bGz/O1
s396ZqIag6xny4K2F6bKsvJZQmgImBGE0Rn6ybCgaC4uMiQ6jcacsBsa5LDc
WG1UOj06/fTHxg3InE5HeOU6COWVL5COkIYvYId6lcoFJ57Z+8H6YUIN9xN5
Ine8ahvIncDUE2piE6sHTcm8DKl8b3pEmKjZwo3c8zTHU92+jO2Xb2XzF8vj
57T8SGL1NQocTsrDjx00MzKMKq+gi2zle1Ktfl0BZex6z3UWXDF7qIKVQ7m3
wu7Y9GqG4pSTcl8yGbLA68zhuuhs7M/PwfhfwrzCBKBZtg+QlSS+4qXFziT1
0xE01cZKPV5MJ7wLFfD3CKLtrVjNgbMZcQmFJccBVOKGzmdVr0ce1Xgz1khE
Qu5XZ5QedORlBVZnL4gmb1wvOXTG0VC0jatlWCowCrzKCdvSgpRTyG7OC8fr
1aIXF2BlZs4Q83RnuyDsEVe1rMiocDjY6PWrZS/m0rj8XFffgKjHe6WR6/mX
/LbCEzN2YAdW6KqAFQg2qrhW/MCEWTrk73RsLdgXQJafc9EsJadV7b96/hsZ
b2ymealWITKUp39hsx1hWe9yjjSLg1qpMKlQvNOv3v1rEDYOgX7CliG2R9+C
uHmpI9nf+DPG2UzIcSKcmJ4LCBv/ye3wqYIEIiy4ojGkqZHIrGOoqVWHOncS
RZTNmUedGVcc22Y1o4M2lGd4MfhAVCHLbCCrMpvxk4M7FqY12Nvl7NXkOjcT
gWuTEh3sjudaQHzM3N+KZI1VPqDdOSs+y23lh806U2NfZ7rouTyMLVbWM9DP
reqoqtUAncrnlYVNRdnop42N+SE66Vr6Ft8SInnEf0FS9iDhHflGDU2CZqMl
mxS6ZJoG4xjoOCgEFizgsz70gioExdEvPZdGm/XsQtRod346rjmrdvxiOWEc
u3VJ08OgZX4X73AFSBbcOauCs67qrMafkKDd7mfohqWWpI/KxvKMcBbA5YI0
0mjhNNvFsEbxRRq0mUJoVAcrPWBJoOnWVH6iwKcUtppqh8qX4beQdMupCZX7
ZPWNibMcqR6bpCsvcsopHFRe+3D5bWkFC2H5VsDKbc3EJsl6rCK5qahFEyVd
dzE9hWYajqOt5gyPgzeffmolx8oEj3HdUnP3hgeBs5J5gmshZuHSKw4P/kDw
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
bIrJ0mR+SDXudQiTrrq92E5gG2nicJK1tF/TdIuVzkwDe932Qj8ptm441NIU
DcU7Hiy3FW3MEeOo46a4U4hFj0F2uysS58mUElYNpidDXjD32rtv8GDXq8XW
qJ5sYxu5Jof6TgFAkFzo6hFI+iQ4a/V6AiStrZRU10B5Q7F+BXeQ5sjLlgw4
hZFQ+/XCf+l4Xu+f/2PLlzn9JRZguGpCWAigPLMZQt0hAdZqfS5xFsEvnFTi
o6nge7BizdEZsLVjcNeTN+YJmvxbqEyp2yGAEYzRIM5szar+lvvMGZq5+5/X
wOKNwecaM2eeHE8BHaAHPJWaQSZgWO1fJ9d+OlbzQOXNk8fibpuJ8rc3Qf/7
NmUoZ3D2/srbQp9MAqlCasUsjthnHMHFM8CDBHfQnu+98ze31orXa+86mbXa
eTtzzmcta3XVpMVVItaQdHTA1P7DVIoGdDqZhY2q5mwSARUydwohlMILRkjd
2gopRrXdOQS78vIBnKkeHn47u57rqJEVKxt/Ls5KD5Orej3/0sFOTWZtJaMx
njNOBi2+AgMdwx1jrIqdaabKnxKmaAQDYxwiJZ7L285vFfsqA6AMy3LaShci
eIRP0UAQ0EfCFzLUA7XuU2uUT8U3zkB2OftAcjWguqyvTp5uDqFMZU9/Ybf7
GVjPwvm/NVWE8inl5Mo5BYKbafrCs6tT3+vohhCkqglnYW2qaMMa3g7+VIdN
lrlaEM7KHJoU0AmGVqkMJWiYlpZjeas6Kp4be6WFqs0c3kguI17WZiC1XL00
ruRt4VEgm8lZlE/5AMLEQ2MyOMvt0wbemYQzpjio9ZyUPb1prhBTKSt4FIh8
++XijisPSLor4sg0x9nFkGmliYHVL9iqJmbnFN9TtmhrzEkdrB88gRzUVShj
0/FI/myMiZzg1NxALALQcQFEHu/94ezwcU1yNvIv3bj0TR4DI7PRULx77g/0
tO92P80yD8zk4Btzs8NJXNCDFsAFX5oGk1zv/i7DS5LWKnH+qfkxYNcihOfH
1OKKrnBSGlvyaVbo2Ym5an5+Y8r5IC+j/J42gy1clN1VYHdnb5U9bG8ulIKW
9UqbLmKTzZ39Chx2ZfAfwFM9Rb6geGOPOo5LJ5STxKKs1oSbjp1NJ/V515fo
iYmJ3btrWVHuv/4tm1m/r5fmB767furLaXjDa2bnKTYF88Gvla2VjIhE3Gwi
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
vhq8gxp/9myfEZgYk0PavnAHatkdbYM9GVTKlBL45fQ6uCZbsfTcRCTlOQUl
hbZuTGbBoLtQiVtwMAZZlcSl+QVbWHhaWl1/ChDq9ceeTvzZk3t095bzUG0w
dXCd5qe7NiCANuPJxGUubOHWWGwQlifXc4plXvbwaTdoZ2YVoJlOUEostyCk
bo/Rrb8S9WohwJ7DLTMo4KyHhL0IWkkWZpBKRsR5sp21AA6Js5mYKMDOVnRt
OLvp0cWW75l+y4sol/aQaOt95aKUUgdlMDMm2+IHAoFN+GlgMYvFIcesF2nV
np2txfVq0TNWREXNkVSeUjNAWS54A09zN6c4xKrd7a3oVM36UmUxoR686SCb
Vq9uZAQSM9ja6X71QrdPHibV5wWazJlgGbzSk2EFfPMW8f5/NSvjUrWKHbuf
F2czOT5Ob429lgYZ5Bl4pTFFSP88I1mjYQ8o79bLHpbwxYzGkCPPxGkOflMh
Ul2LzclNqcOZw+1RXv6BgDWemhqnvpwbPm5yClFSicfzsCTz2bXrt2SSYWFD
X4zSgtcAYn+cZbHRqtE2etQyjEKdBTE7fs6cwdK0A5PlFkzDIQUvMKsyc0WP
o1YalK1JCbaAY1JErzrnKlKCMA4v1ScYw2KpLtNkrGf0qiVehZQfDxTRsYJa
nV9Sk05puWydVum3WgV1qlPS22K4un75ZL2EhAdUS8CTHfjGXvw00yTtq2cU
Y66o7txGRYFhdhdREBRQonJCHk0t0YwkQiyEh8kGqwRP0RNmPwt2CrxVVfDA
KQ0/KyWQPy3BisyfF/0RJNHh/Kb0M4+DbC3vu4eHiykuprdnby5L9YgzyzEq
x0oSFRzCY4S2Vlw1sN34SnaG/sJBFujvA6CgpzpEkK2UW8lWcyoVN+SO1FFM
9Ttr+SSzNawiqmkCLH3l65AMcHOsjN4795tscGZzdk8N58fOJg7EsIzMDx/n
jqySUbWgYFq5jy2QaaeL9un83IwuWCV+nOo+Twup92pLtbxw9mVIenIntTte
OY/EKKJc2kCW91hQzXF5Fv5RnjQ7RmlETJ82On5msnjVBbj6O2otsj0UA4pA
vKXiqGWGO6a9mt7huW1kBDCJA7rXPAinvgS+S9QatN0p/JhfATSzdOOSGx5r
p78u5HJ26QBnpRg/YyQchLqcBk+x7IP7Rjlqb7tasJmkEZf1YQdLrd2uOsbR
A/wL5rLRKuKTnjCmq47F/LvftPwggbLDK1cCowGtnLR6CLFSkIA/iKe0oToh
++HWSm1xQmF4FmKRvwQgGi5ff1s/WzXOEzfHyl5xTf++fpdh7zFauqPPHq2C
9SwDOv0sfEUvMBWWdQ1CTp4dBPZ84uxrnvmDzgKLnmP1+L6t7uh5Q+FaeeHy
D1rr/zgr4dyfTU+NWIbI1Eiwbl1SUolPHdqWitTuxnImk4t27TdZp9iJyX4F
QPu00zPN9Wr5XuVmr3b//SRP5NHNv3r2ZIXhwTPVVfEKFA5dPivlAdUI3t1a
CeavzQCas3OlyTvFC0s3rP61IpM1mWgMc7ZgMV4P0ivrAVgrbJs6+pYVoeNs
8vExi45cO6O0Gu3/8El1eWua3pYLnmlc0K9r44sqCzk3HXNISPKdVQtjJmtP
M6plkfx3m7ubLJLYjddkQRV+XHaRj2w3voJPWRR9/xdj3gDQ/35iko0fX53/
1+vLtLcmV/+tYE+K17dHZhLmW2gc/6Aa9391s7rcmOV+N1fGnS88//RAkGdJ
MY8T4iYFFT6ashSDS9tbG59+csBEHXLcgp9uu8pKNWGyudPPA0LtFN7w0cub
zcqETvXgfrO+frdCt5TyNGYhS2cw5eHC1Njg6nJ+dXHCVCuDOUI//PXh76Zj
+FvzF7+/2ZPenhianOTkPDXOpnJjlgITdAD0fJV6w9ibC2xXJYA3GzWu6vHc
Ww/O/75O/lFjXGCkuHF2qIYLzk0NyyzMpUpOR+5XM6dfOc36lndYoeUmLrGg
zbcL+6t/mIX4qDT6NhvcJj2zWhzg1X+G9G3Mlx2s9QdYNFamN2Yv0x42FpQd
TOOuQxmRAtfjF0lTVEBMh914zgWbs6lmxbWf7lekntEH7CpBjUpGCb5oaw3q
Wv/0WYMWflZW8sac79eHYGr0A10kVp4363qBp8xF0pNcLa+sHHhAPCk6mX9L
t6a5nisXT4zdOJdbHpqpt753vDh435K7Q6r1xGtWjGCn9OKTZmjr6et6qBZn
v1BdkrfwflMXyUDtT7jigFIfddYGv7F6482V6z/ScywP/cvKzGXWD6X3/t73
AW40n6QrEBt1AUQqeo5Dl8+lkoy2QygloMtL+D7v8AMPqlmRr/mgYcN1sZzu
b8uhjX1b2dZ2Sn6gXiPVx/XMv8xOabzx5sdP1xsrOWhg2bw2b8XGYf0L/O3+
+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
KXQmjlp30c6P/bxbXFYjxtyM0VgRUIoP5N8M9+wxF6UFlWTBiAuUxDv4GVJB
xerUMRDTcb8/tnZtmhxsMjkcyO4FI2cvnD3VLjbbB2dtZb61Ilb18EkV6hrj
7KObf8W4glcqqxdiZVnwN6yAnRURCOJO8RLRw594zQ0fl+dU9mHXepKrVISU
k8g7LNUOyCw/fJV7yxjP9Y38+sRw46ApxU1laGzj3S8Xx45Fvptxw9nDTU0x
2tL8HZCXtlSzKW78Tr/FjNy7Yrh9jMbXl+9KN8MVKpi+bofaUi9TWTCWN/S/
AqGFs9qgD90+z88zGycQwauFSA28NnH1BMDKq3/EOPnJ1XmBaSeG8g4fsYO5
XCdXOi3GioMSwnKqpfV17QPOwovlpAsuhgL0xFjAow05KXiIStQVW7QfOJR8
8Bu2Whj8BmtOsPgg1WYB1zT2mKiVFuT5dwm3DRvSADSH2tigUl1Ghi7GIcRd
jcNiu8ze8Ybc2cCuC9PB9LUMBiAsxDc/4hCWyQhOVpUpn/XZ1fksZ56amtSn
whHdJssDralAGaDEnadCuk60/Vwj2U3HukJuDQRUtqzWcjwOc/2H2EuYmvpN
Vys7gNi3cdVUp4LGo+FUdLtl7wYH90EIAJbH1mzdLz4DTM1SMfgNGryVJpdE
PERlKI7jqehtYJquyAQY01Sb0s3pdA5YeedBwW+2UE9/5ssDj6f+ayJece6r
+plYiG/0UMTyBLgOH5GZt8Vq6SIWITKQxok5oWDiqSSVNZCLBCiLAxnWLIAG
TEFhrkRRx9ruiq1K+elUk8hw2IMo+TfC03onsEYoXHf7sHrA+H7qoo2ZbxyU
1R5y7KFZde8KGFk/nO00GvsA0LzdGZ+cSa2dOlZLqkwml9TLMd1zQfL40Sf/
ccDo6uWZ7dqAm66z978VGof00l77jeGspfY8aVlUgF16zKd9V7ST7W6zYT4O
yCPQxqvYaAZk6fOZ0Xdgl9pNTthaqFdyEJVcrAUJaH0vICjtC3lmIbOdIGvC
dOFfTU0xzibyIOkCSelUYGKLzObGcrOTh5+aVpuF2B3Pv5kdzt+u9NHgkt1Y
OlFvDrzfq/+VPAtuujd8Z+gv6GRPWlR9UhOq2q5C+c0tu7ViCma7a5XymPSH
7XfKAjsjE3HqSPHKjwHWzDfCXp053jj3P5SYA546Gz184xBQ2BNpmQBBWLbP
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
hsvLPrWbsvyCgwKYT9wVe0B7L+jcHn77scvvKjiNWdCFwkEKVFcWlr4BnD0T
zMiF1TTysyMaWdxTeaxeg8CtwXFjDRtovXBWEVArS1N8gmI0FeVhzw6XshWr
5l1LcfF+SRVzYj4L+LIyljIGdg8JsntBg5EW24e5EHfUPvrsP/PWSyUAnIXS
Xru1As7G6KCy6YxUnKdDbZBNo5fGTc9/sS0UWTK2WnafKftn+AWJeDUU2sRo
aZqxjx4qTbLZ99esF7C2I9Sa+Kmjoap4u4VQlJb9gESyJ3Oe7IpBW1L/UnWD
Q9GTG/ctno1e5aJic64Dq47FNhJAoDHNCMQzMSP7iTEhnF+/JuDgkxdWLtrJ
mXFZhjO7lcVYYhd6VELGkIc3e8Ssbc+cge71UgVcAhfIv1LqMxv1ndqJWO9/
OlIFZ09Wp8KNxrDatER703vb+aaknIJNPiGedAg3t1I3l7qXwDOFisF3VI6H
eyEaqJgBEM1BthXs9LQt8NgjwGOZREX2MuffWK8r5Aa4ZF7n7lHhqTNZZ7X2
bNxZcOImaNY16tvc7BVNAyB0ph3xpHVQL+++uWo1RxQ9Kz+j0DNOofWEIK0x
43YQ0wZQgHIxYvY5OXZxa21GshhTE29zVibPODHIemEi1+g1dw7G2cb90sFQ
yz7dR8yIAcJypXSaBD3cy8O3bOlJRlIIicCu4RFQv3tclaCijAmSto4Sf1rs
NYOwTmmZnJjJPXDnSlCYiX7Y8A6M1ZK1UiV0XYSWrgsuDBMA5AH++POuwheJ
5flV4yz7j2WNJTB7yN/Gcsf5Kwd5aQcWVouHLoF6/CanLfgCGsZm5LjJjKwM
IFecsDlYQFVl6Kxa4GiCs7zCor1sI6syP1RV3Nj2K2RXCo/jrOKdlNEjPutp
sy8V/pTAx67dLKl2iL9zpTertZHxc05pm5/+TzN7BlsZ29AbkL4Y7CweKQ3o
Ks8MczI+/jcaNRXvmxzrU4PnDly9TFPlVnNDh5qtJvlbLdvAmFqWEvvSw1WX
gYrBPfW1xaINhlaVpQXzFz9pBZqyc6+noyrhluycFqSTjA+sR6AMIAK1wDTj
uSeSqCIbY/7s7ExS6zbAK+t1JqkjtRnn4JRv55XU459Jwb5J86TH8E3LWCr0
FYeACmUItSkRjfUpcEvnr2FEn/ybmxiCIdqdOrbd2NtJ5fWoeYATk+qMcIQ7
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
+O/Q74xgI+ul0Jr44HtV0O/yT7UiyjVIESGJNtVEZmmZdAxf542WH+G7JQQF
TKaxrjUCN+n0pHfGkhRlEbKJkhO+psMuANa0H4nC5LT+NLn2UIRMPPbe/HDN
TQA0AUCxCXDm0VlaHYlWCBqCLXqo94JUDZpexWexsdOeBa+ebJcb/V5UAP1i
pl5FWISqlLzQW6qCqPkJoycKzxyeyAL2uPZqF+yiJ1k1K6UPupTCcUzvn1xZ
Koltkv6+YdNYh4sdk3dUuVwJRKR640a5uCXX5sCyTnKZkP3VzLta/OhbHB+4
9Jox4qW37ew/SM4y2l20qRSK8fHVBhcC4543sxSqe6zcD0MBxJ2s/lSKWojG
8l+kLVC3EJ+9fneEsLPVn+bvjaNKgRvsXp8IwurxIIcn9Cyh1pL4uv/vLQw/
+uKPN8f+SmNpdki8u0S03Ge6O8juxWqLV5q4wlGDmqayaFHR55ZW4EBVito1
LD+VsdW5y3q70E6YOIxSwetUbHkwKDj5wMKTuv+jmaywSltldzQYsonpj0aY
HSxFS0jZQlv7svpoYuNVYfnicO38awE5Kv6aaoz1iZr/jdHelRAcFEZZUQyO
6DGCJ5AsHAmNs+z8zJVA2xcII9PU89fv/eLF4sYCaA0nZxsnfljmygs+2649
ziufCnMFggJK3YEEjaMKd6uKLZMOwNZHQyfBYlOpWabBlrqmuqM4UTTJapLX
r8npWp26KM/OckBlcyj41codPVNjvYDIk8et0S/Pri81SoStxYrbAecsiSxo
27gzJ2rZSEIlpWPOelqSAeh27RGKARn8SZ9oxSogdddEKpCqb8dfBakhjJwh
VTuxGYHQbT5bCehF8sKoPuoYSKrG8iCJI8HECSADsvoubgnR9jBNx7e1mBGS
sgwQjmPlA/pTyvVwbRqxCHSb4+SshpqNsFWsZJ8wclqTtCE1r6YWdys/XugG
We3Bb5ns60jIPpp8RweJNdJrq4B6PSP0GDvbfEp33eEz/1YrhSJ6XOLsG14K
5YHQopCU2K+V/zVGZtr6xlExNT0kzEWbonS2pfwJSYpnImx3LXH3EI3VVEyg
WIuopVQ8UzbP8nhv+G8gs9/MndAvZSj142tqoqlfsyLR19Z+Pbxlrraet6VY
pUzOPk21kdS0LB/73VxR3KSLp1N2qdkZK+5I10YQIIFyeWz8FacA1BT1OD8X
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
           "], {{0, 635.}, {632., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> False, 
           MetaInformation -> <|
            "Exif" -> <|
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com"|>, 
             "GeoMetaInformation" -> <|
              "GeoModel" -> "ITRF00", 
               "LonLatBox" -> {{-74.17004105965967, -73.73625540783317}, {
                40.625194870372695`, 40.95488702494237}}, 
               "PlotRange" -> {{-74.17007446289062, -73.73611450195312}, {
                44.53102111816406, 44.967041015625}}, "Projection" -> 
               "Mercator", "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com", 
               "TileSources" -> {"Wolfram", "OSM"}|>|>], Selectable -> False],
          DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {632., 635.}, 
         PlotRange -> {{0, 632.}, {0, 635.}}]], 
       PolygonBox[{{-74.17004105965967, 
        44.531412767182324`}, {-74.17004105965967, 
        44.96687642161461}, {-73.73625540783317, 
        44.96687642161461}, {-73.73625540783317, 
        44.531412767182324`}, {-74.17004105965967, 44.531412767182324`}},
        VertexTextureCoordinates->{{0.00007697307117382479, 
         0.0008982365725671571}, {0.00007697307117382479, 
         0.9996225080292191}, {0.9996753021183338, 0.9996225080292191}, {
         0.9996753021183338, 0.0008982365725671571}, {0.00007697307117382479, 
         0.0008982365725671571}}]}, {
       TagBox[
        {RGBColor[
         0.16862745098039217`, 0.16862745098039217`, 0.16862745098039217`], 
         StyleBox[
          InsetBox["\<\"John F. Kennedy\\nInternational Airport\"\>", {-73.78426551818848, 44.55900192260742},
            Center],
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.022587036208946077`],
          FontSlant->Italic]},
        Annotation[#, {"symbol", "aerodrome_label_large", "aerodrome_label"}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[16, 51], 0.3137254901960784], 
          NCache[
           Rational[104, 255], 0.40784313725490196`], 
          NCache[
           Rational[131, 255], 0.5137254901960784]], Opacity[1.], 
         StyleBox[
          GraphicsGroupBox[{
            InsetBox["\<\"B\"\>", {-73.87624136309313, 44.84308719370393}, 
             NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]], Automatic, {0.15840234994803062`, 
             0.9873746480090227}], 
            InsetBox["\<\"r\"\>", {-73.87542289663917, 44.84818896793364}, 
             NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]], Automatic, {0.21311328735629817`, 
             0.9770274953921163}], 
            InsetBox["\<\"o\"\>", {-73.87412180987181, 44.85280438121892}, 
             NCache[
             ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]], Automatic, {0.23951088251824745`, 
             0.9708936796350722}], 
            InsetBox["\<\"n\"\>", {-73.87294376617994, 44.858238499163875}, 
             NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]], Automatic, {0.3522920824656551, 
             0.9358901049973827}], 
            InsetBox["\<\"x\"\>", {-73.8703341229847, 44.8628666529954}, 
             NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]], Automatic, {0.35901513378139804`, 
             0.9333317382988349}], 
            InsetBox["\<\"R\"\>", {-73.86846244314413, 44.869888595846}, 
             NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]], Automatic, {0.271388312435275, 
             0.9624699392051336}], 
            InsetBox["\<\"i\"\>", {-73.8671888070264, 44.87402141508522}, 
             NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]], Automatic, {0.2945081705052879, 
             0.9556489614422381}], 
            InsetBox["\<\"v\"\>", {-73.86603210524204, 44.87777479434465}, 
             NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]], Automatic, {0.29864727328895274`, 
             0.9543635607864928}], 
            InsetBox["\<\"e\"\>", {-73.86447506414636, 44.882693509390734}, 
             NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]], Automatic, {0.3488685440579484, 
             0.9371716699553435}], 
            InsetBox["\<\"r\"\>", {-73.86262812418, 44.88691896819105}, 
             NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]], Automatic, {0.4005097074645851, 
             0.9162925156447762}]}],
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.024738182514559993`],
          FontSlant->Italic]},
        Annotation[#, {
         "symbol", "waterway_name", "waterway", {
          "SymbolPlacement" -> "line"}}, "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[0.2196078431372549, 0.3058823529411765, 0.4235294117647059],
          Opacity[1], 
         StyleBox[
          InsetBox["\<\"Upper New York\\nBay\"\>", {-74.04218673706055, 44.57376480102539},
            Center],
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.024738182514559993`],
          FontSlant->Italic]},
        Annotation[#, {
         "symbol", "water_name_seas", "water_name", {"TextPadding" -> 5}}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[47, 85], 0.5529411764705883], 
          NCache[
           Rational[139, 255], 0.5450980392156862], 
          NCache[
           Rational[9, 17], 0.5294117647058824]], Opacity[1.], 
         StyleBox[{
           InsetBox["\<\"Black Wall\"\>", {-73.83293151855469, 44.507718086242676},
             Center], 
           InsetBox["\<\"Great\\nCaptains Island\"\>", {-73.62350463867188, 45.00330448150635},
             Center], 
           InsetBox["\<\"Pelican\\nIsland\"\>", {-73.58483791351318, 45.03828048706055},
             Center], 
           InsetBox["\<\"Canarsie Pol\"\>", {-73.87125492095947, 44.52707290649414},
             Center], 
           InsetBox["\<\"Pea Island\"\>", {-73.76233577728271, 44.8641300201416},
             Center], 
           InsetBox["\<\"Rat Island\"\>", {-73.78096103668213, 44.83490467071533},
             Center], 
           InsetBox["\<\"Pralls\\nIsland\"\>", {-74.20170307159424, 44.5085334777832},
             Center], 
           InsetBox["\<\"Staten\\nIsland\"\>", {-74.14501190185547, 44.4622278213501},
             Center], 
           InsetBox["\<\"Randalls\\nand Wards\\nIslands\"\>", {-73.92103672027588, 44.75074768066406},
             Center], 
           InsetBox["\<\"U Thant\\nIsland\"\>", {-73.9643383026123, 44.69161033630371},
             Center]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.022587036208946077`],
          FontSlant->Italic,
          FontTracking->Scaled[0.001804704193094792],
          FontVariations->{"CapsType"->"AllCaps"}]},
        Annotation[#, {"symbol", "place_island", "place"}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{
           InsetBox["\<\"Mountain View\"\>", {-74.26577568054199, 44.9126672744751},
             Center], 
           InsetBox["\<\"Pines Lake\"\>", {-74.25848007202148, 45.01450538635254},
             Center], 
           InsetBox["\<\"Neponsit\"\>", {-73.86232852935791, 44.46175575256348},
             Center], 
           InsetBox["\<\"Arverne\"\>", {-73.78954410552979, 44.48956489562988},
             Center], 
           InsetBox["\<\"Point Lookout\"\>", {-73.58067512512207, 44.48810577392578},
             Center], 
           InsetBox["\<\"Queens\"\>", {-73.79765510559082, 44.695773124694824},
             Center], 
           InsetBox["\<\"The Bronx\"\>", {-73.87859344482422, 44.8236608505249},
             Center], 
           InsetBox["\<\"Brooklyn\"\>", {-73.94957542419434, 44.56423759460449},
             Center]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.02516033151291303]]},
        Annotation[#, {"symbol", "place_small", "place"}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{
           InsetBox["\<\"Albertson\"\>", {-73.64320278167725, 44.726929664611816},
             Center], 
           InsetBox["\<\"Alden Manor\"\>", {-73.71761798858643, 44.62247371673584},
             Center], 
           InsetBox["\<\"Allwood\"\>", {-74.1597318649292, 44.81945514678955},
             Center], 
           InsetBox["\<\"Athenia\"\>", {-74.15432453155518, 44.85026836395264},
             Center], 
           InsetBox["\<\"Barber\"\>", {-74.25792217254639, 44.40695285797119},
             Center], 
           InsetBox["\<\"Beech Hill\"\>", {-73.81653785705566, 45.00871181488037},
             Center], 
           InsetBox["\<\"Bergen\"\>", {-74.06570434570312, 44.66865062713623},
             Center], 
           InsetBox["\<\"Bergen Point\"\>", {-74.1412353515625, 44.560933113098145},
             Center], 
           InsetBox["\<\"Colonels Row\"\>", {-74.01901245117188, 44.61792469024658},
             Center], 
           InsetBox["\<\"Grey Oaks\"\>", {-73.86958122253418, 44.981889724731445},
             Center], 
           InsetBox["\<\"Hartsdale\"\>", {-73.79817008972168, 45.051798820495605},
             Center], 
           InsetBox["\<\"Lakeview\"\>", {-73.65264415740967, 44.61075782775879},
             Center], 
           InsetBox["\<\"Newark Heights\"\>", {-74.25792217254639, 44.65985298156738},
             Center], 
           InsetBox["\<\"Oak Island\\nJunction\"\>", {-74.14595603942871, 44.646291732788086},
             Center], 
           InsetBox["\<\"Pleasantdale\"\>", {-74.2604112625122, 44.77572441101074},
             Center], 
           InsetBox["\<\"Port Reading\"\>", {-74.2604112625122, 44.45265769958496},
             Center], 
           InsetBox["\<\"Ridgeway\"\>", {-73.76289367675781, 45.03042697906494},
             Center], 
           InsetBox["\<\"Tappan\"\>", {-73.94867420196533, 45.05647659301758},
             Center], 
           InsetBox["\<\"Todt Hill\"\>", {-74.10892009735107, 44.49231147766113},
             Center], 
           InsetBox["\<\"West Bergen\"\>", {-74.08321380615234, 44.64663505554199},
             Center], 
           InsetBox["\<\"Boynton Beach\"\>", {-74.2545747756958, 44.42888259887695},
             Center], 
           InsetBox["\<\"Fardale\"\>", {-74.17548179626465, 45.081024169921875},
             Center]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.026848927506325164`]]},
        Annotation[#, {"symbol", "place_hamlet", "place"}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{
           InsetBox["\<\"Allendale\"\>", {-74.12904739379883, 45.08162498474121},
             Center], 
           InsetBox["\<\"Atlantic Beach\"\>", {-73.72903347015381, 44.48372840881348},
             Center], 
           InsetBox["\<\"Bogota\"\>", {-74.02987003326416, 44.86275672912598},
             Center], 
           InsetBox["\<\"Bronxville\"\>", {-73.83207321166992, 44.944725036621094},
             Center], 
           InsetBox["\<\"Brookville\"\>", {-73.56732845306396, 44.779415130615234},
             Center], 
           InsetBox["\<\"Cedarhurst\"\>", {-73.7243127822876, 44.52836036682129},
             Center], 
           InsetBox["\<\"Closter\"\>", {-73.96150588989258, 44.99107360839844},
             Center], 
           InsetBox["\<\"Demarest\"\>", {-73.96347999572754, 44.97008800506592},
             Center], 
           InsetBox["\<\"East Hills\"\>", {-73.62406253814697, 44.75654125213623},
             Center], 
           InsetBox["\<\"Emerson\"\>", {-74.02626514434814, 44.995107650756836},
             Center], 
           InsetBox["\<\"Englewood\\nCliffs\"\>", {-73.95236492156982, 44.87490177154541},
             Center], 
           InsetBox["\<\"Flower Hill\"\>", {-73.68122577667236, 44.771690368652344},
             Center], 
           InsetBox["\<\"Hastings-on-\\nHudson\"\>", {-73.87859344482422, 45.019569396972656},
             Center], 
           InsetBox["\<\"Lake Success\"\>", {-73.71761798858643, 44.72328186035156},
             Center], 
           InsetBox["\<\"Larchmont\"\>", {-73.7517786026001, 44.93112087249756},
             Center], 
           InsetBox["\<\"Lattingtown\"\>", {-73.60097408294678, 44.8881196975708},
             Center], 
           InsetBox["\<\"Manorhaven\"\>", {-73.71487140655518, 44.819068908691406},
             Center], 
           InsetBox["\<\"Northvale\"\>", {-73.94906044006348, 45.03544807434082},
             Center], 
           InsetBox["\<\"Old Brookville\"\>", {-73.60483646392822, 44.804348945617676},
             Center], 
           InsetBox["\<\"Park Ridge\"\>", {-74.0406847000122, 45.07647514343262},
             Center], 
           InsetBox["\<\"Pelham Manor\"\>", {-73.80709648132324, 44.8881196975708},
             Center], 
           InsetBox["\<\"Piermont\"\>", {-73.91841888427734, 45.08166790008545},
             Center], 
           InsetBox["\<\"Saddle Rock\"\>", {-73.74950408935547, 44.756155014038086},
             Center], 
           InsetBox["\<\"Sea Cliff\"\>", {-73.6448335647583, 44.82700824737549},
             Center], 
           InsetBox["\<\"Wood-Ridge\"\>", {-74.08793449401855, 44.822373390197754},
             Center]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.026848927506325164`]]},
        Annotation[#, {"symbol", "place_village", "place"}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{
           InsetBox["\<\"Cedar Grove\"\>", \
{-74.22904014587402, 44.83044147491455}, {Center, Bottom}], 
           InsetBox["\<\"City of Orange\"\>", \
{-74.23264503479004, 44.72328186035156}, {Center, Bottom}], 
           InsetBox["\<\"Dobbs Ferry\"\>", \
{-73.8726282119751, 45.04591941833496}, {Center, Bottom}], 
           InsetBox["\<\"East Rockaway\"\>", \
{-73.66959571838379, 44.55363750457764}, {Center, Bottom}], 
           InsetBox["\<\"Fairview\"\>", \
{-73.99901390075684, 44.778685569763184}, {Center, Bottom}], 
           InsetBox["\<\"Franklin Lakes\"\>", \
{-74.2056941986084, 45.048837661743164}, {Center, Bottom}], 
           InsetBox["\<\"Glen Rock\"\>", \
{-74.13290977478027, 44.9774694442749}, {Center, Bottom}], 
           InsetBox["\<\"Guttenberg\"\>", \
{-74.00373458862305, 44.75152015686035}, {Center, Bottom}], 
           InsetBox["\<\"Hasbrouck\\nHeights\"\>", \
{-74.08166885375977, 44.838595390319824}, {Center, Bottom}], 
           InsetBox["\<\"Hillsdale\"\>", \
{-74.04042720794678, 45.030083656311035}, {Center, Bottom}], 
           InsetBox["\<\"Little Falls\"\>", \
{-74.20818328857422, 44.85322952270508}, {Center, Bottom}], 
           InsetBox["\<\"Ridgefield\"\>", \
{-74.00875568389893, 44.80731010437012}, {Center, Bottom}], 
           InsetBox["\<\"River Edge\"\>", \
{-74.03986930847168, 44.932236671447754}, {Center, Bottom}], 
           InsetBox["\<\"Saddle Brook\"\>", \
{-74.09265518188477, 44.89288330078125}, {Center, Bottom}], 
           InsetBox["\<\"Union\"\>", {-74.2632007598877, 44.626851081848145}, \
{Center, Bottom}], 
           InsetBox["\<\"Verona\"\>", \
{-74.24015522003174, 44.80143070220947}, {Center, Bottom}], 
           InsetBox["\<\"Westbury\"\>", \
{-73.58762741088867, 44.70345497131348}, {Center, Bottom}], 
           InsetBox["\<\"Woodland Park\"\>", \
{-74.19698238372803, 44.88009452819824}, {Center, Bottom}], 
           InsetBox["\<\"Eastchester\"\>", \
{-73.80645275115967, 44.97506618499756}, {Center, Bottom}], 
           InsetBox["\<\"Bloomfield\"\>", \
{-74.18543815612793, 44.77096080780029}, {Center, Bottom}], 
           InsetBox["\<\"Waldwick\"\>", \
{-74.11818981170654, 45.04111289978027}, {Center, Bottom}], 
           InsetBox["\<\"North Arlington\"\>", \
{-74.13321018218994, 44.7467565536499}, {Center, Bottom}], 
           InsetBox["\<\"Floral Park\"\>", \
{-73.70478630065918, 44.66259956359863}, {Center, Bottom}], 
           InsetBox["\<\"Freeport\"\>", \
{-73.58316421508789, 44.5741081237793}, {Center, Bottom}], 
           InsetBox["\<\"Lyndhurst\"\>", \
{-74.12428379058838, 44.777913093566895}, {Center, Bottom}], 
           InsetBox["\<\"Mamaroneck\"\>", \
{-73.73263835906982, 44.95871543884277}, {Center, Bottom}], 
           InsetBox["\<\"Carteret\"\>", \
{-74.22818183898926, 44.46836471557617}, {Center, Bottom}], 
           InsetBox["\<\"Irvington\"\>", \
{-74.23487663269043, 44.67268466949463}, {Center, Bottom}], 
           InsetBox["\<\"Fair Lawn\"\>", \
{-74.13123607635498, 44.94687080383301}, {Center, Bottom}], 
           InsetBox["\<\"Linden\"\>", \
{-74.24457550048828, 44.52728748321533}, {Center, Bottom}], 
           InsetBox["\<\"Weehawken\"\>", \
{-74.02042865753174, 44.72182273864746}, {Center, Bottom}], 
           InsetBox["\<\"Garden City\"\>", \
{-73.63431930541992, 44.66517448425293}, {Center, Bottom}], 
           InsetBox["\<\"Harrison\"\>", \
{-73.71263980865479, 44.9855375289917}, {Center, Bottom}], 
           InsetBox["\<\"Kearny\"\>", \
{-74.14544105529785, 44.72032070159912}, {Center, Bottom}], 
           InsetBox["\<\"Port Chester\"\>", \
{-73.6656904220581, 45.02896785736084}, {Center, Bottom}], 
           InsetBox["\<\"Tenafly\"\>", \
{-73.96292209625244, 44.92781639099121}, {Center, Bottom}], 
           InsetBox["\<\"Paramus\"\>", \
{-74.07360076904297, 44.954166412353516}, {Center, Bottom}], 
           InsetBox["\<\"Wayne\"\>", {-74.23766613006592, 44.95931625366211}, \
{Center, Bottom}], 
           InsetBox["\<\"Fort Lee\"\>", \
{-73.97013187408447, 44.829325675964355}, {Center, Bottom}], 
           InsetBox["\<\"Mineola\"\>", \
{-73.64067077636719, 44.69504356384277}, {Center, Bottom}], 
           InsetBox["\<\"Teaneck\"\>", \
{-74.00725364685059, 44.87571716308594}, {Center, Bottom}], 
           InsetBox["\<\"Long Beach\"\>", \
{-73.65787982940674, 44.4830846786499}, {Center, Bottom}], 
           InsetBox["\<\"Glen Cove\"\>", \
{-73.63358974456787, 44.84498977661133}, {Center, Bottom}], 
           InsetBox["\<\"Ridgewood\"\>", \
{-74.11943435668945, 44.99969959259033}, {Center, Bottom}], 
           InsetBox["\<\"Bayonne\"\>", \
{-74.1143274307251, 44.58878517150879}, {Center, Bottom}], 
           InsetBox["\<\"Hempstead\"\>", \
{-73.61869812011719, 44.638352394104004}, {Center, Bottom}], 
           InsetBox["\<\"Greenwich\"\>", \
{-73.62843990325928, 45.06171226501465}, {Center, Bottom}], 
           InsetBox["\<\"Mount Vernon\"\>", \
{-73.8370943069458, 44.91086483001709}, {Center, Bottom}], 
           InsetBox["\<\"White Plains\"\>", \
{-73.76289367675781, 45.07166862487793}, {Center, Bottom}], 
           InsetBox["\<\"Valley Stream\"\>", \
{-73.70568752288818, 44.581403732299805}, {Center, Bottom}], 
           InsetBox["\<\"Hoboken\"\>", \
{-74.03235912322998, 44.68714714050293}, {Center, Bottom}]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.029040475125787817`]]},
        Annotation[#, {"symbol", "place_town", "place"}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[{
           InsetBox["\<\"Paterson\"\>", \
{-74.17179107666016, 44.91640090942383}, {Center, Bottom}], 
           InsetBox["\<\"Elizabeth\"\>", \
{-74.21071529388428, 44.58256244659424}, {Center, Bottom}], 
           InsetBox["\<\"Yonkers\"\>", \
{-73.89876365661621, 44.9355411529541}, {Center, Bottom}], 
           InsetBox["\<\"Newark\"\>", \
{-74.17234897613525, 44.677062034606934}, {Center, Bottom}]},
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.03764506034824347],
          FontWeight->"Medium"]},
        Annotation[#, {"symbol", "place_city", "place"}, 
         "WolframGeoGraphics"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[67, 255], 0.2627450980392157], 
          NCache[
           Rational[13, 51], 0.2549019607843137]], Opacity[1.], 
         StyleBox[
          InsetBox["\<\"New York\"\>", \
{-74.00600910186768, 44.646806716918945}, {Center, Bottom}],
          StripOnInput->False,
          LineSpacing->{1.2, 0},
          FontFamily->"Source Sans Pro",
          FontSize->Scaled[0.03872063350105043],
          FontWeight->"Medium"]},
        Annotation[#, {"symbol", "place_city_large", "place"}, 
         "WolframGeoGraphics"]& ]}},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], RectangleBox[Scaled[{0.8, 0}], Scaled[{1, 0.2}]]},
       TagBox[
        GridBox[{{
           StyleBox["\"Geo data sources\"", Bold, StripOnInput -> False]}, {
           
           TemplateBox[{
            "\"Wolfram Knowledgebase\"", "\" (\"", 
             "\"https://www.wolfram.com/\"", "\")\""}, "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] MapTiler\"", "\" (\"", 
             "\"https://www.maptiler.com/copyright/\"", "\")\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] OpenStreetMap contributors\"", "\" (\"", 
             "\"https://www.openstreetmap.org/copyright\"", "\")\""}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
      Annotation[#, 
       Column[{
         Style["Geo data sources", Bold], 
         Row[{
          "Wolfram Knowledgebase", " (", "https://www.wolfram.com/", ")"}], 
         Row[{
          "\[Copyright] MapTiler", " (", 
           "https://www.maptiler.com/copyright/", ")"}], 
         Row[{
          "\[Copyright] OpenStreetMap contributors", " (", 
           "https://www.openstreetmap.org/copyright", ")"}]}], "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Mercator", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Mercator", "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoPosition[{40.7900429, -73.9531482337464}]}]], 
    "BasicGeoRange" -> {{40.64018087739859, 
     40.93990101791647}, {-74.15032353003119, -73.75597293746165}}, 
    "GeoGraphicsOptions" -> {GeoBackground -> {
        GeoStyling["StreetMapNoLabels"], 
        GeoStyling["VectorLabels"]}, GeoCenter -> 
      GeoPosition[{40.7900429, -73.95314823374642}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-74.17004105965967, -73.73625540783317}, {
       44.531412767182324`, 44.96687642161461}}, GeoGridRangePadding -> None, 
      GeoModel -> "ITRF00", GeoProjection -> "Mercator", 
      GeoRange -> {{40.625194870372695`, 
       40.954887024942366`}, {-74.17004105965967, -73.73625540783317}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 11, 
      MetaInformation -> <|"GeoMetaInformation" -> <|"Attribution" -> Row[{
             Hyperlink["Wolfram Knowledgebase", "https://www.wolfram.com/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] MapTiler", "https://www.maptiler.com/copyright/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] OpenStreetMap contributors", 
              "https://www.openstreetmap.org/copyright"]}], "AttributionType" -> 
          "Tooltip", "GeoModel" -> "ITRF00", 
          "LonLatBox" -> {{-74.17004105965967, -73.73625540783317}, {
           40.625194870372695`, 40.95488702494237}}, 
          "PlotRange" -> {{-74.17007446289062, -73.73611450195312}, {
           44.53102111816406, 44.967041015625}}, "Projection" -> "Mercator", 
          "Software" -> "Created with the Wolfram Language: www.wolfram.com", 
          "TileSources" -> {"Wolfram", "OSM", "MapTiler"}|>|>}},
  PlotRange->{{-74.17004105965967, -73.73625540783317}, {44.531412767182324`, 
   44.96687642161461}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.9244754228364277`*^9, 3.924475469401203*^9, 
  3.924475514712761*^9},
 CellLabel->
  "Out[380]=",ExpressionUUID->"2d24752a-96eb-4ffc-8d1c-42f4f286ed47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[<|
  "query" -> "Albany Medical Center Albany, New York", "boxes" -> 
   InterpretationBox["", 
     Failure[
     "NoParse", <|
      "MessageTemplate" -> "No Wolfram Language translation found.", 
       "MessageParameters" -> <||>, "Query" -> 
       "Albany Medical Center Albany, New York"|>]], 
   "allassumptions" -> {{
     "type" -> "SubCategory", "word" -> "Albany", "template" -> 
      "Assuming Albany (New York, USA)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "12", "pulldown" -> "true", "pulldownlabel" -> "more >>",
       "pulldownlength" -> "10", "default" -> 
      "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \"NewYork\", \
\"UnitedStates\"}, \"dflt\"}", 
      "Values" -> {{
        "name" -> "{Albany, NewYork, UnitedStates}", "desc" -> 
         "Albany (New York, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \"NewYork\", \
\"UnitedStates\"}}"}, {
        "name" -> "{Albany, Georgia, UnitedStates}", "desc" -> 
         "Albany (Georgia, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \"Georgia\", \
\"UnitedStates\"}}"}, {
        "name" -> "{Albany, Oregon, UnitedStates}", "desc" -> 
         "Albany (Oregon, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \"Oregon\", \
\"UnitedStates\"}}"}, {
        "name" -> "{Albany, California, UnitedStates}", "desc" -> 
         "Albany (California, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \
\"California\", \"UnitedStates\"}}"}, {
        "name" -> "{Albany, Indiana, UnitedStates}", "desc" -> 
         "Albany (Indiana, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \"Indiana\", \
\"UnitedStates\"}}"}, {
        "name" -> "{Albany, Kentucky, UnitedStates}", "desc" -> 
         "Albany (Kentucky, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
        "name" -> "{Albany, Minnesota, UnitedStates}", "desc" -> 
         "Albany (Minnesota, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \
\"Minnesota\", \"UnitedStates\"}}"}, {
        "name" -> "{Albany, Missouri, UnitedStates}", "desc" -> 
         "Albany (Missouri, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \"Missouri\", \
\"UnitedStates\"}}"}, {
        "name" -> "{Albany, Texas, UnitedStates}", "desc" -> 
         "Albany (Texas, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \"Texas\", \
\"UnitedStates\"}}"}, {
        "name" -> "{Albany, WesternAustralia, Australia}", "desc" -> 
         "Albany (Australia)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \
\"WesternAustralia\", \"Australia\"}}"}, {
        "name" -> "{Albany, Louisiana, UnitedStates}", "desc" -> 
         "Albany (Louisiana, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \
\"Louisiana\", \"UnitedStates\"}}"}, {
        "name" -> "{Albany, Oklahoma, UnitedStates}", "desc" -> 
         "Albany (Oklahoma, USA)", "input" -> 
         "{\"DPClash\", \"CityE\", \"Albany\"} -> {{\"Albany\", \"Oklahoma\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
   "querystate" -> {
    "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
     0.904695`6.408047183593361, "query.jsp" -> 3.703919`7.020206474141487, 
     "Messages" -> {}}, "contextinfo" -> Automatic, "version" -> 5|>,
  "LinguisticAssistantTemplate"]], "Input",
 CellChangeTimes->{3.924474823215208*^9},
 CellLabel->
  "In[365]:=",ExpressionUUID->"2e9f0dd7-bef8-4687-a21a-21e52680c440"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"No Wolfram Language translation found.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NoParse\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Query: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Albany Medical Center Albany, New York\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"No Wolfram Language translation found.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NoParse\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Query: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Albany Medical Center Albany, New York\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "NoParse", <|
   "MessageTemplate" -> "No Wolfram Language translation found.", 
    "MessageParameters" -> <||>, "Query" -> 
    "Albany Medical Center Albany, New York"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.924474829828274*^9, 3.924474847200966*^9}},
 CellLabel->
  "Out[365]=",ExpressionUUID->"f9e33dde-2dc6-488e-8001-bbf8759f051b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stateData", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://publicreporting.sts.org/congenital/50127\>\"", ",", " ", 
    "\"\<Elements\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9244687747368507`*^9, 3.924468826354961*^9}, {
  3.924469584094485*^9, 3.924469586769185*^9}, {3.924474469702466*^9, 
  3.924474524781782*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"6761cd92-f93d-45a7-a9b9-64eb985f82bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Data\"\>", ",", "\<\"FullData\"\>", ",", "\<\"Hyperlinks\"\>", 
   ",", "\<\"ImageLinks\"\>", ",", "\<\"Images\"\>", ",", "\<\"Plaintext\"\>",
    ",", "\<\"Source\"\>", ",", "\<\"Summary\"\>", ",", "\<\"Title\"\>", 
   ",", "\<\"XMLObject\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.924474407358239*^9, {3.9244744735141163`*^9, 3.924474525319531*^9}},
 CellLabel->
  "Out[355]=",ExpressionUUID->"d0c46f26-08d4-4e1e-92f1-e521418ecf39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"title", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://publicreporting.sts.org/congenital/50127\>\"", ",", " ", 
    "\"\<Title\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924521069692028*^9, 3.924521087925823*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f1086e5e-d1e7-4eb6-9156-0a0a7669d60c"],

Cell[BoxData["\<\"Albany Medical Center | STS Public Reporting\"\>"], "Output",
 CellChangeTimes->{3.9245210962596273`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"7984f84f-4961-488a-84e2-69b1caeb104e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stateData", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://publicreporting.sts.org/congenital/50127\>\"", ",", " ", 
    "\"\<Plaintext\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924474537741329*^9, 3.924474566812558*^9}, {
  3.924474614156901*^9, 3.924474615640699*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"4b043703-2de3-465d-93c6-2806951d4b0b"],

Cell[BoxData["\<\"Skip to main content   \\n \\n   \\n \\n \\n \\n  STS \
Public Reporting      \\n \\n \\n\\n            \\n \\n \\n \\n \\nAdult \
Cardiac\\nExplanation of Star Ratings Congenital Heart General \
Thoracic\\nExplanation of Star Ratings Resources\\nConsent Forms FAQs \
Glossary Toolkit Additional Info Contact Patient Information      \\n \\n   \
\\n \\n     \\n                   \\n \\n \\n \\n\\n \\n \\n\\n \\n  Albany \
Medical Center    Albany, New York  \\n \\n \\nNOTE: Results are based on a \
participant\[CloseCurlyQuote]s unique group of patients (known as case mix) \
and the number of surgical procedures in each category. Results published are \
specific to the participant listed and are not intended for direct comparison \
to other participants.  \\n \\nFor this Congenital Heart Surgery Database \
(CHSD) participant, rating is based on the overall observed-to-expected \
operative mortality ratio for all patients undergoing pediatric and/or \
congenital cardiac surgery.  \\nParticipant is enrolled in public reporting \
for the Congenital Heart Surgery Database but did not receive analysis \
results for the current timeframe (July 2019 - June 2023).  \\n   \\n \\n\\n \
\\n   \\n \\n         \\n   \\nOperative and Adjusted Operative Mortality \
(July 2019-June 2023)  \\nPopulation: Neonates, Infants, Children & Adults # \
/ Eligible Observed Expected O/E Ratio (95% CI) Adj. Rate (95% CI)  \
\\nOverall  2 / 248 0.81% 1.71% 0.47 (0, 1.21) 1.25 (0, 3.21)\\nSTAT \
Mortality Category 1  0 / 162 0% 0.57% 0 (0, 3.94) 0 (0, 2.54)\\nSTAT \
Mortality Category 2  1 / 45 2.22% 1.44% 1.55 (0.04, 8.19) 3 (0.08, \
15.91)\\nSTAT Mortality Category 3  1 / 13 7.69% 3.5% 2.2 (0.06, 10.31) 7.36 \
(0.19, 34.46)\\nSTAT Mortality Category 4  0 / 20 0% 5.65% 0 (0, 2.98) 0 (0, \
23.34)\\nSTAT Mortality Category 5  0 / 8 0% 13.55% 0 (0, 2.73) 0 (0, 40.8)   \
   \\n \\n   \\n           \\n \\n \\n \\n \\n\\n      \\n \\n \
\\n\\nCopyright \[Copyright] 2020\[NonBreakingSpace]The Society of Thoracic \
Surgeons. All rights reserved. Expanded Proprietary Notice and Disclaimer and \
STS Privacy Statement .\"\>"], "Output",
 CellChangeTimes->{{3.924474541487242*^9, 3.924474567463674*^9}, 
   3.9244746164237623`*^9},
 CellLabel->
  "Out[358]=",ExpressionUUID->"a1a8da56-aecd-4f0d-9c2e-5e0bc333f8bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["stateData"], "Input",
 CellChangeTimes->{{3.924472437522068*^9, 3.9244724446228857`*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"f6398f9e-b9d2-456a-81e7-565550d9c942"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Explanation of Star Ratings\"\>", 
     ",", "\<\"Congenital Heart\"\>", 
     ",", "\<\"Explanation of Star Ratings\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Consent Forms\"\>", ",", "\<\"FAQs\"\>", 
       ",", "\<\"Glossary\"\>", ",", "\<\"Toolkit\"\>", 
       ",", "\<\"Additional Info\"\>", ",", "\<\"Contact\"\>"}], "}"}], 
     ",", "\<\"Patient Information\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Population: Neonates, Infants, Children & Adults\"\>", 
       ",", "\<\"# / Eligible\"\>", ",", "\<\"Observed\"\>", 
       ",", "\<\"Expected\"\>", ",", "\<\"O/E Ratio (95% CI)\"\>", 
       ",", "\<\"Adj. Rate (95% CI)\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"Overall\"\>", ",", "\<\"2 / 248\"\>", 
         ",", "\<\"0.81%\"\>", ",", "\<\"1.71%\"\>", 
         ",", "\<\"0.47 (0, 1.21)\"\>", ",", "\<\"1.25 (0, 3.21)\"\>"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"STAT Mortality Category 1\"\>", ",", "\<\"0 / 162\"\>", 
         ",", "\<\"0%\"\>", ",", "\<\"0.57%\"\>", ",", "\<\"0 (0, 3.94)\"\>", 
         ",", "\<\"0 (0, 2.54)\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"STAT Mortality Category 2\"\>", ",", "\<\"1 / 45\"\>", 
         ",", "\<\"2.22%\"\>", ",", "\<\"1.44%\"\>", 
         ",", "\<\"1.55 (0.04, 8.19)\"\>", ",", "\<\"3 (0.08, 15.91)\"\>"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"STAT Mortality Category 3\"\>", ",", "\<\"1 / 13\"\>", 
         ",", "\<\"7.69%\"\>", ",", "\<\"3.5%\"\>", 
         ",", "\<\"2.2 (0.06, 10.31)\"\>", 
         ",", "\<\"7.36 (0.19, 34.46)\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"STAT Mortality Category 4\"\>", ",", "\<\"0 / 20\"\>", 
         ",", "\<\"0%\"\>", ",", "\<\"5.65%\"\>", ",", "\<\"0 (0, 2.98)\"\>", 
         ",", "\<\"0 (0, 23.34)\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"STAT Mortality Category 5\"\>", ",", "\<\"0 / 8\"\>", 
         ",", "\<\"0%\"\>", ",", "\<\"13.55%\"\>", ",", "\<\"0 (0, 2.73)\"\>",
          ",", "\<\"0 (0, 40.8)\"\>"}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.924472445143917*^9, 3.924474411656707*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"c6c3c87b-b157-4609-83e2-cf8871525a83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Length", ",", "%315"}], "]"}]], "Input",
 CellChangeTimes->{{3.924472555470829*^9, 3.924472561319625*^9}, {
  3.924472656383087*^9, 3.92447265933252*^9}},
 NumberMarks->False,
 CellLabel->
  "In[324]:=",ExpressionUUID->"3acdee3a-c27c-4596-a01a-641d392f4623"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{
  3.924472448322139*^9, {3.9244725565688477`*^9, 3.924472561645602*^9}, 
   3.924472659708419*^9},
 CellLabel->
  "Out[324]=",ExpressionUUID->"90de4fca-a47d-423f-bd50-373878aaaab5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "stateData", "]"}]], "Input",
 CellChangeTimes->{{3.9244725815503807`*^9, 3.924472585418419*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"e5bcf4b7-9d85-4817-9bf3-0b7a57104c08"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.9244725857863283`*^9},
 CellLabel->
  "Out[321]=",ExpressionUUID->"37bb83b8-f8ad-4109-b961-aa1bd21a684b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"header", " ", "=", " ", 
  RowBox[{
   RowBox[{"stateData", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9244692134024773`*^9, 3.924469226361567*^9}, {
  3.924469593184319*^9, 3.924469596214013*^9}, {3.924469869346797*^9, 
  3.924469871396682*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"7ee9dc88-0932-4a41-b546-72a4ee566cec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Population: Neonates, Infants, Children & Adults\"\>", 
   ",", "\<\"# / Eligible\"\>", ",", "\<\"Observed\"\>", 
   ",", "\<\"Expected\"\>", ",", "\<\"O/E Ratio (95% CI)\"\>", 
   ",", "\<\"Adj. Rate (95% CI)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.9244699239189777`*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"409c27bc-fa1d-43a3-8d3d-b86e3dc80041"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"body", " ", "=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"stateData", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9244699195748167`*^9, 3.924469920943499*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"b652ff68-a867-4b69-b403-c3dc7a3849c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Overall\"\>", ",", "\<\"2 / 248\"\>", ",", "\<\"0.81%\"\>", 
     ",", "\<\"1.71%\"\>", ",", "\<\"0.47 (0, 1.21)\"\>", 
     ",", "\<\"1.25 (0, 3.21)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 1\"\>", ",", "\<\"0 / 162\"\>", 
     ",", "\<\"0%\"\>", ",", "\<\"0.57%\"\>", ",", "\<\"0 (0, 3.94)\"\>", 
     ",", "\<\"0 (0, 2.54)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 2\"\>", ",", "\<\"1 / 45\"\>", 
     ",", "\<\"2.22%\"\>", ",", "\<\"1.44%\"\>", 
     ",", "\<\"1.55 (0.04, 8.19)\"\>", ",", "\<\"3 (0.08, 15.91)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 3\"\>", ",", "\<\"1 / 13\"\>", 
     ",", "\<\"7.69%\"\>", ",", "\<\"3.5%\"\>", 
     ",", "\<\"2.2 (0.06, 10.31)\"\>", ",", "\<\"7.36 (0.19, 34.46)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 4\"\>", ",", "\<\"0 / 20\"\>", 
     ",", "\<\"0%\"\>", ",", "\<\"5.65%\"\>", ",", "\<\"0 (0, 2.98)\"\>", 
     ",", "\<\"0 (0, 23.34)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 5\"\>", ",", "\<\"0 / 8\"\>", 
     ",", "\<\"0%\"\>", ",", "\<\"13.55%\"\>", ",", "\<\"0 (0, 2.73)\"\>", 
     ",", "\<\"0 (0, 40.8)\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9244699265042477`*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"f5ed9a4c-d9b8-47f2-a63b-2d53e64fe5a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", " ", "=", " ", 
  RowBox[{"PrependTo", "[", 
   RowBox[{"body", ",", " ", "header"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924469274762182*^9, 3.924469358639976*^9}, {
  3.92446941239574*^9, 3.924469413491156*^9}, {3.924469645941906*^9, 
  3.924469646908145*^9}, {3.924469885528323*^9, 3.924469891521196*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"9b0aa657-f683-4804-9b49-8b46d71dde85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Population: Neonates, Infants, Children & Adults\"\>", 
     ",", "\<\"# / Eligible\"\>", ",", "\<\"Observed\"\>", 
     ",", "\<\"Expected\"\>", ",", "\<\"O/E Ratio (95% CI)\"\>", 
     ",", "\<\"Adj. Rate (95% CI)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Overall\"\>", ",", "\<\"2 / 248\"\>", ",", "\<\"0.81%\"\>", 
     ",", "\<\"1.71%\"\>", ",", "\<\"0.47 (0, 1.21)\"\>", 
     ",", "\<\"1.25 (0, 3.21)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 1\"\>", ",", "\<\"0 / 162\"\>", 
     ",", "\<\"0%\"\>", ",", "\<\"0.57%\"\>", ",", "\<\"0 (0, 3.94)\"\>", 
     ",", "\<\"0 (0, 2.54)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 2\"\>", ",", "\<\"1 / 45\"\>", 
     ",", "\<\"2.22%\"\>", ",", "\<\"1.44%\"\>", 
     ",", "\<\"1.55 (0.04, 8.19)\"\>", ",", "\<\"3 (0.08, 15.91)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 3\"\>", ",", "\<\"1 / 13\"\>", 
     ",", "\<\"7.69%\"\>", ",", "\<\"3.5%\"\>", 
     ",", "\<\"2.2 (0.06, 10.31)\"\>", ",", "\<\"7.36 (0.19, 34.46)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 4\"\>", ",", "\<\"0 / 20\"\>", 
     ",", "\<\"0%\"\>", ",", "\<\"5.65%\"\>", ",", "\<\"0 (0, 2.98)\"\>", 
     ",", "\<\"0 (0, 23.34)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 5\"\>", ",", "\<\"0 / 8\"\>", 
     ",", "\<\"0%\"\>", ",", "\<\"13.55%\"\>", ",", "\<\"0 (0, 2.73)\"\>", 
     ",", "\<\"0 (0, 40.8)\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.924469930324041*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"4b23e961-3175-489d-9418-71dc09348f5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"5", ",", " ", "2"}], "}"}], " ", "==", " ", 
  RowBox[{"{", 
   RowBox[{"5", ",", " ", "2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.924472808399797*^9, 3.924472821588258*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"3679b7a1-b751-418f-97b0-6bd66dac7b76"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.9244728153415937`*^9, 3.924472821886853*^9}},
 CellLabel->
  "Out[327]=",ExpressionUUID->"e1e59f01-2c3f-4dab-ba5b-076078ea9f12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final", "Section",
 CellChangeTimes->{{3.924470096678626*^9, 
  3.9244701111241407`*^9}},ExpressionUUID->"1f2729db-8c56-487e-bf37-\
7ddb5e9785c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"states", " ", "=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      TemplateBox[{"\"abbreviation\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"AdministrativeDivision\"", ",", 
            "\"StateAbbreviation\""}], "]"}], 
        "\"EntityProperty[\\\"AdministrativeDivision\\\", \
\\\"StateAbbreviation\\\"]\""},
       "EntityProperty"], "]"}], "&"}], ",", 
    RowBox[{"EntityList", "[", 
     TemplateBox[{"\"all US states with District of Columbia\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{"\"AdministrativeDivision\"", ",", "\"AllUSStatesPlusDC\""}],
          "]"}], "\"EntityClass[\\\"AdministrativeDivision\\\", \
\\\"AllUSStatesPlusDC\\\"]\"", "\"administrative divisions\""},
      "EntityClass"], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"942f965f-4b77-4ff6-93af-cda95cbcbf6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AL\"\>", ",", "\<\"AK\"\>", ",", "\<\"AZ\"\>", 
   ",", "\<\"AR\"\>", ",", "\<\"CA\"\>", ",", "\<\"CO\"\>", ",", "\<\"CT\"\>",
    ",", "\<\"DE\"\>", ",", "\<\"DC\"\>", ",", "\<\"FL\"\>", 
   ",", "\<\"GA\"\>", ",", "\<\"HI\"\>", ",", "\<\"ID\"\>", ",", "\<\"IL\"\>",
    ",", "\<\"IN\"\>", ",", "\<\"IA\"\>", ",", "\<\"KS\"\>", 
   ",", "\<\"KY\"\>", ",", "\<\"LA\"\>", ",", "\<\"ME\"\>", ",", "\<\"MD\"\>",
    ",", "\<\"MA\"\>", ",", "\<\"MI\"\>", ",", "\<\"MN\"\>", 
   ",", "\<\"MS\"\>", ",", "\<\"MO\"\>", ",", "\<\"MT\"\>", ",", "\<\"NE\"\>",
    ",", "\<\"NV\"\>", ",", "\<\"NH\"\>", ",", "\<\"NJ\"\>", 
   ",", "\<\"NM\"\>", ",", "\<\"NY\"\>", ",", "\<\"NC\"\>", ",", "\<\"ND\"\>",
    ",", "\<\"OH\"\>", ",", "\<\"OK\"\>", ",", "\<\"OR\"\>", 
   ",", "\<\"PA\"\>", ",", "\<\"RI\"\>", ",", "\<\"SC\"\>", ",", "\<\"SD\"\>",
    ",", "\<\"TN\"\>", ",", "\<\"TX\"\>", ",", "\<\"UT\"\>", 
   ",", "\<\"VT\"\>", ",", "\<\"VA\"\>", ",", "\<\"WA\"\>", ",", "\<\"WV\"\>",
    ",", "\<\"WI\"\>", ",", "\<\"WY\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.924521526662877*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"a5bcdfee-60e5-46a7-afd2-238b27efa2eb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"getStateLink", "[", "state_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "stateLinks", ",", "conLinks", ",", "xml", ",", "locXML", ",", "locs"}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"stateLinks", " ", "=", " ", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
        "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=\>\
\"", "<>", "state"}], ",", "\"\<Hyperlinks\>\""}], "]"}]}], ";", "\n", 
     RowBox[{"Pause", "[", "1", "]"}], ";", "\n", 
     RowBox[{"conLinks", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"stateLinks", ",", " ", 
        RowBox[{
         RowBox[{"StringContainsQ", "[", 
          RowBox[{"#1", ",", "\"\<congenital\>\""}], "]"}], "&"}]}], "]"}]}], 
     ";", "\n", 
     RowBox[{"xml", "  ", "=", "  ", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
        "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=\>\
\"", "<>", "state"}], ",", " ", "\"\<XMLObject\>\""}], "]"}]}], ";", "\n", 
     RowBox[{"locXML", " ", "=", " ", 
      RowBox[{"Cases", "[", 
       RowBox[{"xml", ",", "  ", 
        RowBox[{"XMLElement", "[", 
         RowBox[{"\"\<div\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<search--location\>\""}], 
           "}"}], ",", 
          RowBox[{"{", "_String", "}"}]}], "]"}], ",", "  ", "Infinity"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"locs", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"Last", "[", "#1", "]"}], "]"}], " ", "&"}], " ", ")"}], 
       " ", "/@", " ", "locXML"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{"conLinks", ",", " ", "locs"}], "}"}]}]}], "\n", 
   "]"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.924479183091821*^9, 3.924479190699448*^9}, {
   3.92447924967704*^9, 3.924479379399721*^9}, {3.9244794172503443`*^9, 
   3.924479558234484*^9}, {3.9244795943103313`*^9, 3.924479640305515*^9}, {
   3.924479679480857*^9, 3.924479751907526*^9}, {3.924479799766535*^9, 
   3.924479812726883*^9}, {3.924479854759853*^9, 3.924479867261799*^9}, {
   3.924479897806383*^9, 3.924479901336654*^9}, {3.924479948281798*^9, 
   3.924479981326689*^9}, 3.924480077188056*^9, {3.924521264929435*^9, 
   3.924521327589119*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6f157a5d-c738-45b3-b1bc-95e7e1897200"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getHospitalNames", "[", "state_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "stateData", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Pause", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"stateData", " ", "=", " ", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
        "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=\>\
\"", "<>", "state"}], ",", "\"\<Data\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"stateData", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.924521336078003*^9, 3.924521395890283*^9}, {
  3.924521433664948*^9, 3.9245214689224157`*^9}, {3.924521538851707*^9, 
  3.9245215394248533`*^9}, {3.924521850310286*^9, 3.92452189458996*^9}, {
  3.924521965053338*^9, 3.924522039031268*^9}, {3.924522083288084*^9, 
  3.924522108890552*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"9f05898e-c65c-4286-80bf-2f6943b0cea3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stateData", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{
    "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=\>\"", 
     "<>", "\"\<NY\>\""}], ",", "\"\<Data\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924521806135148*^9, 3.9245218294641457`*^9}, {
  3.924521904192795*^9, 3.9245219330022707`*^9}, {3.924522052888036*^9, 
  3.924522053135392*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"4b64d464-7b74-4d32-87ca-7a59818beceb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Explanation of Star Ratings\"\>", 
     ",", "\<\"Congenital Heart\"\>", 
     ",", "\<\"Explanation of Star Ratings\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Consent Forms\"\>", ",", "\<\"FAQs\"\>", 
       ",", "\<\"Glossary\"\>", ",", "\<\"Toolkit\"\>", 
       ",", "\<\"Additional Info\"\>", ",", "\<\"Contact\"\>"}], "}"}], 
     ",", "\<\"Patient Information\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Name\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Albany Medical Center Albany, New York \"\>", 
       ",", "\<\"Cohen Children's Medical Center of New York New Hyde Park, \
New York \"\>", 
       ",", "\<\"Hassenfeld Children's Hospital at NYU Langone New York, New \
York \"\>", 
       ",", "\<\"Montefiore Medical Center & Albert Einstein College of \
Medicine New York, New York \"\>", 
       ",", "\<\"Mount Sinai Hospital New York, New York \"\>", 
       ",", "\<\"New York Presbyterian / Morgan Stanley Children's Hospital \
New York, New York \"\>", 
       ",", "\<\"University of Rochester Medical Center Rochester, New York \
\"\>"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.92452181186672*^9, 3.9245218303695917`*^9}, {
   3.924521906011263*^9, 3.924521934264583*^9}, 3.924522054024157*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"f180baab-f658-44e2-adee-e365e140a55d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stateData", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.924521909050332*^9, 3.924521943599578*^9}, {
  3.924522048332775*^9, 3.92452204940483*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"779aefe2-6cc0-4a45-b284-18136a1b0a87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Albany Medical Center Albany, New York \"\>", 
   ",", "\<\"Cohen Children's Medical Center of New York New Hyde Park, New \
York \"\>", 
   ",", "\<\"Hassenfeld Children's Hospital at NYU Langone New York, New York \
\"\>", ",", "\<\"Montefiore Medical Center & Albert Einstein College of \
Medicine New York, New York \"\>", 
   ",", "\<\"Mount Sinai Hospital New York, New York \"\>", 
   ",", "\<\"New York Presbyterian / Morgan Stanley Children's Hospital New \
York, New York \"\>", 
   ",", "\<\"University of Rochester Medical Center Rochester, New York \
\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.9245219161511908`*^9, 3.9245219441898403`*^9}, {
  3.924522049673053*^9, 3.924522056684923*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"498e5933-888e-4987-9eab-0a62652d49a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getHospitalNames", "[", "\"\<AL\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.924521586208997*^9, 3.924521600268795*^9}, {
  3.924521708759766*^9, 3.9245217105916367`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"3e92a295-8677-4f69-992b-1b24cfb98067"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"\\\\\\\"The Children's Hospital \
of Alabama Birmingham, Alabama \\\\\\\"\\\", \\\"\[LeftDoubleBracket]\\\", \\\
\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of \
object.\"", 2, 15, 6, 27595891596647540851, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.924521714125407*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"e1ed659c-7fe9-4c04-a4f2-83ac08bbc6ae"],

Cell[BoxData[
 RowBox[{"\<\"The Children's Hospital of Alabama Birmingham, Alabama \"\>", 
  "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.924521635776681*^9, 3.924521714219634*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"504db5b4-a4ad-422b-84e1-e799979caa5a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.924521703353251*^9, 
  3.9245217057269793`*^9}},ExpressionUUID->"d14511df-79c4-446a-8ab7-\
05fcf0685165"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hospitalNames", " ", "=", " ", 
  RowBox[{"getHospitalNames", "/@", " ", "states"}]}]], "Input",
 CellChangeTimes->{{3.924521461213093*^9, 3.9245214864120502`*^9}, {
  3.924521554238203*^9, 3.924521557887967*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2f0317e3-9b7f-4113-83d1-163282ed2cfe"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"\\\\\\\"Congenital \
Heart\\\\\\\"\\\", \\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\
\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 29, 8, 
   27595891596647540851, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.924521559916456*^9, 3.924522122832955*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"59d46ff7-b77d-44cf-845e-7e7d40681f45"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"\\\\\\\"Congenital \
Heart\\\\\\\"\\\", \\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\
\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 29, 9, 
   27595891596647540851, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.924521559916456*^9, 3.924522138290925*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"93583a46-b61e-4ad8-9aef-bf9ed471dc39"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"\\\\\\\"Congenital \
Heart\\\\\\\"\\\", \\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\
\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 29, 10, 
   27595891596647540851, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.924521559916456*^9, 3.924522143965193*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"2dd6faf9-d677-4726-8673-7e845f16f7db"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 29, 11, 27595891596647540851, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.924521559916456*^9, 3.924522144093936*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"6654fd76-149a-4db1-84ec-9e0aa831d756"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["hospitalNames2"], "Input",
 CellChangeTimes->{{3.924522562046397*^9, 3.924522593289255*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"3183ef44-c26b-4114-9c15-a1db6b70bf25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The Children's Hospital of Alabama Birmingham, Alabama \"\>", 
   ",", "\<\"Phoenix Children's Hospital Phoenix, Arizona \"\>", 
   ",", "\<\"Arkansas Children's Hospital Little Rock, Arkansas \"\>", 
   ",", "\<\"Cedars-Sinai Medical Center Los Angeles, California \"\>", 
   ",", "\<\"Children's Hospital of Los Angeles Los Angeles, California \"\>",
    ",", "\<\"CHOC Children's Hospital Orange, California \"\>", 
   ",", "\<\"Loma Linda University Medical Center and Children's Hospital \
Loma Linda, California \"\>", 
   ",", "\<\"Lucile Packard Children's Hospital Stanford Stanford, California \
\"\>", ",", "\<\"Memorial Care Miller Children's & Women's Hospital Long \
Beach, California \"\>", 
   ",", "\<\"Rady Children's Hospital San Diego San Diego, California \"\>", 
   ",", "\<\"Sutter Medical Center, Sacramento: Women's and Children's Center \
Sacramento, California \"\>", 
   ",", "\<\"UC Davis Medical Center Sacramento, California \"\>", 
   ",", "\<\"UCLA Mattel Children's Hospital Los Angeles, California \"\>", 
   ",", "\<\"UCSF Benioff Children's Hospital San Francisco, California \"\>",
    ",", "\<\"Children's Hospital Colorado Aurora, Colorado \"\>", 
   ",", "\<\"Connecticut Children's Medical Center Hartford, Connecticut \
\"\>", ",", "\<\"Yale-New Haven Children's Hospital New Haven, Connecticut \"\
\>", ",", "\<\"Alfred I. duPont Hospital for Children Wilmington, Delaware \"\
\>", ",", "\<\"Children\[CloseCurlyQuote]s National Hospital Washington, \
District of Columbia \"\>", 
   ",", "\<\"Arnold Palmer Medical Center Orlando, Florida \"\>", 
   ",", "\<\"Florida Hospital for Children Orlando, Florida \"\>", 
   ",", "\<\"Jackson Memorial Hospital Miami, Florida \"\>", 
   ",", "\<\"Joe DiMaggio Children's Hospital Hollywood, Florida \"\>", 
   ",", "\<\"Johns Hopkins All Children\[CloseCurlyQuote]s Hospital St. \
Petersburg, Florida \"\>", 
   ",", "\<\"Nemours Children's Hospital Orlando, Florida \"\>", 
   ",", "\<\"Nicklaus Children\[CloseCurlyQuote]s Hospital Miami, Florida \
\"\>", ",", "\<\"St. Joseph's Children's Hospital BayCare Health System \
Tampa, Florida \"\>", 
   ",", "\<\"UF Health Shands Children's Hospital Gainesville, Florida \"\>", 
   ",", "\<\"Wolfson Children's Hospital Jacksonville, Florida \"\>", 
   ",", "\<\"Children's Healthcare of Atlanta Atlanta, Georgia \"\>", 
   ",", "\<\"Kapiolani Medical Center for Women & Children Honolulu, Hawaii \
\"\>", ",", "\<\"Advocate Children\[CloseCurlyQuote]s Hospital Oak Lawn, \
Illinois \"\>", 
   ",", "\<\"Ann & Robert H. Lurie Children\[CloseCurlyQuote]s Hospital of \
Chicago Chicago, Illinois \"\>", 
   ",", "\<\"Peyton Manning Children's Hospital at Ascension St. Vincent \
Indianapolis, Indiana \"\>", 
   ",", "\<\"Riley Hospital for Children at Indiana University Health \
Indianapolis, Indiana \"\>", 
   ",", "\<\"State University of Iowa Iowa City, Iowa \"\>", 
   ",", "\<\"Norton Children's Hospital Louisville, Kentucky \"\>", 
   ",", "\<\"University of Kentucky Healthcare Lexington, Kentucky \"\>", 
   ",", "\<\"Children's Hospital New Orleans New Orleans, Louisiana \"\>", 
   ",", "\<\"Ochsner Health System New Orleans, Louisiana \"\>", 
   ",", "\<\"Maine Medical Center Portland, Maine \"\>", 
   ",", "\<\"The Johns Hopkins Hospital Baltimore, Maryland \"\>", 
   ",", "\<\"University of Maryland Children's Hospital Baltimore, Maryland \
\"\>", ",", "\<\"Boston Children's Hospital Boston, Massachusetts \"\>", 
   ",", "\<\"C.S. Mott Children's Hospital - University of Michigan Ann \
Arbor, Michigan \"\>", 
   ",", "\<\"Children's Hospital of Michigan Detroit, Michigan \"\>", 
   ",", "\<\"Helen DeVos Children's Hospital Grand Rapids, Michigan \"\>", 
   ",", "\<\"Mayo Clinic Hospital \[Dash] Rochester & Children's Hospitals \
and Clinics of Minnesota \[Dash] Minneapolis Rochester, Minnesota \"\>", 
   ",", "\<\"University of Minnesota Masonic Children's Hospital Minneapolis, \
Minnesota \"\>", 
   ",", "\<\"Children's of Mississippi Jackson, Mississippi \"\>", 
   ",", "\<\"SSM Health Cardinal Glennon Children's Hospital St. Louis, \
Missouri \"\>", 
   ",", "\<\"St. Louis Children's Hospital St. Louis, Missouri \"\>", 
   ",", "\<\"The Children's Mercy Hospital Kansas City, Missouri \"\>", 
   ",", "\<\"Children's Hospital & Medical Center Omaha, Nebraska \"\>", 
   ",", "\<\"Sunrise Hospital and Medical Center / Sunrise Children's \
Hospital Las Vegas, Nevada \"\>", 
   ",", "\<\"Newark Beth Israel Medical Center Newark, New Jersey \"\>", 
   ",", "\<\"Albany Medical Center Albany, New York \"\>", 
   ",", "\<\"Cohen Children's Medical Center of New York New Hyde Park, New \
York \"\>", 
   ",", "\<\"Hassenfeld Children's Hospital at NYU Langone New York, New York \
\"\>", ",", "\<\"Montefiore Medical Center & Albert Einstein College of \
Medicine New York, New York \"\>", 
   ",", "\<\"Mount Sinai Hospital New York, New York \"\>", 
   ",", "\<\"New York Presbyterian / Morgan Stanley Children's Hospital New \
York, New York \"\>", 
   ",", "\<\"University of Rochester Medical Center Rochester, New York \"\>",
    ",", "\<\"CMC-Levine Children's Hospital Charlotte, North Carolina \"\>", 
   ",", "\<\"Duke University Hospital Durham, North Carolina \"\>", 
   ",", "\<\"University of North Carolina Hospitals at Chapel Hill Chapel \
Hill, North Carolina \"\>", 
   ",", "\<\"Wake Forest University Baptist Medical Center Winston Salem, \
North Carolina \"\>", 
   ",", "\<\"Akron Children\[CloseCurlyQuote]s Hospital Akron, Ohio \"\>", 
   ",", "\<\"Cincinnati Children's Hospital Medical Center Cincinnati, Ohio \
\"\>", ",", "\<\"Cleveland Clinic Cleveland, Ohio \"\>", 
   ",", "\<\"Nationwide Children's Hospital Columbus, Ohio \"\>", 
   ",", "\<\"Rainbow Babies & Children's Hospital Cleveland, Ohio \"\>", 
   ",", "\<\"Oklahoma Children's Hospital - OU Health Oklahoma City, Oklahoma \
\"\>", ",", "\<\"Doernbecher Children\[CloseCurlyQuote]s Hospital/Oregon \
Health & Science University Portland, Oregon \"\>", 
   ",", "\<\"Randall Children's Hospital at Legacy Emanuel Portland, Oregon \
\"\>", ",", "\<\"Children's Hospital of Philadelphia Philadelphia, \
Pennsylvania \"\>", 
   ",", "\<\"Children's Hospital of Pittsburgh Pittsburgh, Pennsylvania \"\>",
    ",", "\<\"Geisinger Medical Center Danville, Pennsylvania \"\>", 
   ",", "\<\"Penn State Children's Hospital Hershey, Pennsylvania \"\>", 
   ",", "\<\"MUSC Children's Hospital Charleston, South Carolina \"\>", 
   ",", "\<\"Le Bonheur Children's Hospital Memphis, Tennessee \"\>", 
   ",", "\<\"Monroe Carell Jr. Children's Hospital at Vanderbilt Nashville, \
Tennessee \"\>", 
   ",", "\<\"Children's Health Medical Center Dallas Dallas, Texas \"\>", 
   ",", "\<\"Children's Hospital of San Antonio San Antonio, Texas \"\>", 
   ",", "\<\"Children's Memorial Hermann Hospital Houston, Texas \"\>", 
   ",", "\<\"Cook Children's Medical Center Fort Worth, Texas \"\>", 
   ",", "\<\"Dell Children\[CloseCurlyQuote]s Medical Center Austin, Texas \"\
\>", ",", "\<\"Driscoll Children's Hospital Corpus Christi, Texas \"\>", 
   ",", "\<\"Medical City Children's Hospital Dallas, Texas \"\>", 
   ",", "\<\"Texas Children's Hospital Houston, Texas \"\>", 
   ",", "\<\"University Health Women's & Children's Hospital San Antonio, \
Texas \"\>", ",", "\<\"Primary Children's Hospital Salt Lake City, Utah \"\>",
    ",", "\<\"Children's Hospital of Richmond Richmond, Virginia \"\>", 
   ",", "\<\"Children's Hospital of the King's Daughters Norfolk, Virginia \"\
\>", ",", "\<\"Inova L. J. Murphy Children's Hospital Falls Church, Virginia \
\"\>", ",", "\<\"University of Virginia Children\[CloseCurlyQuote]s Hospital \
Charlottesville, Virginia \"\>", 
   ",", "\<\"Providence Sacred Heart Medical Center and Children's Hospital \
Spokane, Washington \"\>", 
   ",", "\<\"Seattle Children's Hospital Seattle, Washington \"\>", 
   ",", "\<\"WVU Medicine Children's Morgantown, West Virginia \"\>", 
   ",", "\<\"American Family Children's Hospital-University of Wisconsin \
Hospitals and Clinics Madison, Wisconsin \"\>", 
   ",", "\<\"Children's Wisconsin Milwaukee, Wisconsin \"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9245225696456842`*^9, 3.9245225936948757`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"afa04c54-1c0b-475c-a495-3dfa45be20b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Flatten", "[", "hospitalNames", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.924522702768773*^9, 3.9245227103536367`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"c0668365-d276-4b5f-bfbd-571fc3199d51"],

Cell[BoxData["112"], "Output",
 CellChangeTimes->{3.924522710733117*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"aeb05773-0027-4096-bf9d-d0d3ba739f37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "/@", 
  RowBox[{"Flatten", "[", "hospitalNames", "]"}]}]], "Input",
 CellChangeTimes->{{3.924522627732716*^9, 3.924522670407661*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"69df9b90-4892-4f55-a067-ef2ae40bd956"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "String", ",", "Part", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "Part", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "Part", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "Part", ",", "String", ",", "String", ",", "Part", ",", 
   "String", ",", "Part", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "Part", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "Part", ",", "String", ",", "Part", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "Part", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "String", ",", "String", ",", "String", ",", "String", ",", 
   "String", ",", "Part"}], "}"}]], "Output",
 CellChangeTimes->{{3.924522629326941*^9, 3.924522671040236*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"ae88cdd4-3253-4cc3-839e-958d48219ba6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"hospitalNames2", " ", "=", " ", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "hospitalNames", "]"}], ",", " ", "_Part"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924522435063587*^9, 3.924522462767036*^9}, {
   3.9245224961010036`*^9, 3.924522533756727*^9}, 3.924522682085671*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"0cc46931-6483-4589-8312-5d069ae2a8f1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.924522684737995*^9, 
  3.924522685762974*^9}},ExpressionUUID->"338f5ea6-2f6c-4cae-90e8-\
b8b7c38b5b56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "hospitalNames2", "]"}]], "Input",
 CellChangeTimes->{{3.9245225364857903`*^9, 3.924522542507731*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"b3544691-2058-4e0f-870b-e1a4962e74fe"],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{
  3.924521532930438*^9, 3.924521634050434*^9, 3.924522191331558*^9, {
   3.9245224474471416`*^9, 3.924522463091563*^9}, {3.924522498794335*^9, 
   3.924522542836576*^9}, 3.924522688203331*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"bf82e625-36ab-498c-9e4c-4bd7615d3541"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.924521444243655*^9, 
  3.9245214455238743`*^9}},ExpressionUUID->"3119d0a7-fd1a-473c-ac8a-\
6a2274a96193"],

Cell[BoxData[
 RowBox[{"linksAndLocs", " ", "=", " ", 
  RowBox[{"getStateLink", " ", "/@", " ", "states"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.924480188994404*^9, 3.924480220926002*^9}, 
   3.924480783010152*^9, 3.924480824030233*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"39104294-1a8e-4b3a-9e4f-1584beb6de63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"locs", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"linksAndLocs", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.924481073772602*^9, 3.924481092966512*^9}, {
  3.924481354203293*^9, 3.924481370468788*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"cb8d9d0f-2ba9-45d6-a6c9-c634193841d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Birmingham, Alabama\"\>", ",", "\<\"Phoenix, Arizona\"\>", 
   ",", "\<\"Little Rock, Arkansas\"\>", 
   ",", "\<\"Los Angeles, California\"\>", 
   ",", "\<\"Los Angeles, California\"\>", ",", "\<\"Orange, California\"\>", 
   ",", "\<\"Loma Linda, California\"\>", ",", "\<\"Stanford, California\"\>",
    ",", "\<\"Long Beach, California\"\>", 
   ",", "\<\"San Diego, California\"\>", 
   ",", "\<\"Sacramento, California\"\>", 
   ",", "\<\"Sacramento, California\"\>", 
   ",", "\<\"Los Angeles, California\"\>", 
   ",", "\<\"San Francisco, California\"\>", ",", "\<\"Aurora, Colorado\"\>", 
   ",", "\<\"Hartford, Connecticut\"\>", 
   ",", "\<\"New Haven, Connecticut\"\>", ",", "\<\"Wilmington, Delaware\"\>",
    ",", "\<\"Washington, District of Columbia\"\>", 
   ",", "\<\"Orlando, Florida\"\>", ",", "\<\"Orlando, Florida\"\>", 
   ",", "\<\"Miami, Florida\"\>", ",", "\<\"Hollywood, Florida\"\>", 
   ",", "\<\"St. Petersburg, Florida\"\>", ",", "\<\"Orlando, Florida\"\>", 
   ",", "\<\"Miami, Florida\"\>", ",", "\<\"Tampa, Florida\"\>", 
   ",", "\<\"Gainesville, Florida\"\>", ",", "\<\"Jacksonville, Florida\"\>", 
   ",", "\<\"Atlanta, Georgia\"\>", ",", "\<\"Honolulu, Hawaii\"\>", 
   ",", "\<\"Oak Lawn, Illinois\"\>", ",", "\<\"Chicago, Illinois\"\>", 
   ",", "\<\"Indianapolis, Indiana\"\>", ",", "\<\"Indianapolis, Indiana\"\>",
    ",", "\<\"Iowa City, Iowa\"\>", ",", "\<\"Louisville, Kentucky\"\>", 
   ",", "\<\"Lexington, Kentucky\"\>", ",", "\<\"New Orleans, Louisiana\"\>", 
   ",", "\<\"New Orleans, Louisiana\"\>", ",", "\<\"Portland, Maine\"\>", 
   ",", "\<\"Baltimore, Maryland\"\>", ",", "\<\"Baltimore, Maryland\"\>", 
   ",", "\<\"Boston, Massachusetts\"\>", ",", "\<\"Ann Arbor, Michigan\"\>", 
   ",", "\<\"Detroit, Michigan\"\>", ",", "\<\"Grand Rapids, Michigan\"\>", 
   ",", "\<\"Rochester, Minnesota\"\>", ",", "\<\"Minneapolis, Minnesota\"\>",
    ",", "\<\"Jackson, Mississippi\"\>", ",", "\<\"St. Louis, Missouri\"\>", 
   ",", "\<\"St. Louis, Missouri\"\>", ",", "\<\"Kansas City, Missouri\"\>", 
   ",", "\<\"Omaha, Nebraska\"\>", ",", "\<\"Las Vegas, Nevada\"\>", 
   ",", "\<\"Newark, New Jersey\"\>", ",", "\<\"Albany, New York\"\>", 
   ",", "\<\"New Hyde Park, New York\"\>", ",", "\<\"New York, New York\"\>", 
   ",", "\<\"New York, New York\"\>", ",", "\<\"New York, New York\"\>", 
   ",", "\<\"New York, New York\"\>", ",", "\<\"Rochester, New York\"\>", 
   ",", "\<\"Charlotte, North Carolina\"\>", 
   ",", "\<\"Durham, North Carolina\"\>", 
   ",", "\<\"Chapel Hill, North Carolina\"\>", 
   ",", "\<\"Winston Salem, North Carolina\"\>", ",", "\<\"Akron, Ohio\"\>", 
   ",", "\<\"Cincinnati, Ohio\"\>", ",", "\<\"Cleveland, Ohio\"\>", 
   ",", "\<\"Columbus, Ohio\"\>", ",", "\<\"Cleveland, Ohio\"\>", 
   ",", "\<\"Oklahoma City, Oklahoma\"\>", ",", "\<\"Portland, Oregon\"\>", 
   ",", "\<\"Portland, Oregon\"\>", ",", "\<\"Philadelphia, Pennsylvania\"\>",
    ",", "\<\"Pittsburgh, Pennsylvania\"\>", 
   ",", "\<\"Danville, Pennsylvania\"\>", 
   ",", "\<\"Hershey, Pennsylvania\"\>", 
   ",", "\<\"Charleston, South Carolina\"\>", 
   ",", "\<\"Memphis, Tennessee\"\>", ",", "\<\"Nashville, Tennessee\"\>", 
   ",", "\<\"Dallas, Texas\"\>", ",", "\<\"San Antonio, Texas\"\>", 
   ",", "\<\"Houston, Texas\"\>", ",", "\<\"Fort Worth, Texas\"\>", 
   ",", "\<\"Austin, Texas\"\>", ",", "\<\"Corpus Christi, Texas\"\>", 
   ",", "\<\"Dallas, Texas\"\>", ",", "\<\"Houston, Texas\"\>", 
   ",", "\<\"San Antonio, Texas\"\>", ",", "\<\"Salt Lake City, Utah\"\>", 
   ",", "\<\"Richmond, Virginia\"\>", ",", "\<\"Norfolk, Virginia\"\>", 
   ",", "\<\"Falls Church, Virginia\"\>", 
   ",", "\<\"Charlottesville, Virginia\"\>", 
   ",", "\<\"Spokane, Washington\"\>", ",", "\<\"Seattle, Washington\"\>", 
   ",", "\<\"Morgantown, West Virginia\"\>", 
   ",", "\<\"Madison, Wisconsin\"\>", ",", "\<\"Milwaukee, Wisconsin\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.924481361038032*^9, 3.9244813711031237`*^9}, 
   3.9245229701493807`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"46ca6caa-4269-4ac2-bbd5-e5fdf6410365"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"links", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"linksAndLocs", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.924480865904939*^9, 3.924480898171738*^9}, {
  3.924481376590836*^9, 3.924481384321955*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"be7f3185-7f73-4412-9d40-67a17b9b9ed6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getData", "[", "link_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "stateData", ",", " ", "header", ",", " ", "body", ",", " ", "res"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Pause", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Enclose", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ConfirmBy", "[", 
        RowBox[{
         RowBox[{"stateData", " ", "=", " ", 
          RowBox[{"Import", "[", 
           RowBox[{"link", ",", " ", "\"\<Data\>\""}], "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"Length", ",", " ", "#"}], "]"}], "===", 
           RowBox[{"{", 
            RowBox[{"5", ",", " ", "2"}], "}"}]}], "&"}], ",", " ", "link"}], 
        "]"}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"header", " ", "=", " ", 
        RowBox[{
         RowBox[{"stateData", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"body", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"stateData", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"PrependTo", "[", 
        RowBox[{"body", ",", " ", "header"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.924469969053003*^9, 3.924470055976686*^9}, {
  3.924470119494688*^9, 3.924470145886897*^9}, {3.924470740783382*^9, 
  3.9244707461622972`*^9}, {3.924470953370668*^9, 3.924470955734234*^9}, {
  3.924471096276712*^9, 3.924471139926758*^9}, {3.924471226654913*^9, 
  3.924471278373115*^9}, {3.924471643986812*^9, 3.924471685096983*^9}, {
  3.9244718679239287`*^9, 3.92447187854932*^9}, {3.924471941380912*^9, 
  3.924472041419515*^9}, {3.924472123280302*^9, 3.924472151059855*^9}, {
  3.924472247955422*^9, 3.924472258881687*^9}, {3.9244724157407427`*^9, 
  3.924472427799926*^9}, {3.924472513599015*^9, 3.924472542690789*^9}, {
  3.924472668989351*^9, 3.92447272991783*^9}, {3.924472805049129*^9, 
  3.9244728747354813`*^9}, {3.9244729524376*^9, 3.924472953362309*^9}, {
  3.924480926282471*^9, 3.924480932126768*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"5ab0e81d-3fb7-4470-82b1-565dda569ba8"],

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"getData", "/@", " ", "links"}]}]], "Input",
 CellChangeTimes->{{3.924470821853955*^9, 3.9244708275251713`*^9}, {
  3.924470881011499*^9, 3.924470882020469*^9}, {3.92448116845018*^9, 
  3.9244811731945*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"2be97c3b-8c8d-419d-9591-f6629538c1ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toDrop", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], "/@", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"data", ",", " ", "Failure"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.924483062775934*^9, 3.924483213581353*^9}, {
  3.92448334627503*^9, 3.924483394557321*^9}, {3.924483891720778*^9, 
  3.924483929230433*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"19cb1139-87eb-48c6-a300-58c53ec0e201"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "60", "}"}], ",", 
   RowBox[{"{", "93", "}"}], ",", 
   RowBox[{"{", "97", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.924483213873662*^9, 3.924483354730136*^9, {3.9244833852366037`*^9, 
   3.924483394870966*^9}, {3.924483925535627*^9, 3.924483929516567*^9}, 
   3.924523115261982*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"8a9c85b9-727c-4323-9d85-67bd569a7218"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hospitalNames3", " ", "=", " ", 
  RowBox[{"Delete", "[", 
   RowBox[{"hospitalNames2", ",", "toDrop"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9245228261449013`*^9, 3.9245228488638983`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"67f430a0-e2fb-4525-8fdd-e19d47a6d28d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The Children's Hospital of Alabama Birmingham, Alabama \"\>", 
   ",", "\<\"Phoenix Children's Hospital Phoenix, Arizona \"\>", 
   ",", "\<\"Arkansas Children's Hospital Little Rock, Arkansas \"\>", 
   ",", "\<\"Cedars-Sinai Medical Center Los Angeles, California \"\>", 
   ",", "\<\"Children's Hospital of Los Angeles Los Angeles, California \"\>",
    ",", "\<\"CHOC Children's Hospital Orange, California \"\>", 
   ",", "\<\"Loma Linda University Medical Center and Children's Hospital \
Loma Linda, California \"\>", 
   ",", "\<\"Lucile Packard Children's Hospital Stanford Stanford, California \
\"\>", ",", "\<\"Memorial Care Miller Children's & Women's Hospital Long \
Beach, California \"\>", 
   ",", "\<\"Rady Children's Hospital San Diego San Diego, California \"\>", 
   ",", "\<\"Sutter Medical Center, Sacramento: Women's and Children's Center \
Sacramento, California \"\>", 
   ",", "\<\"UC Davis Medical Center Sacramento, California \"\>", 
   ",", "\<\"UCLA Mattel Children's Hospital Los Angeles, California \"\>", 
   ",", "\<\"UCSF Benioff Children's Hospital San Francisco, California \"\>",
    ",", "\<\"Children's Hospital Colorado Aurora, Colorado \"\>", 
   ",", "\<\"Connecticut Children's Medical Center Hartford, Connecticut \
\"\>", ",", "\<\"Yale-New Haven Children's Hospital New Haven, Connecticut \"\
\>", ",", "\<\"Alfred I. duPont Hospital for Children Wilmington, Delaware \"\
\>", ",", "\<\"Children\[CloseCurlyQuote]s National Hospital Washington, \
District of Columbia \"\>", 
   ",", "\<\"Arnold Palmer Medical Center Orlando, Florida \"\>", 
   ",", "\<\"Florida Hospital for Children Orlando, Florida \"\>", 
   ",", "\<\"Jackson Memorial Hospital Miami, Florida \"\>", 
   ",", "\<\"Joe DiMaggio Children's Hospital Hollywood, Florida \"\>", 
   ",", "\<\"Johns Hopkins All Children\[CloseCurlyQuote]s Hospital St. \
Petersburg, Florida \"\>", 
   ",", "\<\"Nemours Children's Hospital Orlando, Florida \"\>", 
   ",", "\<\"Nicklaus Children\[CloseCurlyQuote]s Hospital Miami, Florida \
\"\>", ",", "\<\"St. Joseph's Children's Hospital BayCare Health System \
Tampa, Florida \"\>", 
   ",", "\<\"UF Health Shands Children's Hospital Gainesville, Florida \"\>", 
   ",", "\<\"Wolfson Children's Hospital Jacksonville, Florida \"\>", 
   ",", "\<\"Children's Healthcare of Atlanta Atlanta, Georgia \"\>", 
   ",", "\<\"Kapiolani Medical Center for Women & Children Honolulu, Hawaii \
\"\>", ",", "\<\"Advocate Children\[CloseCurlyQuote]s Hospital Oak Lawn, \
Illinois \"\>", 
   ",", "\<\"Ann & Robert H. Lurie Children\[CloseCurlyQuote]s Hospital of \
Chicago Chicago, Illinois \"\>", 
   ",", "\<\"Peyton Manning Children's Hospital at Ascension St. Vincent \
Indianapolis, Indiana \"\>", 
   ",", "\<\"Riley Hospital for Children at Indiana University Health \
Indianapolis, Indiana \"\>", 
   ",", "\<\"State University of Iowa Iowa City, Iowa \"\>", 
   ",", "\<\"Norton Children's Hospital Louisville, Kentucky \"\>", 
   ",", "\<\"University of Kentucky Healthcare Lexington, Kentucky \"\>", 
   ",", "\<\"Children's Hospital New Orleans New Orleans, Louisiana \"\>", 
   ",", "\<\"Ochsner Health System New Orleans, Louisiana \"\>", 
   ",", "\<\"Maine Medical Center Portland, Maine \"\>", 
   ",", "\<\"The Johns Hopkins Hospital Baltimore, Maryland \"\>", 
   ",", "\<\"University of Maryland Children's Hospital Baltimore, Maryland \
\"\>", ",", "\<\"Boston Children's Hospital Boston, Massachusetts \"\>", 
   ",", "\<\"C.S. Mott Children's Hospital - University of Michigan Ann \
Arbor, Michigan \"\>", 
   ",", "\<\"Children's Hospital of Michigan Detroit, Michigan \"\>", 
   ",", "\<\"Helen DeVos Children's Hospital Grand Rapids, Michigan \"\>", 
   ",", "\<\"Mayo Clinic Hospital \[Dash] Rochester & Children's Hospitals \
and Clinics of Minnesota \[Dash] Minneapolis Rochester, Minnesota \"\>", 
   ",", "\<\"University of Minnesota Masonic Children's Hospital Minneapolis, \
Minnesota \"\>", 
   ",", "\<\"Children's of Mississippi Jackson, Mississippi \"\>", 
   ",", "\<\"SSM Health Cardinal Glennon Children's Hospital St. Louis, \
Missouri \"\>", 
   ",", "\<\"St. Louis Children's Hospital St. Louis, Missouri \"\>", 
   ",", "\<\"The Children's Mercy Hospital Kansas City, Missouri \"\>", 
   ",", "\<\"Children's Hospital & Medical Center Omaha, Nebraska \"\>", 
   ",", "\<\"Sunrise Hospital and Medical Center / Sunrise Children's \
Hospital Las Vegas, Nevada \"\>", 
   ",", "\<\"Newark Beth Israel Medical Center Newark, New Jersey \"\>", 
   ",", "\<\"Albany Medical Center Albany, New York \"\>", 
   ",", "\<\"Cohen Children's Medical Center of New York New Hyde Park, New \
York \"\>", 
   ",", "\<\"Hassenfeld Children's Hospital at NYU Langone New York, New York \
\"\>", ",", "\<\"Mount Sinai Hospital New York, New York \"\>", 
   ",", "\<\"New York Presbyterian / Morgan Stanley Children's Hospital New \
York, New York \"\>", 
   ",", "\<\"University of Rochester Medical Center Rochester, New York \"\>",
    ",", "\<\"CMC-Levine Children's Hospital Charlotte, North Carolina \"\>", 
   ",", "\<\"Duke University Hospital Durham, North Carolina \"\>", 
   ",", "\<\"University of North Carolina Hospitals at Chapel Hill Chapel \
Hill, North Carolina \"\>", 
   ",", "\<\"Wake Forest University Baptist Medical Center Winston Salem, \
North Carolina \"\>", 
   ",", "\<\"Akron Children\[CloseCurlyQuote]s Hospital Akron, Ohio \"\>", 
   ",", "\<\"Cincinnati Children's Hospital Medical Center Cincinnati, Ohio \
\"\>", ",", "\<\"Cleveland Clinic Cleveland, Ohio \"\>", 
   ",", "\<\"Nationwide Children's Hospital Columbus, Ohio \"\>", 
   ",", "\<\"Rainbow Babies & Children's Hospital Cleveland, Ohio \"\>", 
   ",", "\<\"Oklahoma Children's Hospital - OU Health Oklahoma City, Oklahoma \
\"\>", ",", "\<\"Doernbecher Children\[CloseCurlyQuote]s Hospital/Oregon \
Health & Science University Portland, Oregon \"\>", 
   ",", "\<\"Randall Children's Hospital at Legacy Emanuel Portland, Oregon \
\"\>", ",", "\<\"Children's Hospital of Philadelphia Philadelphia, \
Pennsylvania \"\>", 
   ",", "\<\"Children's Hospital of Pittsburgh Pittsburgh, Pennsylvania \"\>",
    ",", "\<\"Geisinger Medical Center Danville, Pennsylvania \"\>", 
   ",", "\<\"Penn State Children's Hospital Hershey, Pennsylvania \"\>", 
   ",", "\<\"MUSC Children's Hospital Charleston, South Carolina \"\>", 
   ",", "\<\"Le Bonheur Children's Hospital Memphis, Tennessee \"\>", 
   ",", "\<\"Monroe Carell Jr. Children's Hospital at Vanderbilt Nashville, \
Tennessee \"\>", 
   ",", "\<\"Children's Health Medical Center Dallas Dallas, Texas \"\>", 
   ",", "\<\"Children's Hospital of San Antonio San Antonio, Texas \"\>", 
   ",", "\<\"Children's Memorial Hermann Hospital Houston, Texas \"\>", 
   ",", "\<\"Cook Children's Medical Center Fort Worth, Texas \"\>", 
   ",", "\<\"Dell Children\[CloseCurlyQuote]s Medical Center Austin, Texas \"\
\>", ",", "\<\"Driscoll Children's Hospital Corpus Christi, Texas \"\>", 
   ",", "\<\"Medical City Children's Hospital Dallas, Texas \"\>", 
   ",", "\<\"Texas Children's Hospital Houston, Texas \"\>", 
   ",", "\<\"University Health Women's & Children's Hospital San Antonio, \
Texas \"\>", ",", "\<\"Primary Children's Hospital Salt Lake City, Utah \"\>",
    ",", "\<\"Children's Hospital of the King's Daughters Norfolk, Virginia \
\"\>", ",", "\<\"Inova L. J. Murphy Children's Hospital Falls Church, \
Virginia \"\>", 
   ",", "\<\"University of Virginia Children\[CloseCurlyQuote]s Hospital \
Charlottesville, Virginia \"\>", 
   ",", "\<\"Seattle Children's Hospital Seattle, Washington \"\>", 
   ",", "\<\"WVU Medicine Children's Morgantown, West Virginia \"\>", 
   ",", "\<\"American Family Children's Hospital-University of Wisconsin \
Hospitals and Clinics Madison, Wisconsin \"\>", 
   ",", "\<\"Children's Wisconsin Milwaukee, Wisconsin \"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.924522849938347*^9, 3.924523115413226*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"94451b0e-82b0-4f85-aab8-15b0edbfad1a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data2", " ", "=", " ", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"data", ",", " ", "_Failure"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.924483399406888*^9, 3.924483438015972*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"a67dcf2e-b918-4bc0-9213-ec0260560810"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "data2", "]"}]], "Input",
 CellChangeTimes->{{3.9245231652194147`*^9, 3.9245231676474237`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"736ab8bb-636e-4ae3-9bd7-12f38c619124"],

Cell[BoxData["98"], "Output",
 CellChangeTimes->{3.924523167993156*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"aa838464-c3d8-4f6f-904e-8851af05eca7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "hospitalNames3", "]"}]], "Input",
 CellChangeTimes->{{3.92452316901088*^9, 3.924523174079835*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"5b779734-86e5-4797-baa9-122c73365a39"],

Cell[BoxData["98"], "Output",
 CellChangeTimes->{3.924523174563575*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"0ee149bc-047a-403f-9206-45dafb4a7603"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"locs2", " ", "=", " ", 
   RowBox[{"Delete", "[", 
    RowBox[{"locs", ",", "toDrop"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9244838642458572`*^9, 3.924483864873061*^9}, {
   3.9244839367199078`*^9, 3.924483950827364*^9}, 3.924484005200375*^9},
 CellTags->"Delete_templates",
 CellLabel->"In[56]:=",ExpressionUUID->"45de93fb-8d79-4ec3-b395-0c3b9e604b1b"],

Cell[BoxData[
 RowBox[{"dataset", " ", "=", " ", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#1", ",", " ", "#2"}], "}"}], "&"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"hospitalNames3", ",", " ", "data2"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.924523104119389*^9, 3.924523199428492*^9}, 
   3.9245257345609913`*^9},
 CellLabel->
  "In[109]:=",ExpressionUUID->"559e142f-51bd-4e6e-b244-2ca2c6828fd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data3", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Prepend", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"{", "#2", "}"}]}], "]"}], " ", "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"data2", ",", " ", "hospitalNames3"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9245263063710957`*^9, 3.924526412398728*^9}, {
  3.924526786184821*^9, 3.924526788365097*^9}, {3.9245271469355087`*^9, 
  3.924527181247923*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"2e5e8308-33a2-452f-8c18-d47a43f7cd09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tabs", " ", "=", " ", 
   RowBox[{"Transpose", "/@", "data3"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924525761565426*^9, 3.924525778482874*^9}, {
  3.924526422523369*^9, 3.924526429073619*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"89bc0f1d-5257-4286-a401-c2d2a78d2792"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data4", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"data3", ",", " ", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924526911193962*^9, 3.92452691274675*^9}, 
   3.924526954987445*^9, 3.924527110284995*^9, {3.924527189375581*^9, 
   3.9245272263638563`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"f3b0dcab-729c-4365-91fc-6cba8c27cab4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data4", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Riffle", "[", 
      RowBox[{"#", ",", " ", "\"\<\\n\>\""}], "]"}], "&"}], "/@", " ", 
    "data3"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924526555457904*^9, 3.924526671355115*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"06f4585d-ef3b-4350-b3b1-67a4bcc08cba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data5", " ", "=", " ", 
   RowBox[{"Flatten", "[", "data4", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924526673765752*^9, 3.924526721848984*^9}, 
   3.924526767364839*^9, {3.924526850265717*^9, 3.9245268575318747`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"9d71c63a-81bc-4747-9f4c-901ef9e63719"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Projects/Wolfram/DadScrapeDataNice.csv\>\"", ",", " ", "data4"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.924526458547264*^9, 3.924526485121336*^9}, {
  3.924526860683811*^9, 3.9245268618499403`*^9}, {3.9245269579529467`*^9, 
  3.924526958714878*^9}, {3.924527230977892*^9, 3.92452723113165*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"c0e9df7b-977d-488d-9ec4-15e6b8eb283a"],

Cell[BoxData["\<\"Projects/Wolfram/DadScrapeDataNice.csv\"\>"], "Output",
 CellChangeTimes->{3.9245264875285873`*^9, 3.924526862230606*^9, 
  3.9245269593190327`*^9, 3.924527231423766*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"ca6ba0dc-332e-4eb3-be90-86cf8c56380d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SendMail", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<To\>\"", "->", "\"\<nielsenjam@gmail.com\>\""}], ",", 
    RowBox[{"\"\<Subject\>\"", "->", "\"\<Congenital Heart Data\>\""}], ",", 
    RowBox[{"\"\<AttachedFiles\>\"", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "File", "[", "\"\<Projects/Wolfram/DadScrapeDataNice.csv\>\"", "]"}], 
       ",", " ", 
       RowBox[{
       "File", "[", "\"\<Projects/Wolfram/DadHeartVis.pdf\>\"", "]"}]}], 
      "}"}]}]}], "|>"}], "]"}]], "Input",
 CellChangeTimes->{{3.924527416106213*^9, 3.9245274617435427`*^9}, {
  3.9245276425854483`*^9, 3.924527836951729*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"d033a24f-94f3-47cd-b82e-e72e636182de"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[Checkmark]\"", StripOnInput -> False, LineColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FrontFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              BackFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              GraphicsColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FontSize -> 25, FontColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451]], 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Mail sent.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Recipient\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"nielsenjam@gmail.com\"", "SummaryItem"]}]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[Checkmark]\"", StripOnInput -> False, LineColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FrontFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              BackFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              GraphicsColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FontSize -> 25, FontColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451]], 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Mail sent.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Recipient\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"nielsenjam@gmail.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"MessageID\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"02901239-6399-45d7-936e-05408be03f85.WolframLanguage.will@\
fastbreakkids.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"MailSent\"", "SummaryItem"]}]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "MailSent", <|
   "MessageTemplate" :> MessageName[SendMail, "success"], "Recipient" -> 
    "nielsenjam@gmail.com", "MessageID" -> 
    "02901239-6399-45d7-936e-05408be03f85.WolframLanguage.will@fastbreakkids.\
com"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.924527861666156*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"34bcb5a8-c2c7-4d6f-a5c9-0dc519ad75b9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
   "AbsoluteFileName", "[", "\"\<Projects/Wolfram/DadScrapeDataNice.csv\>\"", 
    "]"}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[170]:=",ExpressionUUID->"c195958e-1633-43ff-a5c6-f8a10bbb501d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Projects/Wolfram/test.csv\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"d", ",", " ", "e", ",", " ", "f"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9245270012693768`*^9, 3.9245270636166153`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"f35a4ef2-8de5-4c20-9099-f322962efd24"],

Cell[BoxData["\<\"Projects/Wolfram/test.csv\"\>"], "Output",
 CellChangeTimes->{{3.924527040344185*^9, 3.924527064060006*^9}},
 CellLabel->
  "Out[158]=",ExpressionUUID->"0ac40028-f542-41ac-a3b5-2fdb46b51bbc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
   "AbsoluteFileName", "[", "\"\<Projects/Wolfram/test.csv\>\"", "]"}], "]"}],
   "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[159]:=",ExpressionUUID->"0a064410-cfe7-4b8e-81f0-e0c216541b8f"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
   "AbsoluteFileName", "[", "\"\<Projects/Wolfram/DadScrapeDataNice.csv\>\"", 
    "]"}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[152]:=",ExpressionUUID->"45f4a4c3-a13b-413d-9dd3-619ae0ef7941"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Projects/Wolfram/DadScrapeDataNice.csv\>\"", ",", " ", "data5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.924526712467002*^9, 3.924526726394449*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"8cdbcad0-e3b6-4df6-b0c1-2a38774c2b0e"],

Cell[BoxData["\<\"Projects/Wolfram/DadScrapeDataNice.csv\"\>"], "Output",
 CellChangeTimes->{3.924526726833537*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"e967b077-2cce-48fe-8169-fe8534345b03"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
   "AbsoluteFileName", "[", "\"\<Projects/Wolfram/DadScrapeDataNice.csv\>\"", 
    "]"}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[145]:=",ExpressionUUID->"da358b47-5917-4464-989c-8f7c475e55df"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
   "AbsoluteFileName", "[", "\"\<Projects/Wolfram/DadScrapeDataNice.csv\>\"", 
    "]"}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[132]:=",ExpressionUUID->"9c093ffd-1f8f-4654-9930-814895e51020"],

Cell[BoxData[
 RowBox[{"TableForm", "[", "tabs", "]"}]], "Input",
 CellChangeTimes->{{3.924526430173355*^9, 3.924526432423876*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"9a911636-b0fc-4063-b823-024bd8fe2c7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getKeys", "[", "hName_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "hName", "]"}], "==", "List"}], ",", " ", 
    RowBox[{"PadRight", "[", 
     RowBox[{"hName", ",", " ", "6"}], "]"}], ",", " ", 
    RowBox[{"PadRight", "[", 
     RowBox[{
      RowBox[{"{", "hName", "}"}], ",", " ", "6"}], "]"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.92452588097845*^9, 3.9245259297877398`*^9}, {
  3.924525968975967*^9, 3.9245259690406513`*^9}, {3.9245260267594757`*^9, 
  3.92452611164739*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"9b69db41-11db-420e-95e0-a47aa5f16b24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hnFilled", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"PadRight", "[", 
      RowBox[{
       RowBox[{"{", "#", "}"}], ",", " ", "6", ",", " ", "\"\<\>\""}], "]"}], 
     "&"}], "/@", " ", "hospitalNames3"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924526194251813*^9, 3.9245262455961323`*^9}, 
   3.9245262791247*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"ccbd8bd5-b9b6-47e6-97a3-b341299d766f"],

Cell[BoxData[
 RowBox[{"TableForm", "[", "tabs", "]"}]], "Input",
 CellChangeTimes->{{3.924525782630742*^9, 3.924525785594451*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"a0cb57ec-f6a1-4012-b826-9f4c1a10bfd4"],

Cell[BoxData[
 RowBox[{"Column", "[", "dataTables", "]"}]], "Input",
 CellChangeTimes->{{3.9245256801368923`*^9, 3.924525684608588*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"2250da1c-6c36-44bb-96f2-074ffb2150ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Projects/Wolfram/DadScrapeData.csv\>\"", ",", " ", "dataset"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.924523466089884*^9, 3.924523505188892*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"881806b3-51f6-411a-9cc6-441be41de08f"],

Cell[BoxData["\<\"Projects/Wolfram/DadScrapeData.csv\"\>"], "Output",
 CellChangeTimes->{3.924523505664794*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"4d60c08d-6b4b-4de6-b534-44c25334ab89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keys", " ", "=", " ", 
  RowBox[{
   RowBox[{"data2", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924523193618029*^9, 3.924523256848181*^9}, {
  3.924523339942286*^9, 3.924523460140482*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"5f45620d-2f21-4c6f-8f99-6840079c5dcc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Population: Neonates, Infants, Children & Adults\"\>", 
   ",", "\<\"# / Eligible\"\>", ",", "\<\"Observed\"\>", 
   ",", "\<\"Expected\"\>", ",", "\<\"O/E Ratio (95% CI)\"\>", 
   ",", "\<\"Adj. Rate (95% CI)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.924523514920186*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"33486ff2-7883-430e-a94f-39bc2fea27fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", 
  RowBox[{"data2", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9245237223551283`*^9, 3.924523730785746*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"3d7cbbbe-e97f-4f5e-a807-3a731dfd0fea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Overall\"\>", ",", "\<\"17 / 1222\"\>", ",", "\<\"1.39%\"\>",
      ",", "\<\"2.5%\"\>", ",", "\<\"0.56 (0.33, 0.86)\"\>", 
     ",", "\<\"1.48 (0.88, 2.27)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 1\"\>", ",", "\<\"4 / 623\"\>", 
     ",", "\<\"0.64%\"\>", ",", "\<\"0.56%\"\>", 
     ",", "\<\"1.14 (0.31, 2.91)\"\>", ",", "\<\"0.74 (0.2, 1.88)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 2\"\>", ",", "\<\"2 / 299\"\>", 
     ",", "\<\"0.67%\"\>", ",", "\<\"1.63%\"\>", 
     ",", "\<\"0.41 (0.05, 1.47)\"\>", ",", "\<\"0.8 (0.1, 2.86)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 3\"\>", ",", "\<\"1 / 109\"\>", 
     ",", "\<\"0.92%\"\>", ",", "\<\"3.42%\"\>", 
     ",", "\<\"0.27 (0.01, 1.46)\"\>", ",", "\<\"0.9 (0.02, 4.89)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 4\"\>", ",", "\<\"2 / 100\"\>", 
     ",", "\<\"2%\"\>", ",", "\<\"6.58%\"\>", ",", "\<\"0.3 (0.04, 1.07)\"\>",
      ",", "\<\"2.38 (0.29, 8.37)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAT Mortality Category 5\"\>", ",", "\<\"8 / 91\"\>", 
     ",", "\<\"8.79%\"\>", ",", "\<\"13.06%\"\>", 
     ",", "\<\"0.67 (0.3, 1.27)\"\>", ",", "\<\"10.07 (4.44, 19.01)\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.92452372463526*^9, 3.924523731020619*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"89ab8079-34f9-4031-89d3-e057fbc3cdc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataDict", " ", "=", " ", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "hosData", "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{"keys", ",", " ", "#"}], "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"Rest", "[", "hosData", "]"}]}]}], "]"}], "/@", 
   "data2"}]}]], "Input",
 CellChangeTimes->{{3.924523527446896*^9, 3.924523644731256*^9}, {
  3.9245236852573767`*^9, 3.924523691510894*^9}, {3.9245237473569603`*^9, 
  3.9245237487438498`*^9}, {3.924523788330307*^9, 3.9245238176598587`*^9}, {
  3.924523882281953*^9, 3.9245239594394703`*^9}, {3.924523990965785*^9, 
  3.924523995456141*^9}, {3.924524067161075*^9, 3.924524092889154*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"8ad6e5f8-ec0d-4f6a-8bfa-89584fb70a4e"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}], Short[#, 8]& ], 
   "line" -> 88, "sessionID" -> 27595891596647540851, "byteCount" -> 707416, 
   "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.92452369264419*^9, {3.924523791287417*^9, 3.924523818417893*^9}, {
   3.924523909704315*^9, 3.924523959663678*^9}, 3.924523995912912*^9, {
   3.9245240309430647`*^9, 3.924524050204961*^9}, 3.924524093194021*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"c61ed8d7-452a-4349-b790-dca89d7decb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullData", " ", "=", " ", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{"hospitalNames3", ",", " ", "dataDict"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9245241127062607`*^9, 3.9245241542613564`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"4489a797-3cd7-4612-b459-6183f1adbe47"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"\[LeftAssociation]", 
       RowBox[{
         RowBox[{
          "\"The Children's Hospital of Alabama Birmingham, Alabama \"", 
           "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"\[LeftAssociation]", 
                 RowBox[{
                   
                   RowBox[{
                    "\"Population: Neonates, Infants, Children & Adults\"", 
                    "\[Rule]", "\"Overall\""}], ",", 
                   RowBox[{"\"# / Eligible\"", "\[Rule]", "\"17 / 1222\""}], 
                   ",", 
                   RowBox[{"\"Observed\"", "\[Rule]", "\"1.39%\""}], ",", 
                   RowBox[{"\"Expected\"", "\[Rule]", "\"2.5%\""}], ",", 
                   
                   RowBox[{
                    "\"O/E Ratio (95% CI)\"", "\[Rule]", 
                    "\"0.56 (0.33, 0.86)\""}], ",", 
                   
                   RowBox[{
                    "\"Adj. Rate (95% CI)\"", "\[Rule]", 
                    "\"1.48 (0.88, 2.27)\""}]}], "\[RightAssociation]"}], ",", 
               TemplateBox[{"5"}, "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
         TemplateBox[{"96"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{
          "\"Children's Wisconsin Milwaukee, Wisconsin \"", "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"\[LeftAssociation]", 
                 RowBox[{
                   RowBox[{
                    
                    RowBox[{
                    "\"Population: Neo\"", "\[Ellipsis]", 
                    "\"hildren & Adults\""}], "\[Rule]", "\"Overall\""}], ",", 
                   TemplateBox[{"5"}, "OutputSizeLimit`Skeleton"]}], 
                 "\[RightAssociation]"}], ",", 
               TemplateBox[{"5"}, "OutputSizeLimit`Skeleton"]}], "}"}]}]}], 
       "\[RightAssociation]"}], Short[#, 8]& ], "line" -> 91, "sessionID" -> 
   27595891596647540851, "byteCount" -> 730112, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotAvailable", "NewSessionID"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.92452369264419*^9, {3.924523791287417*^9, 3.924523818417893*^9}, {
   3.924523909704315*^9, 3.924523959663678*^9}, 3.924523995912912*^9, {
   3.9245240309430647`*^9, 3.924524050204961*^9}, {3.924524141304413*^9, 
   3.924524154578577*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"b2049ab4-414a-41e3-9ed7-7657c7b2b7d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "%81", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[82]:=",ExpressionUUID->"f5c6ee35-826d-404e-83e5-c28ccae7fa45"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     TagBox[
      TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], 
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]], Short[#, 8]& ], "line" -> 82, "sessionID" -> 
   27595891596647540851, "byteCount" -> 707464, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotAvailable", "NewSessionID"], "wrap" -> 
   Composition[OutputSizeLimit`Defer, 
     Function[{OutputSizeLimit`Dump`x$}, 
      TableForm[OutputSizeLimit`Dump`x$]]], "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.92452392249791*^9},
 CellLabel->
  "Out[82]//TableForm=",ExpressionUUID->"55f6d3fb-0a20-453c-949a-\
60bb07e01ed7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{
   RowBox[{"data2", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.924523193618029*^9, 3.924523256848181*^9}, {
  3.924523339942286*^9, 
  3.924523460140482*^9}},ExpressionUUID->"ea4f7305-9775-4de2-ac39-\
d1b38b33bd57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Population: Neonates, Infants, Children & Adults\"\>", 
   ",", "\<\"# / Eligible\"\>", ",", "\<\"Observed\"\>", 
   ",", "\<\"Expected\"\>", ",", "\<\"O/E Ratio (95% CI)\"\>", 
   ",", "\<\"Adj. Rate (95% CI)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.924523204509816*^9, 3.9245232571531153`*^9}, {
   3.924523342105879*^9, 3.924523356074499*^9}, 3.924523389530616*^9, 
   3.924523453571961*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"04473a08-c52c-44ad-9d0f-7758adff55ba"],

Cell[BoxData[
 TemplateBox[{
  "AssociationThread", "invrk", 
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Overall\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"17 / 1222\\\\\
\\\"\\\", \\\",\\\", \\\"\\\\\\\"1.39%\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"2.5%\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"0.56 (0.33, \
0.86)\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"1.48 (0.88, 2.27)\\\\\\\"\\\"}], \\\
\"}\\\"}]\\) is not a valid rule.\"", 2, 73, 15, 27595891596647540851, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.924523453654229*^9},
 CellLabel->
  "During evaluation of \
In[72]:=",ExpressionUUID->"5cf7d63b-2cd6-439b-9399-1264ead25d6c"],

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{"{", 
   RowBox[{"\<\"Overall\"\>", ",", "\<\"17 / 1222\"\>", ",", "\<\"1.39%\"\>", 
    ",", "\<\"2.5%\"\>", ",", "\<\"0.56 (0.33, 0.86)\"\>", 
    ",", "\<\"1.48 (0.88, 2.27)\"\>"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.924523204509816*^9, 3.9245232571531153`*^9}, {
   3.924523342105879*^9, 3.924523356074499*^9}, 3.924523389530616*^9, 
   3.924523453754442*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"26365c9c-eb75-49d3-8a3e-8b4fd0da7dc0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Dataset", "/@", "data2"}], "]"}]], "Input",
 CellChangeTimes->{{3.924523267675602*^9, 3.924523287976665*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"f8cc361d-31ed-46cc-94f7-e3fb0d753d72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"overallObs", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "&"}], " ", "/@", " ", 
   "data2"}]}]], "Code",
 CellChangeTimes->{{3.9244817037239933`*^9, 3.9244817193886538`*^9}, {
   3.924481782732473*^9, 3.9244818474837303`*^9}, 3.924484021436822*^9},
 CellLabel->
  "In[612]:=",ExpressionUUID->"e9b03305-4a2e-48e1-b409-9196f3ede930"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1.39%\"\>", ",", "\<\"3.34%\"\>", ",", "\<\"2.28%\"\>", 
   ",", "\<\"1.39%\"\>", ",", "\<\"3.13%\"\>", ",", "\<\"0.65%\"\>", 
   ",", "\<\"1.43%\"\>", ",", "\<\"4.4%\"\>", ",", "\<\"1.27%\"\>", 
   ",", "\<\"0.97%\"\>", ",", "\<\"4.01%\"\>", ",", "\<\"4.78%\"\>", 
   ",", "\<\"4.22%\"\>", ",", "\<\"2.83%\"\>", ",", "\<\"2.03%\"\>", 
   ",", "\<\"3.31%\"\>", ",", "\<\"2.92%\"\>", ",", "\<\"2.78%\"\>", 
   ",", "\<\"3.61%\"\>", ",", "\<\"3.08%\"\>", ",", "\<\"3.17%\"\>", 
   ",", "\<\"3.85%\"\>", ",", "\<\"4.44%\"\>", ",", "\<\"2.8%\"\>", 
   ",", "\<\"0.93%\"\>", ",", "\<\"2.51%\"\>", ",", "\<\"2.26%\"\>", 
   ",", "\<\"2.19%\"\>", ",", "\<\"1.24%\"\>", ",", "\<\"2.75%\"\>", 
   ",", "\<\"0.85%\"\>", ",", "\<\"2.17%\"\>", ",", "\<\"2.81%\"\>", 
   ",", "\<\"4.39%\"\>", ",", "\<\"3.18%\"\>", ",", "\<\"2.51%\"\>", 
   ",", "\<\"4.33%\"\>", ",", "\<\"0.4%\"\>", ",", "\<\"2.51%\"\>", 
   ",", "\<\"1.8%\"\>", ",", "\<\"5.42%\"\>", ",", "\<\"2.58%\"\>", 
   ",", "\<\"3.57%\"\>", ",", "\<\"2.4%\"\>", ",", "\<\"2.94%\"\>", 
   ",", "\<\"2.77%\"\>", ",", "\<\"2.12%\"\>", ",", "\<\"2.29%\"\>", 
   ",", "\<\"3.63%\"\>", ",", "\<\"3.78%\"\>", ",", "\<\"2.9%\"\>", 
   ",", "\<\"3.55%\"\>", ",", "\<\"2.38%\"\>", ",", "\<\"4.54%\"\>", 
   ",", "\<\"1.79%\"\>", ",", "\<\"0%\"\>", ",", "\<\"0.81%\"\>", 
   ",", "\<\"3.32%\"\>", ",", "\<\"1.54%\"\>", ",", "\<\"3.74%\"\>", 
   ",", "\<\"2.91%\"\>", ",", "\<\"3.28%\"\>", ",", "\<\"1.78%\"\>", 
   ",", "\<\"1.13%\"\>", ",", "\<\"3.58%\"\>", ",", "\<\"3.45%\"\>", 
   ",", "\<\"1.42%\"\>", ",", "\<\"3%\"\>", ",", "\<\"1.45%\"\>", 
   ",", "\<\"2.18%\"\>", ",", "\<\"1.69%\"\>", ",", "\<\"2.2%\"\>", 
   ",", "\<\"2.81%\"\>", ",", "\<\"2.5%\"\>", ",", "\<\"2.79%\"\>", 
   ",", "\<\"2.03%\"\>", ",", "\<\"2.2%\"\>", ",", "\<\"2.68%\"\>", 
   ",", "\<\"1.2%\"\>", ",", "\<\"3.4%\"\>", ",", "\<\"3.79%\"\>", 
   ",", "\<\"2.16%\"\>", ",", "\<\"2.42%\"\>", ",", "\<\"3.39%\"\>", 
   ",", "\<\"2.13%\"\>", ",", "\<\"1.86%\"\>", ",", "\<\"2.1%\"\>", 
   ",", "\<\"3.24%\"\>", ",", "\<\"1.9%\"\>", ",", "\<\"2.05%\"\>", 
   ",", "\<\"2.69%\"\>", ",", "\<\"0.65%\"\>", ",", "\<\"2.88%\"\>", 
   ",", "\<\"2.63%\"\>", ",", "\<\"2.32%\"\>", ",", "\<\"3.29%\"\>", 
   ",", "\<\"2.8%\"\>", ",", "\<\"4.73%\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.9244817063779583`*^9, 3.924481719739306*^9}, {
   3.9244817850585823`*^9, 3.924481848809231*^9}, 3.924484110399046*^9},
 CellLabel->
  "Out[612]=",ExpressionUUID->"06d93d0b-1954-44a1-aad8-3ffa6d792d16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toNum", " ", "=", " ", 
  RowBox[{"Interpreter", "[", "Number", "]"}]}]], "Code",
 CellChangeTimes->{{3.92448419735647*^9, 3.924484218398376*^9}},
 CellLabel->
  "In[614]:=",ExpressionUUID->"5e3c192e-7883-4d69-ae30-0387eb3e2ec0"],

Cell[BoxData[
 RowBox[{"Interpreter", "[", "Number", "]"}]], "Output",
 CellChangeTimes->{3.9244842191101303`*^9},
 CellLabel->
  "Out[614]=",ExpressionUUID->"ff40857d-ed42-4529-9999-d904dda7922f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"strings", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"StringDelete", "[", 
     RowBox[{"#", ",", " ", "\"\<%\>\""}], "]"}], "&"}], " ", "/@", " ", 
   "overallObs"}]}]], "Code",
 CellChangeTimes->{{3.924484141395879*^9, 3.924484188215024*^9}, {
  3.924484234253008*^9, 3.9244842581937723`*^9}},
 CellLabel->
  "In[618]:=",ExpressionUUID->"c732a2df-34d6-4ab3-9341-edd4b53f925b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1.39\"\>", ",", "\<\"3.34\"\>", ",", "\<\"2.28\"\>", 
   ",", "\<\"1.39\"\>", ",", "\<\"3.13\"\>", ",", "\<\"0.65\"\>", 
   ",", "\<\"1.43\"\>", ",", "\<\"4.4\"\>", ",", "\<\"1.27\"\>", 
   ",", "\<\"0.97\"\>", ",", "\<\"4.01\"\>", ",", "\<\"4.78\"\>", 
   ",", "\<\"4.22\"\>", ",", "\<\"2.83\"\>", ",", "\<\"2.03\"\>", 
   ",", "\<\"3.31\"\>", ",", "\<\"2.92\"\>", ",", "\<\"2.78\"\>", 
   ",", "\<\"3.61\"\>", ",", "\<\"3.08\"\>", ",", "\<\"3.17\"\>", 
   ",", "\<\"3.85\"\>", ",", "\<\"4.44\"\>", ",", "\<\"2.8\"\>", 
   ",", "\<\"0.93\"\>", ",", "\<\"2.51\"\>", ",", "\<\"2.26\"\>", 
   ",", "\<\"2.19\"\>", ",", "\<\"1.24\"\>", ",", "\<\"2.75\"\>", 
   ",", "\<\"0.85\"\>", ",", "\<\"2.17\"\>", ",", "\<\"2.81\"\>", 
   ",", "\<\"4.39\"\>", ",", "\<\"3.18\"\>", ",", "\<\"2.51\"\>", 
   ",", "\<\"4.33\"\>", ",", "\<\"0.4\"\>", ",", "\<\"2.51\"\>", 
   ",", "\<\"1.8\"\>", ",", "\<\"5.42\"\>", ",", "\<\"2.58\"\>", 
   ",", "\<\"3.57\"\>", ",", "\<\"2.4\"\>", ",", "\<\"2.94\"\>", 
   ",", "\<\"2.77\"\>", ",", "\<\"2.12\"\>", ",", "\<\"2.29\"\>", 
   ",", "\<\"3.63\"\>", ",", "\<\"3.78\"\>", ",", "\<\"2.9\"\>", 
   ",", "\<\"3.55\"\>", ",", "\<\"2.38\"\>", ",", "\<\"4.54\"\>", 
   ",", "\<\"1.79\"\>", ",", "\<\"0\"\>", ",", "\<\"0.81\"\>", 
   ",", "\<\"3.32\"\>", ",", "\<\"1.54\"\>", ",", "\<\"3.74\"\>", 
   ",", "\<\"2.91\"\>", ",", "\<\"3.28\"\>", ",", "\<\"1.78\"\>", 
   ",", "\<\"1.13\"\>", ",", "\<\"3.58\"\>", ",", "\<\"3.45\"\>", 
   ",", "\<\"1.42\"\>", ",", "\<\"3\"\>", ",", "\<\"1.45\"\>", 
   ",", "\<\"2.18\"\>", ",", "\<\"1.69\"\>", ",", "\<\"2.2\"\>", 
   ",", "\<\"2.81\"\>", ",", "\<\"2.5\"\>", ",", "\<\"2.79\"\>", 
   ",", "\<\"2.03\"\>", ",", "\<\"2.2\"\>", ",", "\<\"2.68\"\>", 
   ",", "\<\"1.2\"\>", ",", "\<\"3.4\"\>", ",", "\<\"3.79\"\>", 
   ",", "\<\"2.16\"\>", ",", "\<\"2.42\"\>", ",", "\<\"3.39\"\>", 
   ",", "\<\"2.13\"\>", ",", "\<\"1.86\"\>", ",", "\<\"2.1\"\>", 
   ",", "\<\"3.24\"\>", ",", "\<\"1.9\"\>", ",", "\<\"2.05\"\>", 
   ",", "\<\"2.69\"\>", ",", "\<\"0.65\"\>", ",", "\<\"2.88\"\>", 
   ",", "\<\"2.63\"\>", ",", "\<\"2.32\"\>", ",", "\<\"3.29\"\>", 
   ",", "\<\"2.8\"\>", ",", "\<\"4.73\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9244841889317627`*^9, {3.924484236023416*^9, 3.924484258411009*^9}},
 CellLabel->
  "Out[618]=",ExpressionUUID->"69b3a6b4-9392-4432-a50a-0fe3145c8f02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nums", " ", "=", " ", 
  RowBox[{"toNum", "/@", "strings"}]}]], "Code",
 CellChangeTimes->{{3.9244842238653603`*^9, 3.924484272231225*^9}},
 CellLabel->
  "In[621]:=",ExpressionUUID->"39504b3b-f3d4-4e07-8bcb-819fa76dbefe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.39`", ",", "3.34`", ",", "2.28`", ",", "1.39`", ",", "3.13`", ",", 
   "0.65`", ",", "1.43`", ",", "4.4`", ",", "1.27`", ",", "0.97`", ",", 
   "4.01`", ",", "4.78`", ",", "4.22`", ",", "2.83`", ",", "2.03`", ",", 
   "3.31`", ",", "2.92`", ",", "2.78`", ",", "3.61`", ",", "3.08`", ",", 
   "3.17`", ",", "3.85`", ",", "4.44`", ",", "2.8`", ",", "0.93`", ",", 
   "2.51`", ",", "2.26`", ",", "2.19`", ",", "1.24`", ",", "2.75`", ",", 
   "0.85`", ",", "2.17`", ",", "2.81`", ",", "4.39`", ",", "3.18`", ",", 
   "2.51`", ",", "4.33`", ",", "0.4`", ",", "2.51`", ",", "1.8`", ",", 
   "5.42`", ",", "2.58`", ",", "3.57`", ",", "2.4`", ",", "2.94`", ",", 
   "2.77`", ",", "2.12`", ",", "2.29`", ",", "3.63`", ",", "3.78`", ",", 
   "2.9`", ",", "3.55`", ",", "2.38`", ",", "4.54`", ",", "1.79`", ",", "0", 
   ",", "0.81`", ",", "3.32`", ",", "1.54`", ",", "3.74`", ",", "2.91`", ",", 
   "3.28`", ",", "1.78`", ",", "1.13`", ",", "3.58`", ",", "3.45`", ",", 
   "1.42`", ",", "3", ",", "1.45`", ",", "2.18`", ",", "1.69`", ",", "2.2`", 
   ",", "2.81`", ",", "2.5`", ",", "2.79`", ",", "2.03`", ",", "2.2`", ",", 
   "2.68`", ",", "1.2`", ",", "3.4`", ",", "3.79`", ",", "2.16`", ",", 
   "2.42`", ",", "3.39`", ",", "2.13`", ",", "1.86`", ",", "2.1`", ",", 
   "3.24`", ",", "1.9`", ",", "2.05`", ",", "2.69`", ",", "0.65`", ",", 
   "2.88`", ",", "2.63`", ",", "2.32`", ",", "3.29`", ",", "2.8`", ",", 
   "4.73`"}], "}"}]], "Output",
 CellChangeTimes->{{3.92448423900103*^9, 3.9244842726780653`*^9}},
 CellLabel->
  "Out[621]=",ExpressionUUID->"8721705a-c1f8-474c-8968-1043fe2baa23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "/@", "nums"}]], "Code",
 CellChangeTimes->{{3.92448424332893*^9, 3.9244842469598494`*^9}},
 CellLabel->
  "In[622]:=",ExpressionUUID->"69765704-988b-41cd-b13f-d15728901e26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", 
   ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", 
   "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", 
   ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", 
   "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", 
   ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", 
   "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", 
   ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", 
   "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", 
   ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", 
   "Integer", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real",
    ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", 
   "Real", ",", "Integer", ",", "Real", ",", "Real", ",", "Real", ",", "Real",
    ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", 
   "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", 
   ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", 
   "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", ",", "Real", 
   ",", "Real", ",", "Real", ",", "Real", ",", "Real"}], "}"}]], "Output",
 CellChangeTimes->{{3.924484247268661*^9, 3.9244842745065804`*^9}},
 CellLabel->
  "Out[622]=",ExpressionUUID->"8387ccd1-1fd4-41ff-858d-52ea0e6350bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "nums", "]"}]], "Code",
 CellChangeTimes->{{3.9244842999075003`*^9, 3.924484301797241*^9}},
 CellLabel->
  "In[625]:=",ExpressionUUID->"7eb0d386-ba38-40d5-ad00-a4220f163298"],

Cell[BoxData["98"], "Output",
 CellChangeTimes->{{3.924484341714796*^9, 3.924484341892971*^9}},
 CellLabel->
  "Out[625]=",ExpressionUUID->"8ab600be-1dc2-41fa-b1e2-ec5c5572d8c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toCity", " ", "=", " ", 
  RowBox[{"Interpreter", "[", "\"\<City\>\"", "]"}]}]], "Code",
 CellChangeTimes->{{3.924484436177931*^9, 3.924484448368256*^9}},
 CellLabel->
  "In[629]:=",ExpressionUUID->"335f22ec-98c8-428c-932b-d7cd769f60c1"],

Cell[BoxData[
 RowBox[{"Interpreter", "[", "\<\"City\"\>", "]"}]], "Output",
 CellChangeTimes->{3.924484450883647*^9},
 CellLabel->
  "Out[629]=",ExpressionUUID->"87eaebc8-9f6a-43b0-ac5c-2ff891e746a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cities", " ", "=", " ", 
  RowBox[{"toCity", "/@", " ", "locs2"}]}]], "Code",
 CellChangeTimes->{{3.92448445145538*^9, 3.9244844797836*^9}},
 CellLabel->
  "In[632]:=",ExpressionUUID->"87035901-9b06-4ec7-bcc8-495c9f51d748"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Birmingham\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Birmingham\"", ",", "\"Alabama\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Birmingham\\\", \\\"Alabama\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Phoenix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Phoenix\"", ",", "\"Arizona\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Phoenix\\\", \\\"Arizona\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Little Rock\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LittleRock\"", ",", "\"Arkansas\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LittleRock\\\", \\\"Arkansas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Los Angeles\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Los Angeles\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orange\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Orange\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Orange\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Loma Linda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LomaLinda\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LomaLinda\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stanford\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Stanford\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Stanford\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Long Beach\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LongBeach\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LongBeach\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Diego\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanDiego\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SanDiego\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sacramento\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Sacramento\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Sacramento\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sacramento\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Sacramento\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Sacramento\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Los Angeles\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Francisco\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanFrancisco\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SanFrancisco\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Aurora\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Aurora\"", ",", "\"Colorado\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Aurora\\\", \\\"Colorado\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hartford\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Hartford\"", ",", "\"Connecticut\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Hartford\\\", \\\"Connecticut\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Haven\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewHaven\"", ",", "\"Connecticut\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewHaven\\\", \\\"Connecticut\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Wilmington\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Wilmington\"", ",", "\"Delaware\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Wilmington\\\", \\\"Delaware\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Washington\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Washington\"", ",", "\"DistrictOfColumbia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Washington\\\", \\\"DistrictOfColumbia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orlando\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Orlando\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Orlando\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orlando\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Orlando\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Orlando\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Miami\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Miami\"", ",", "\"Florida\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Miami\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hollywood\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Hollywood\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Hollywood\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Petersburg\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SaintPetersburg\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SaintPetersburg\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orlando\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Orlando\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Orlando\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Miami\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Miami\"", ",", "\"Florida\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Miami\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tampa\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Tampa\"", ",", "\"Florida\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Tampa\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gainesville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Gainesville\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Gainesville\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jacksonville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Jacksonville\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Jacksonville\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Atlanta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Atlanta\"", ",", "\"Georgia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Atlanta\\\", \\\"Georgia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Honolulu\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Honolulu\"", ",", "\"Hawaii\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Honolulu\\\", \\\"Hawaii\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oak Lawn\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"OakLawn\"", ",", "\"Illinois\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"OakLawn\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chicago\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Chicago\"", ",", "\"Illinois\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Chicago\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Indianapolis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Indianapolis\"", ",", "\"Indiana\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Indianapolis\\\", \\\"Indiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Indianapolis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Indianapolis\"", ",", "\"Indiana\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Indianapolis\\\", \\\"Indiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Iowa City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"IowaCity\"", ",", "\"Iowa\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"IowaCity\\\", \\\"Iowa\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Louisville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Louisville\"", ",", "\"Kentucky\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Louisville\\\", \\\"Kentucky\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lexington\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Lexington\"", ",", "\"Kentucky\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Lexington\\\", \\\"Kentucky\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Orleans\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewOrleans\"", ",", "\"Louisiana\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewOrleans\\\", \\\"Louisiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Orleans\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewOrleans\"", ",", "\"Louisiana\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewOrleans\\\", \\\"Louisiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Portland\"", ",", "\"Maine\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Maine\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Baltimore\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Baltimore\"", ",", "\"Maryland\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Baltimore\\\", \\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Baltimore\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Baltimore\"", ",", "\"Maryland\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Baltimore\\\", \\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Boston\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Boston\"", ",", "\"Massachusetts\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Boston\\\", \\\"Massachusetts\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ann Arbor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"AnnArbor\"", ",", "\"Michigan\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"AnnArbor\\\", \\\"Michigan\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Detroit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Detroit\"", ",", "\"Michigan\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Detroit\\\", \\\"Michigan\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Grand Rapids\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"GrandRapids\"", ",", "\"Michigan\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"GrandRapids\\\", \\\"Michigan\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rochester\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Rochester\"", ",", "\"Minnesota\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Rochester\\\", \\\"Minnesota\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Minneapolis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Minneapolis\"", ",", "\"Minnesota\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Minneapolis\\\", \\\"Minnesota\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jackson\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Jackson\"", ",", "\"Mississippi\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Jackson\\\", \\\"Mississippi\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Louis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SaintLouis\"", ",", "\"Missouri\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SaintLouis\\\", \\\"Missouri\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Louis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SaintLouis\"", ",", "\"Missouri\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SaintLouis\\\", \\\"Missouri\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kansas City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"KansasCity\"", ",", "\"Missouri\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"KansasCity\\\", \\\"Missouri\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Omaha\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Omaha\"", ",", "\"Nebraska\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Omaha\\\", \\\"Nebraska\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Las Vegas\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LasVegas\"", ",", "\"Nevada\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LasVegas\\\", \\\"Nevada\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Newark\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Newark\"", ",", "\"NewJersey\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Newark\\\", \\\"NewJersey\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Albany\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Albany\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Albany\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Hyde Park\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewHydePark\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewHydePark\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New York City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewYork\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New York City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewYork\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New York City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewYork\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Failure",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
                BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              FrameBox[
               StyleBox[
               "\"\[WarningSign]\"", "Message", StripOnInput -> False, 
                FontSize -> 35], ContentPadding -> False, 
               FrameMargins -> {{0, 0}, {0, 0}}, FrameStyle -> None, 
               StripOnInput -> False], 
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"No city interpretation found. Try again.\"", 
                    "SummaryItem"]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 TagBox[
                  GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}},
                AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                 ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
                BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              FrameBox[
               StyleBox[
               "\"\[WarningSign]\"", "Message", StripOnInput -> False, 
                FontSize -> 35], ContentPadding -> False, 
               FrameMargins -> {{0, 0}, {0, 0}}, FrameStyle -> None, 
               StripOnInput -> False], 
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"No city interpretation found. Try again.\"", 
                    "SummaryItem"]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 TagBox[
                  GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 RowBox[{
                   TagBox[
                    TemplateBox[{"\"Type\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox[
                    TagBox["\"City\"", HoldForm], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                    TemplateBox[{"\"Input\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox[
                    TagBox["\"Rochester, New York\"", HoldForm], 
                    "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Failure[
    "InterpretationFailure", <|
     "MessageTemplate" :> MessageName[Interpreter, "semantictype"], 
      "MessageParameters" -> <|
       "Type" -> "city", "Input" -> "Rochester, New York"|>, "Type" -> "City",
       "Input" -> "Rochester, New York"|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TemplateBox[{"\"Charlotte\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Charlotte\"", ",", "\"NorthCarolina\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Charlotte\\\", \\\"NorthCarolina\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Durham\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Durham\"", ",", "\"NorthCarolina\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Durham\\\", \\\"NorthCarolina\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chapel Hill\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"ChapelHill\"", ",", "\"NorthCarolina\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"ChapelHill\\\", \\\"NorthCarolina\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Winston\[Hyphen]Salem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"WinstonSalem\"", ",", "\"NorthCarolina\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"WinstonSalem\\\", \\\"NorthCarolina\\\", \\\
\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Akron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Akron\"", ",", "\"Ohio\"", ",", "\"UnitedStates\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Akron\\\", \\\"Ohio\\\", \\\"UnitedStates\\\
\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cincinnati\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Cincinnati\"", ",", "\"Ohio\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Cincinnati\\\", \\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cleveland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Cleveland\"", ",", "\"Ohio\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Cleveland\\\", \\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Columbus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Columbus\"", ",", "\"Ohio\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Columbus\\\", \\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cleveland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Cleveland\"", ",", "\"Ohio\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Cleveland\\\", \\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oklahoma City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"OklahomaCity\"", ",", "\"Oklahoma\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"OklahomaCity\\\", \\\"Oklahoma\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Portland\"", ",", "\"Oregon\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Portland\"", ",", "\"Oregon\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Philadelphia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Philadelphia\"", ",", "\"Pennsylvania\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Philadelphia\\\", \\\"Pennsylvania\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pittsburgh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{
            "\"Pittsburgh\"", ",", "\"Pennsylvania\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Pittsburgh\\\", \\\"Pennsylvania\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Danville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Danville\"", ",", "\"Pennsylvania\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Danville\\\", \\\"Pennsylvania\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hershey\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Hershey\"", ",", "\"Pennsylvania\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Hershey\\\", \\\"Pennsylvania\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Charleston\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Charleston\"", ",", "\"SouthCarolina\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Charleston\\\", \\\"SouthCarolina\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Memphis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Memphis\"", ",", "\"Tennessee\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Memphis\\\", \\\"Tennessee\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nashville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Nashville\"", ",", "\"Tennessee\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Nashville\\\", \\\"Tennessee\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dallas\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Dallas\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Dallas\\\", \\\"Texas\\\", \\\"UnitedStates\
\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Antonio\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanAntonio\"", ",", "\"Texas\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SanAntonio\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Houston\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Houston\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Houston\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fort Worth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"FortWorth\"", ",", "\"Texas\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"FortWorth\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Austin\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Austin\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Austin\\\", \\\"Texas\\\", \\\"UnitedStates\
\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Corpus Christi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"CorpusChristi\"", ",", "\"Texas\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"CorpusChristi\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dallas\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Dallas\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Dallas\\\", \\\"Texas\\\", \\\"UnitedStates\
\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Houston\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Houston\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Houston\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Antonio\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanAntonio\"", ",", "\"Texas\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SanAntonio\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Salt Lake City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SaltLakeCity\"", ",", "\"Utah\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SaltLakeCity\\\", \\\"Utah\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Norfolk\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Norfolk\"", ",", "\"Virginia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Norfolk\\\", \\\"Virginia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Falls Church\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"FallsChurch\"", ",", "\"Virginia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"FallsChurch\\\", \\\"Virginia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Charlottesville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Charlottesville\"", ",", "\"Virginia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Charlottesville\\\", \\\"Virginia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Seattle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Seattle\"", ",", "\"Washington\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Seattle\\\", \\\"Washington\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Morgantown\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Morgantown\"", ",", "\"WestVirginia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Morgantown\\\", \\\"WestVirginia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Madison\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Madison\"", ",", "\"Wisconsin\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Madison\\\", \\\"Wisconsin\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Milwaukee\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Milwaukee\"", ",", "\"Wisconsin\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Milwaukee\\\", \\\"Wisconsin\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.924484458225171*^9, 3.9244844639199257`*^9}, 
   3.9244845103154507`*^9},
 CellLabel->
  "Out[632]=",ExpressionUUID->"ce26ae95-deab-4392-9ceb-4d16e11733a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"Rochester\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{
          "\"Rochester\"", ",", "\"NewYork\"", ",", "\"UnitedStates\""}], 
         "}"}]}], "]"}], 
   "\"Entity[\\\"City\\\", {\\\"Rochester\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
  "Entity"]], "Input",
 CellChangeTimes->{3.9244845542079277`*^9},
 CellLabel->
  "In[633]:=",ExpressionUUID->"a3cb7b3b-080b-424c-b10f-50cc3ac742ee"],

Cell[BoxData[
 TemplateBox[{"\"Rochester\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{
          "\"Rochester\"", ",", "\"NewYork\"", ",", "\"UnitedStates\""}], 
         "}"}]}], "]"}], 
   "\"Entity[\\\"City\\\", {\\\"Rochester\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.924484558699177*^9},
 CellLabel->
  "Out[633]=",ExpressionUUID->"fbc43201-2b99-4347-8641-a797449e8a71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"cities", ",", " ", "_Failure"}], "]"}]], "Code",
 CellChangeTimes->{{3.924484584137692*^9, 3.924484597393849*^9}},
 CellLabel->
  "In[634]:=",ExpressionUUID->"4c3584cb-c2b5-4f97-b856-952b15496ebd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "62", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.924484597609645*^9},
 CellLabel->
  "Out[634]=",ExpressionUUID->"dbc7f724-e229-4697-ae28-63ffc9fa0ee1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cities2", " ", "=", " ", 
  RowBox[{"ReplacePart", "[", 
   RowBox[{"cities", ",", " ", 
    RowBox[{"62", "->", " ", 
     TemplateBox[{"\"Rochester\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"Rochester\"", ",", "\"NewYork\"", ",", 
               "\"UnitedStates\""}], "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"Rochester\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
      "Entity"]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.924484547920788*^9, 3.924484549265709*^9}, {
  3.924484612229886*^9, 3.9244846328551826`*^9}},
 CellLabel->
  "In[636]:=",ExpressionUUID->"dd51cb10-9cf3-4e8c-a1ca-ef273df865ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Birmingham\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Birmingham\"", ",", "\"Alabama\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Birmingham\\\", \\\"Alabama\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Phoenix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Phoenix\"", ",", "\"Arizona\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Phoenix\\\", \\\"Arizona\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Little Rock\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LittleRock\"", ",", "\"Arkansas\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LittleRock\\\", \\\"Arkansas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Los Angeles\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Los Angeles\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orange\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Orange\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Orange\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Loma Linda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LomaLinda\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LomaLinda\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stanford\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Stanford\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Stanford\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Long Beach\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LongBeach\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LongBeach\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Diego\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanDiego\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SanDiego\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sacramento\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Sacramento\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Sacramento\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sacramento\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Sacramento\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Sacramento\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Los Angeles\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Francisco\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanFrancisco\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SanFrancisco\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Aurora\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Aurora\"", ",", "\"Colorado\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Aurora\\\", \\\"Colorado\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hartford\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Hartford\"", ",", "\"Connecticut\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Hartford\\\", \\\"Connecticut\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Haven\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewHaven\"", ",", "\"Connecticut\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewHaven\\\", \\\"Connecticut\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Wilmington\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Wilmington\"", ",", "\"Delaware\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Wilmington\\\", \\\"Delaware\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Washington\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Washington\"", ",", "\"DistrictOfColumbia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Washington\\\", \\\"DistrictOfColumbia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orlando\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Orlando\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Orlando\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orlando\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Orlando\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Orlando\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Miami\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Miami\"", ",", "\"Florida\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Miami\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hollywood\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Hollywood\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Hollywood\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Petersburg\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SaintPetersburg\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SaintPetersburg\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orlando\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Orlando\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Orlando\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Miami\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Miami\"", ",", "\"Florida\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Miami\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tampa\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Tampa\"", ",", "\"Florida\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Tampa\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gainesville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Gainesville\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Gainesville\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jacksonville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Jacksonville\"", ",", "\"Florida\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Jacksonville\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Atlanta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Atlanta\"", ",", "\"Georgia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Atlanta\\\", \\\"Georgia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Honolulu\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Honolulu\"", ",", "\"Hawaii\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Honolulu\\\", \\\"Hawaii\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oak Lawn\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"OakLawn\"", ",", "\"Illinois\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"OakLawn\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chicago\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Chicago\"", ",", "\"Illinois\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Chicago\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Indianapolis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Indianapolis\"", ",", "\"Indiana\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Indianapolis\\\", \\\"Indiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Indianapolis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Indianapolis\"", ",", "\"Indiana\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Indianapolis\\\", \\\"Indiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Iowa City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"IowaCity\"", ",", "\"Iowa\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"IowaCity\\\", \\\"Iowa\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Louisville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Louisville\"", ",", "\"Kentucky\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Louisville\\\", \\\"Kentucky\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lexington\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Lexington\"", ",", "\"Kentucky\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Lexington\\\", \\\"Kentucky\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Orleans\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewOrleans\"", ",", "\"Louisiana\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewOrleans\\\", \\\"Louisiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Orleans\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewOrleans\"", ",", "\"Louisiana\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewOrleans\\\", \\\"Louisiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Portland\"", ",", "\"Maine\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Maine\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Baltimore\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Baltimore\"", ",", "\"Maryland\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Baltimore\\\", \\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Baltimore\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Baltimore\"", ",", "\"Maryland\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Baltimore\\\", \\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Boston\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Boston\"", ",", "\"Massachusetts\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Boston\\\", \\\"Massachusetts\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ann Arbor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"AnnArbor\"", ",", "\"Michigan\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"AnnArbor\\\", \\\"Michigan\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Detroit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Detroit\"", ",", "\"Michigan\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Detroit\\\", \\\"Michigan\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Grand Rapids\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"GrandRapids\"", ",", "\"Michigan\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"GrandRapids\\\", \\\"Michigan\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rochester\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Rochester\"", ",", "\"Minnesota\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Rochester\\\", \\\"Minnesota\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Minneapolis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Minneapolis\"", ",", "\"Minnesota\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Minneapolis\\\", \\\"Minnesota\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jackson\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Jackson\"", ",", "\"Mississippi\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Jackson\\\", \\\"Mississippi\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Louis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SaintLouis\"", ",", "\"Missouri\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SaintLouis\\\", \\\"Missouri\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Louis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SaintLouis\"", ",", "\"Missouri\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SaintLouis\\\", \\\"Missouri\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kansas City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"KansasCity\"", ",", "\"Missouri\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"KansasCity\\\", \\\"Missouri\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Omaha\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Omaha\"", ",", "\"Nebraska\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Omaha\\\", \\\"Nebraska\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Las Vegas\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LasVegas\"", ",", "\"Nevada\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LasVegas\\\", \\\"Nevada\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Newark\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Newark\"", ",", "\"NewJersey\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Newark\\\", \\\"NewJersey\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Albany\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Albany\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Albany\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Hyde Park\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewHydePark\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewHydePark\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New York City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewYork\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New York City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewYork\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New York City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewYork\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rochester\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Rochester\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Rochester\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Charlotte\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Charlotte\"", ",", "\"NorthCarolina\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Charlotte\\\", \\\"NorthCarolina\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Durham\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Durham\"", ",", "\"NorthCarolina\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Durham\\\", \\\"NorthCarolina\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chapel Hill\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"ChapelHill\"", ",", "\"NorthCarolina\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"ChapelHill\\\", \\\"NorthCarolina\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Winston\[Hyphen]Salem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"WinstonSalem\"", ",", "\"NorthCarolina\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"WinstonSalem\\\", \\\"NorthCarolina\\\", \\\
\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Akron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Akron\"", ",", "\"Ohio\"", ",", "\"UnitedStates\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Akron\\\", \\\"Ohio\\\", \\\"UnitedStates\\\
\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cincinnati\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Cincinnati\"", ",", "\"Ohio\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Cincinnati\\\", \\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cleveland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Cleveland\"", ",", "\"Ohio\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Cleveland\\\", \\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Columbus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Columbus\"", ",", "\"Ohio\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Columbus\\\", \\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cleveland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Cleveland\"", ",", "\"Ohio\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Cleveland\\\", \\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oklahoma City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"OklahomaCity\"", ",", "\"Oklahoma\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"OklahomaCity\\\", \\\"Oklahoma\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Portland\"", ",", "\"Oregon\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Portland\"", ",", "\"Oregon\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Philadelphia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Philadelphia\"", ",", "\"Pennsylvania\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Philadelphia\\\", \\\"Pennsylvania\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pittsburgh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Pittsburgh\"", ",", "\"Pennsylvania\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Pittsburgh\\\", \\\"Pennsylvania\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Danville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Danville\"", ",", "\"Pennsylvania\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Danville\\\", \\\"Pennsylvania\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hershey\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Hershey\"", ",", "\"Pennsylvania\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Hershey\\\", \\\"Pennsylvania\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Charleston\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Charleston\"", ",", "\"SouthCarolina\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Charleston\\\", \\\"SouthCarolina\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Memphis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Memphis\"", ",", "\"Tennessee\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Memphis\\\", \\\"Tennessee\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nashville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Nashville\"", ",", "\"Tennessee\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Nashville\\\", \\\"Tennessee\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dallas\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Dallas\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Dallas\\\", \\\"Texas\\\", \\\"UnitedStates\
\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Antonio\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanAntonio\"", ",", "\"Texas\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SanAntonio\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Houston\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Houston\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Houston\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fort Worth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"FortWorth\"", ",", "\"Texas\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"FortWorth\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Austin\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Austin\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Austin\\\", \\\"Texas\\\", \\\"UnitedStates\
\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Corpus Christi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"CorpusChristi\"", ",", "\"Texas\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"CorpusChristi\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dallas\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Dallas\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Dallas\\\", \\\"Texas\\\", \\\"UnitedStates\
\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Houston\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Houston\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}],
            "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Houston\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Antonio\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanAntonio\"", ",", "\"Texas\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SanAntonio\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Salt Lake City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SaltLakeCity\"", ",", "\"Utah\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"SaltLakeCity\\\", \\\"Utah\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Norfolk\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Norfolk\"", ",", "\"Virginia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Norfolk\\\", \\\"Virginia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Falls Church\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"FallsChurch\"", ",", "\"Virginia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"FallsChurch\\\", \\\"Virginia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Charlottesville\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Charlottesville\"", ",", "\"Virginia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Charlottesville\\\", \\\"Virginia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Seattle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Seattle\"", ",", "\"Washington\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Seattle\\\", \\\"Washington\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Morgantown\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Morgantown\"", ",", "\"WestVirginia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Morgantown\\\", \\\"WestVirginia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Madison\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Madison\"", ",", "\"Wisconsin\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Madison\\\", \\\"Wisconsin\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Milwaukee\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Milwaukee\"", ",", "\"Wisconsin\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Milwaukee\\\", \\\"Wisconsin\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9244846255359697`*^9, 3.9244846333674517`*^9}},
 CellLabel->
  "Out[636]=",ExpressionUUID->"24f3312c-a5a8-4349-bfdb-9975027916d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Corpus Christi\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"City\"", ",", 
        RowBox[{"{", 
          
          RowBox[{"\"CorpusChristi\"", ",", "\"Texas\"", ",", 
            "\"UnitedStates\""}], "}"}]}], "]"}], 
    "\"Entity[\\\"City\\\", {\\\"CorpusChristi\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
   "Entity"], "[", "\"\<Name\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.92448562453584*^9, 3.924485628656818*^9}},
 CellLabel->
  "In[662]:=",ExpressionUUID->"5b28a0b3-b243-4353-86ab-46f949aac1e0"],

Cell[BoxData["\<\"Corpus Christi\"\>"], "Output",
 CellChangeTimes->{3.924485628976256*^9},
 CellLabel->
  "Out[662]=",ExpressionUUID->"93bbdcfa-efc0-4e98-a872-7c098a042964"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bars", " ", "=", " ", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#1", "[", "\"\<Name\>\"", "]"}], ",", " ", "#2"}], "}"}], 
     "&"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"cities2", ",", " ", "nums"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924485485932678*^9, 3.924485585254883*^9}, {
  3.924485633862708*^9, 3.9244856356800127`*^9}},
 CellLabel->
  "In[663]:=",ExpressionUUID->"efa50d5d-637b-4b9f-bbcc-42f8720c297b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Birmingham\"\>", ",", "1.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Phoenix\"\>", ",", "3.34`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Little Rock\"\>", ",", "2.28`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Los Angeles\"\>", ",", "1.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Los Angeles\"\>", ",", "3.13`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Orange\"\>", ",", "0.65`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Loma Linda\"\>", ",", "1.43`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Stanford\"\>", ",", "4.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Long Beach\"\>", ",", "1.27`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"San Diego\"\>", ",", "0.97`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sacramento\"\>", ",", "4.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sacramento\"\>", ",", "4.78`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Los Angeles\"\>", ",", "4.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"San Francisco\"\>", ",", "2.83`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Aurora\"\>", ",", "2.03`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hartford\"\>", ",", "3.31`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New Haven\"\>", ",", "2.92`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Wilmington\"\>", ",", "2.78`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Washington\"\>", ",", "3.61`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Orlando\"\>", ",", "3.08`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Orlando\"\>", ",", "3.17`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Miami\"\>", ",", "3.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hollywood\"\>", ",", "4.44`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Saint Petersburg\"\>", ",", "2.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Orlando\"\>", ",", "0.93`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Miami\"\>", ",", "2.51`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tampa\"\>", ",", "2.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Gainesville\"\>", ",", "2.19`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Jacksonville\"\>", ",", "1.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Atlanta\"\>", ",", "2.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Honolulu\"\>", ",", "0.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Oak Lawn\"\>", ",", "2.17`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Chicago\"\>", ",", "2.81`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Indianapolis\"\>", ",", "4.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Indianapolis\"\>", ",", "3.18`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Iowa City\"\>", ",", "2.51`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Louisville\"\>", ",", "4.33`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Lexington\"\>", ",", "0.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New Orleans\"\>", ",", "2.51`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New Orleans\"\>", ",", "1.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Portland\"\>", ",", "5.42`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Baltimore\"\>", ",", "2.58`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Baltimore\"\>", ",", "3.57`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Boston\"\>", ",", "2.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Ann Arbor\"\>", ",", "2.94`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Detroit\"\>", ",", "2.77`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Grand Rapids\"\>", ",", "2.12`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Rochester\"\>", ",", "2.29`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Minneapolis\"\>", ",", "3.63`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Jackson\"\>", ",", "3.78`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Saint Louis\"\>", ",", "2.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Saint Louis\"\>", ",", "3.55`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Kansas City\"\>", ",", "2.38`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Omaha\"\>", ",", "4.54`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Las Vegas\"\>", ",", "1.79`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Newark\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Albany\"\>", ",", "0.81`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New Hyde Park\"\>", ",", "3.32`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New York City\"\>", ",", "1.54`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New York City\"\>", ",", "3.74`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New York City\"\>", ",", "2.91`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Rochester\"\>", ",", "3.28`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Charlotte\"\>", ",", "1.78`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Durham\"\>", ",", "1.13`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Chapel Hill\"\>", ",", "3.58`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Winston\[Hyphen]Salem\"\>", ",", "3.45`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Akron\"\>", ",", "1.42`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cincinnati\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cleveland\"\>", ",", "1.45`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Columbus\"\>", ",", "2.18`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cleveland\"\>", ",", "1.69`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Oklahoma City\"\>", ",", "2.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Portland\"\>", ",", "2.81`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Portland\"\>", ",", "2.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Philadelphia\"\>", ",", "2.79`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pittsburgh\"\>", ",", "2.03`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Danville\"\>", ",", "2.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hershey\"\>", ",", "2.68`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Charleston\"\>", ",", "1.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Memphis\"\>", ",", "3.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Nashville\"\>", ",", "3.79`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dallas\"\>", ",", "2.16`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"San Antonio\"\>", ",", "2.42`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Houston\"\>", ",", "3.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Fort Worth\"\>", ",", "2.13`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Austin\"\>", ",", "1.86`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Corpus Christi\"\>", ",", "2.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dallas\"\>", ",", "3.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Houston\"\>", ",", "1.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"San Antonio\"\>", ",", "2.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Salt Lake City\"\>", ",", "2.69`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Norfolk\"\>", ",", "0.65`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Falls Church\"\>", ",", "2.88`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Charlottesville\"\>", ",", "2.63`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Seattle\"\>", ",", "2.32`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Morgantown\"\>", ",", "3.29`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Madison\"\>", ",", "2.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Milwaukee\"\>", ",", "4.73`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.924485491087481*^9, 3.9244855149550667`*^9}, {
   3.924485557831559*^9, 3.924485588676083*^9}, 3.924485637033428*^9},
 CellLabel->
  "Out[663]=",ExpressionUUID->"01b7de71-f12d-42af-988c-926b59c19a02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bs", " ", "=", " ", 
  RowBox[{"SortBy", "[", 
   RowBox[{"bars", ",", " ", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924485679264359*^9, 3.924485716799018*^9}},
 CellLabel->
  "In[667]:=",ExpressionUUID->"7c19c793-0761-4197-a9a4-fc5cc46e9194"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Newark\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Lexington\"\>", ",", "0.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Norfolk\"\>", ",", "0.65`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Orange\"\>", ",", "0.65`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Albany\"\>", ",", "0.81`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Honolulu\"\>", ",", "0.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Orlando\"\>", ",", "0.93`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"San Diego\"\>", ",", "0.97`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Durham\"\>", ",", "1.13`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Charleston\"\>", ",", "1.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Jacksonville\"\>", ",", "1.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Long Beach\"\>", ",", "1.27`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Birmingham\"\>", ",", "1.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Los Angeles\"\>", ",", "1.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Akron\"\>", ",", "1.42`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Loma Linda\"\>", ",", "1.43`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cleveland\"\>", ",", "1.45`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New York City\"\>", ",", "1.54`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cleveland\"\>", ",", "1.69`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Charlotte\"\>", ",", "1.78`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Las Vegas\"\>", ",", "1.79`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New Orleans\"\>", ",", "1.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Austin\"\>", ",", "1.86`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Houston\"\>", ",", "1.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Aurora\"\>", ",", "2.03`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pittsburgh\"\>", ",", "2.03`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"San Antonio\"\>", ",", "2.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Corpus Christi\"\>", ",", "2.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Grand Rapids\"\>", ",", "2.12`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Fort Worth\"\>", ",", "2.13`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dallas\"\>", ",", "2.16`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Oak Lawn\"\>", ",", "2.17`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Columbus\"\>", ",", "2.18`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Gainesville\"\>", ",", "2.19`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Danville\"\>", ",", "2.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Oklahoma City\"\>", ",", "2.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tampa\"\>", ",", "2.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Little Rock\"\>", ",", "2.28`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Rochester\"\>", ",", "2.29`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Seattle\"\>", ",", "2.32`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Kansas City\"\>", ",", "2.38`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Boston\"\>", ",", "2.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"San Antonio\"\>", ",", "2.42`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Portland\"\>", ",", "2.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Iowa City\"\>", ",", "2.51`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Miami\"\>", ",", "2.51`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New Orleans\"\>", ",", "2.51`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Baltimore\"\>", ",", "2.58`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Charlottesville\"\>", ",", "2.63`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hershey\"\>", ",", "2.68`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Salt Lake City\"\>", ",", "2.69`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Atlanta\"\>", ",", "2.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Detroit\"\>", ",", "2.77`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Wilmington\"\>", ",", "2.78`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Philadelphia\"\>", ",", "2.79`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Madison\"\>", ",", "2.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Saint Petersburg\"\>", ",", "2.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Chicago\"\>", ",", "2.81`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Portland\"\>", ",", "2.81`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"San Francisco\"\>", ",", "2.83`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Falls Church\"\>", ",", "2.88`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Saint Louis\"\>", ",", "2.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New York City\"\>", ",", "2.91`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New Haven\"\>", ",", "2.92`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Ann Arbor\"\>", ",", "2.94`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Cincinnati\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Orlando\"\>", ",", "3.08`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Los Angeles\"\>", ",", "3.13`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Orlando\"\>", ",", "3.17`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Indianapolis\"\>", ",", "3.18`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Dallas\"\>", ",", "3.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Rochester\"\>", ",", "3.28`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Morgantown\"\>", ",", "3.29`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hartford\"\>", ",", "3.31`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New Hyde Park\"\>", ",", "3.32`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Phoenix\"\>", ",", "3.34`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Houston\"\>", ",", "3.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Memphis\"\>", ",", "3.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Winston\[Hyphen]Salem\"\>", ",", "3.45`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Saint Louis\"\>", ",", "3.55`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Baltimore\"\>", ",", "3.57`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Chapel Hill\"\>", ",", "3.58`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Washington\"\>", ",", "3.61`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Minneapolis\"\>", ",", "3.63`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"New York City\"\>", ",", "3.74`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Jackson\"\>", ",", "3.78`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Nashville\"\>", ",", "3.79`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Miami\"\>", ",", "3.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sacramento\"\>", ",", "4.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Los Angeles\"\>", ",", "4.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Louisville\"\>", ",", "4.33`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Indianapolis\"\>", ",", "4.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Stanford\"\>", ",", "4.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Hollywood\"\>", ",", "4.44`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Omaha\"\>", ",", "4.54`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Milwaukee\"\>", ",", "4.73`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sacramento\"\>", ",", "4.78`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Portland\"\>", ",", "5.42`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.924485701077476*^9, 3.924485717760542*^9}},
 CellLabel->
  "Out[667]=",ExpressionUUID->"047f38af-4e63-4798-be1a-d0991bdbdcb8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"geoLocs", " ", "=", " ", 
   RowBox[{"FindGeoLocation", "/@", "locs2"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.924481965664714*^9, 3.924482001953884*^9}, {
   3.9244821805933723`*^9, 3.924482205272374*^9}, 3.924484290619959*^9},
 CellLabel->
  "In[623]:=",ExpressionUUID->"7bf48f82-c337-4bba-b2ba-a7ab9b2028c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bubbles", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "->", "#2"}], " ", "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"cities2", ",", " ", "nums"}], "}"}]}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.9244815581258717`*^9, 3.924481578410665*^9}, {
  3.924481644230056*^9, 3.9244816953524714`*^9}, {3.92448193200417*^9, 
  3.9244819488710623`*^9}, {3.924482014283374*^9, 3.924482032848237*^9}, {
  3.924482787017136*^9, 3.924482788025441*^9}, {3.924484295184519*^9, 
  3.924484295725078*^9}, {3.924484649850526*^9, 3.9244846516205883`*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"60260bb3-c3e1-418c-b940-132f71e383b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoBubbleChart", "[", "bubbles", "]"}]], "Code",
 CellChangeTimes->{{3.924482158738181*^9, 3.924482164632723*^9}, 
   3.924484351510315*^9, {3.924484779091222*^9, 3.9244847822392683`*^9}, {
   3.924484888485684*^9, 3.924484924914415*^9}},
 CellLabel->
  "In[640]:=",ExpressionUUID->"c6722cf3-43bb-420b-8081-18ffb92cce87"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJzsvUlzHNe273fdDDz0wF/A38JTDz19Dn+A98LXLzy5jrjPEQ5HeGIPXsRz
hMN2xHn2jXuudI501RxROtIhKVJiK3ZgB5ASAAIUWhJVAMRG4BFASk/nPkeU
8dtZ/6xVq3Z21aDjHixUISubnTt3Zq7fXt1//i/+h3/23/2Hf/VXf/Wv/pP9
P//sn/9P/+Xf/u0//5//6/90/5//5m/+1X//L//mr//b/+pv/se//pd//bf/
xb/4j/YXvvsf/NVf/Wf7X/7j/e+/v9PuJBldfnc7k8Nux7jO4yDO5d1ri0F+
d3O186dve8fP27K/PG/T/vd3v5nPtynd99RqWN8L28eWs34Qcywdu7Sfuutd
Wmh3nv7Q7txe2+ysbG927m9vh+9T7a1cWGfz5WZnen+53X7S13CS1zHvw+4x
ppbbnfkXL8L5r7x6FT5PnfsgyJ32avhfy/Q9JvQXn7/8vNX5/34tlqrfkb29
rc6b19XrFW2LVB3n2+fPO3tvsu9rz+937j4517my/Glnav1MZ2H7eufV7lLf
+n/5d/2fvn1aLuF3pKgddn8bLzY7O7vxdTdfZuv4/XuZ3diMjiH2a/ue/bBs
anmz88eH+2N7fbNzcWGzs/5ss+/49picB99fvNrM98GnvrN8mGvVRDiOrlfd
caBzsG3m88ZSdr72d0nVuD3sZ/1By6SeS02v/+7eZMeXH/f2/qzzzCq6v7m3
eb/Ye2d7J7un+GQ57xjuxWuPe/3Cunp+6Pi6D+29XPVs0eer3Z6UrVsmeqZ9
eH+z8Lr6/XBu79/Nxs671xby9T68l0muI+zLxzPtIJ9MZ5/8bq8Hcmom2w+S
j8sa7/4kSQ5CElMMIVOrffdyOH5Xx/f6KuJ54vpSO2eRvnMwzwS7H316tvjw
/krn4+nF8Fn2PLHPHO3r89nNwAswxA8/Zu0RT7ANv5W17yCu4ySupb9uD59t
78uzzi///i9BPCdcf/qskiWs6N0nvXXYd/ooOkFTnnj500Jn6YdbgSck11c/
78xuXun8069PCt/R9t2PbhB79xa1T9uVtbFp/3G8K4v9XME7GV6AGz7afxd/
Pd/ufPekHXSXO6vZch2H7cVyLJP+wrmhE/n2oAsNy33Djgs4oM56VnQuXG9d
N/ZD+61+5q+hl1trNw/9OX9QchDzG3Bd1bWc7s73MGbL1rPXctQxNo7tNPbg
oLmNjBksp6DX8x3dGR353Fx2X64/38x/F08Mc267kTmZV2bOgv3Z32N8EmOX
0/vvyRhPMEa4Vojdz/b+u1U8wbOIdWGFU11eYPk7l2fy9xG/aT/0BcdWXyD8
7sfm5w8jusgRuIeSvJ2SmKKBODuCbBWyFRT1p+5xdH8+xRPo9fnvU/3PgT4m
gSVu9+vD7EviGSa2H/s7x33U3gztQPj/y7n4drb9h3U9x3lNPVuxTDxxeSWz
M/CuhyVurq52Pj7z+84XV053Li7OlLLEtfXee3T1xaA+XHeeb1S9oOl8ItyA
XeL+0/OBI2I8UXW8onex7A7DnNNB8wRSxBPMsyL6XfOmRXaVSYjaVXk9N7Jz
0tyytoEnrM2I5fqtyj6BXFm+1Png3snVVQ7KRmrFz5db4TfGXNWzgms6CbZl
PNSxi+zu9dqh87E8wTmIJ+z56vxgCnhCOjTbbL1s5/deFU/EfovxRKzfuCes
3c/uy39f3Gx1Li2sFY4duIFz8HMpMAXr8CzifHn2wAXYZPxcH+twDG+XeRVs
qj37hY55dTHjCY4dbBbu3XYS9Lokx09O0tg7EL8Zs/86urbYo8jvqbZ9oWun
QMQmffbOqX7bp9WZYzYHWKJvbsPbMqyP1RG4nuO8rtoPLCWu4n9YgmX3t9YC
X2CzqWIJZPun7c7ezz2emH+eLYvpgOOYSxyXwA34OIknxBbI3Nb14A+FNNVF
rC1jUudL3y5uZnPtzLlj+/NjhXct15X3+EI7W5d3MD5PMeaTfqF3Ovq5eEJ6
m+ZND5MnivqU9tr2+zlZ/e/9oN5GnpjUs6WJnPmuuf8T+iXjTzYn7gHG57iY
oo5fkV/fs4S+676BDbQe//PJsosLGU/wnfOBKXQe3v+qauw38V+qIzp/Cbq8
nid+DPEd/V62F+0DtsEewXlaPoQ9ZKNgHuRU127Bc2puo39M6DrTT7QBYVve
U1x72UC8rnDY91eSt1cSU0ywLbJlmPbk8Rc1732r1wc2cf5PUX+rqf55CpjC
+lrZ549sLYfND3Wv6yjXNsZNfh3sDbDEtcePOn+89FnnT1fPFPPEPnuIJ+Qn
pd/K3nt1333D+k6NKsPwhHRTqxPU1XPsfHqVYCvI5/hqCOvCijAF7BFrE+9m
tV2C7oMdI3atdnYPjg3r6lS2LxHFoNBfnB+6i71OfLesYveruWF+Q8c57Pv/
qD1HqvZfd318aJqOB8UDMPfPHPgkxloTnqj6X2NJTLG71/Ozw1bIp/XtKZuH
qDNHYWOD6twvZfcRfcyzAz2+by4xcp19v3GesinYNiiGAkZAuC+xnyJ9z7mu
DYX+4/5lXeZDEPgEW45tS84WR/QdnuTtkaOig4/zXI7C+dj46tjvlfHaZj/+
f+tzNXDOLtbD2iFyfrB+TUeoz+pe25HZwtmIsUXcWP8m8ISY4MvbF6Mckcds
d3miiDfyd8Ne790mf/U689uHxRM/v17vPGhdzP2f4IvF7ala7/FhdAD0iqPG
E7Rnb0LxsFbvUAx1ne1oF371Rf1v7Q7wRLC77PXHrtj1dJ7WpsG6YhF+Y970
sO/7o/LMqHsMlr13tzh+VwJP2HjkumNH+vc4x6T1WyqSIj8o2e/8va7468C1
Lq+AOIJ7n3uT7/gk2jFqx7WXOs+hJnMasX5W3HjVGJLtwM+lBHvC/jWGycVW
nKNiJWAEztvHX9DPuhay6dAe2aMQ+k02E5hE3/N3/jF4nyc5uXLSxt9R0ZHl
p5QzxVTPLjDSuXUZQf5MNhZjIK7bx34U9MtR6K9hru8o7VY/whNXlk91pjZm
cqaAJ4ij+HpmKs4TFXmf9G4JOt2brQE/fL0vit6PdfXZScyV775eyb/HeMLm
Ohq1Dbwbec+WxZTTTwhsUMUQXE/esfAD62vfRcdXHhrLEXV4YpS5Tz8XXMfu
wLkU5ZXSPrCpeL1L52Fjr7UfyxJ+bhc5jjxxUP5Msfnqpsf6aKYZU6BTom8q
X9K473v2qTgExUKwXHHTMaaQL5NiL+zYE1N4nhC3y19L+rZ+81xgx3jZPViH
Oereo3omyJ+y7PoSf26vh85NPKHzp3/oRzGE2sl1lQ1HvlNsI36UTUq+mzwz
EbgVfynxBP5VwVZxhP0NkrwdclR08JN4Prmf0hja4/116vDJcbVJNL3OTc6n
z36zz2KfPljJY6zFBGdunGuU60nbIcRTzG5td1qveKcu9PGE12dHefdNYh7d
8sTPP68H3yfri9/0fW3jmO1cuGcI6/ukeXb0LeIe+F7HJmHjkpvqD0hVPGyR
LlP3GD7HkvSKMluF2lU2VjhveKKIUe3+g/5n9C/pcD42hGWHfX9P+jkwyvH4
lD+M/x29zvvdx/Zxfq7eeEMvR69H9+R+QLcc933veUL3HsfFNubHhr7LZuLn
F2y+WM8i0r+tbcNyiNa3vlB1/ZhG5Ql7Xyh+ompMvXi1OrAfGGDjeXsg/tvm
soqdk+0Layvhf3iE//GbgifEJrRBPEF8TvJ/SnLYcpL0TH9Oh90OtWVs+6pp
d3ibrndTnSKs07XrwBM+BruKJ8gF9elXn4R1YAlsGdg1xBVT7e3OMn5R+zyR
6YMr+++F+f3/Z0POVsX3HqRP/ijv2KZ+yWVzizGxOUyPKk8Mm7tKbUIfZM7S
xndbnvDH57xjuWut4E/NdvIvKcvby/6CP9Sv/TpL+P1N/7lx3Dq+O8flfp+E
yE8++myJfI+J9Z8vGltcW+ailVcAG1yVj9IwY5RP5tu575DdbgzOhflefgJ/
b9m47LJ9a3z5cWfvDztv4Y+jbcU8GudF69Y936Lf0NWLrq+Xs49WA1P4fcIB
sVwVVfnVLGP59WjXndVsXPGdZee6uRrpG3hCtS4SUyQ5TDns53M6p/rno++j
nudJ6Zeia150fuIJX6fDMgMx2UVMwW/iCQSWgCngEPEEn62dVnjmz7dXc57w
et6w772DkrJadfIRqno3lv1ufcDQl/DvQU++sljNEIjmEOvUa7AifV4+TlXX
YpTcTpYnVPdLLKHzVq6mJtdePGFr1sXsFEX6iXSbtRfzfcuPIk8cBYawbSma
u27SNnhCsTGx663rxtix40hx9uMS6b2vdjOmgCHQh9FREdpofZT8tmUx1eIJ
yxS7ziansSl/IWww1mZhn0HiDvl+DXtfFm2n4yofU53reHnpUog7Y67IXzt7
39XJ1YxY/zHLI8pRqzhtlvOdeDHqZdDHtn7eYd+zSd5uOSrP63RO5efztpzr
OK99GVuIJ1QvHN+nMp54/5N/G3JB2WUf/el3OU9Ibq/2eOKb1TPBf2jv9VrQ
I6lLbf3Zx6kfjEvky1u2zijx49KPYAivi+x0YzWZm/1ytltnthvLiu49u9HT
bywLNGEw5USqOgdxR9k6ZT5Jsj/Qds7X8gS/0wati3903fZzTHQJW7PO1xa2
bdD/+LJR11ASi7vHh+o43L+H1a5Rftc6MAlMwVw4umLVvdbU9lanpgTjzfrf
0Q54QjX4vP9RnfbZdipvGvq/lsvOIF6Bp7kvNHbl12XHtH1WKnZj1JgJf3/Y
GAb09Cqm4LdTD1YCT6g+qN2v5aimbbM8oe3lL7XQ7uaQfZjFfPMMyOK3N8Lx
+nx6j8D9kuTtlqP2/B7nOZ2083rbz3WYPumz87icT+IJ4q+Jy5Z/k+WGIj8o
OMPzBHEU9j0LT2zvtAJP8Owvyt1zFKRu7KfigYd5nx8Vnhg1r1ZVPMzObq9e
nuwJ+s3yhGrw1Tkm4we9S/lysFdYnlj6YaZvzlQinrB10snp5a/pUblHj5PU
YQ17bjCFeAK7w7hskuwHnbjKj0/5wzR+GX/EdrAt96XVub1dwd5H+rQ+Pbb+
Hfe5chZpnkJMIZ4QX4gfrI8V35V31vp7jaO/vI0l18lrzEMhFxenwz1078m5
INpvrO+L2uvtNT6+RLZHnoPiCc1NsI144tXucrBVqObdYd8PSZIgx/V5Xuec
Ttp5pfMdvl9y6T57VTcbEU9QM1u+TefvXh2IxYY/qFtxc+WRWd77xHdH724+
qSkn/W1S+UnHIXV4gncx82Q2j9BhCnlvm+oSBxHHovhUdABfq87mdkWfQ1eo
s0/0HnSWn/7cix+x5wFP3F/LfJmItZ9p3Qw5galjaFkCsbH4yEHxxHFmiCKf
0zI/KP8bPEE9ZuaYYedxjTd0yiqe0Hy8eIKxiTAG8Xui3rx0VptvSHq+recm
jtAcumKx9d3ygrhANgbVXJDdztojdF/YY+j7uPrKxlFxbHi+DkvYZdgori6f
7uMJzsc/Q6v8P32che1f4iMUI4HvpPzgkK2duc6ttbOBJ16/WUs+T0mOnBy3
53vT8zqJ55bOd7i+sTXNxRLwA5zw5dyjwAxlMdqs9+Eff9s5d+vrQp5AWj8+
yGvG1fHbL3rv2PfsuN+v3s5eJtgJhuUJ9q94a1/byQuxJ6q3FxP0ZOnG+DI3
7ctJ9GNsn54nrCjPvPK1lPfHQufG47V9nXGl03q5OBAPwjrYwC4sXg65f8UT
niOs+GMcxPPoOD+XNG7hAJ0Hepw/T7tNLC7F1rgb1fcRHRa7AjxR5u8k/yU7
1y/9FV0enkCwHUgvtjxBXT2kyFbg6zLIXoGo5kSodf+8X+f2MQOxto/bP9Tq
8PJRqhq7dhn2CUTPde2PfrO2H+VNqHrWqK9j5wlP8Lzl+aCYbB0HpuA+hify
9iamSHKE5Lg/89+280rnPLzAE2fm0LnOdG4snu3MP+/WuNvnCewQD589y+0R
4gjsGbJpBB+p07/POeL6k63Ol/P3O/efng/vGuwS8MSo+utBx2mXHc/6JGi9
ur5DR5EnJtmHdj6xTHZ2q+MoNl7Mdc7O3+x88d3dzrmFbG6UmH/xhGVC/KvQ
N8pYItZn7Ksq92nT585JegZp3PKpeouWJ7QOn2Xx7XMb4/F5VKwzOnpR7Qjp
7jYuIrYf6f+0Tfe3XVf+R2XMYmOwpVPDy6pjR/uQWL6qg+B82ydqJ235w51W
6RiOXcPXP2/kzyKdr+wtOU+42uay4byK2EetbUK+X7Tz6mLGE2qL7Bgci/1j
H3n+6lH4P7Q7xVEkOWJykt4Bb9O5pXNu0CcmhuLj6cXOl48u5f5M8y9e7LPB
RuAKeMP7Oyk3FLYJeOLCzK3w/6XvHwRdzfLEON5/yjs7qfdr1bt93KK6FGXH
wkcHvfni96dL9eKiufbD7ivxRJ14a/EEn/jFwUp+7MAT9Id4gn65+P35kJtY
PCedBJ4IObP2+6Wo/57/eT7ajmF44qTyQ9G56lO5dZg3RucjHqLufsYx9tA3
paOjr1s9XXqrYhnsNkX3pN22aHyrzh77JobH13fzOY60Db9h67DMo33bGOZh
8zTX7S8+Nb/PcYhlgScsU9QZw9ioYAprgxBT2L6z56UcVbJH2Fxf6jN+s1zG
/4q5wQaFsB7HhyeYr0JgilTjLslRlZP8XjjJ55bOu2F/7D97YYmpjanO859/
7vzy7/8SBJ6AJWAKvosnqFXufZ8uLzzo4wl0QXRC5oC9fWIYOWieOAyxtg58
+bHzfPpwJtd/0aHLeIL+HraPhvFBU/w4bY35fqHTq75tTD+SrmC3xV+JeJAY
T3Bu+DJxrhcWz+Y8weeb163cL11+JWU8wbi8a/y+JfhoN32OvA0MUXTusAT+
KOiF1AmAKaiFXbb9xzPjjT2y+rz3l0FvV16gurayKpGNgvGGLcPmerVjW7YT
bWN5wt7v1u9Its9Jzme86uZJ4Jqhk/u6E3XHMj5r9C25scRxtH+mdSPMJYkZ
dH7KY6W+kK8jYm06CNcLu4SNofj9jYXQJnhC68EPfH4ynUmoVZF4IskRlpP8
nnib3oNF5/22nXtfP5i62dgoLiwtBpZYefWqc3X5UuCMUw8eBb3W8gSCb9Py
zk7n6Y8/5jwxu3k7vFdgCHQ28QT+rVXvOXJ1FP3G+wmbB3om38nX02RfdY5P
O9HZD4tbDosnquIl7f9wnRXLEz5npmwGNrdTLKeL/d/GTZMXzB6bc6NuBEwh
RiAn8crz24EnpJPZbWAG30+Mo3/69Unh+dImf5+gw5yaobb83Fv93LTPT/RI
9Dz8n2zcbIwnfH9V5QYbl2SxOVlt5XHnlRMvFNVpR7y9JBb/JV2ae2jS/SIW
CjEJs5neHrtOdcaAeCK0/cfsc+3ZSs4TiPgIsfEpljEQrlOWey4bO7QL4Zox
zvL31D5TiCFUlx2/Op5D8MQ4WeJtvbeTTF5O8rvjbX43Jq7o9sP+MxiWuP70
WYiZePLTT50bq+iyp7o67anABmvP7wU98cpy5u8knrhy5VTn9NUzYdnd9lLO
E+h66G9VNgrmpdEl+Yz9bvXMOjzhxfOEz+2DDMMTPR/keLub7MPPrdJvdfyc
7Jy7eGtc85vebsF+7TE3f1zpy/0qsTxRJt73hOuMv1PRNbA8wbqMr6J9y6cM
LqFP2O+9JxcDY3iesLqNfFbkW6HaWeTwhSk+uJfmPhHxBPPI6H1811y39YmK
PV/p04NgCmwB6OmT4In8WbJXv/aFxpqvsy2emGRdHvGPrluY878zeJ2ajAH0
f5+biXuMvEvya1IchOyHtq4Hy3RtJNgIbWyZ2kQ+WAkcI1sEPIFY/91R3+Vv
uz6QZPJy0vXOk35+dc/9bTt/W4+C/7FTEG8NQ1x4fDbwxPT6dOfm2o3wfP/w
/krOEwg+UojlCXQ25elENxwnT/ia20UCc8Tiwct4oY4dw7+ji3gCfbpJPnYv
6L9NeMILOjT6doydvPDOxy8JW4L8QsL7v4InfA2HpufohZiGMp7I9LGNsI54
oiwnjuqZ23pbMXaL+avAEMx52uus805MkbEDeh26H3POfMrP3T9T/bYHkRMg
xNE87/kXHYTE4ownfY5NluMDyLXqe/4P8d6z29j7bW7zfhDyLr14tZqzg691
Yfsr2DjXejYkxfEznngWySf33W/msxoTt3v1sAdkDO/wt1EHSHI4ctJ1zpN+
fk3O/63rg6nM7wmW+GJ2KcinD1bCb3/a161mWple/uVcu/P5d4M8cWtuJsRm
K4cgIp4Yx3sT3RFdru7+pOd7nbdIBx5WOMcYh9g8Q3Xe9V4Ogic0T8/cqK1z
V9ZG9lvFE5PUn6SbwEDK62TX8fGxnif8/mzMaNEx+SSflM6bmPBDv1+PgFC3
YGq5xxMsUzx77PnJMn5nbnlSY8TGOvvrPWmJ5W06iHuiaEzr/LEH4WsET/jr
0fQ9Z9+P+JIh9rjwPjwhbld+XH+fKb4CgQ/gd9kaOA7/40dFvI2d74oyRGKJ
JMdYTvq4e2t16oI+eBv6gfmfwBT732GGR+3N/Ds8wXfmkqgtge+HeOLb589D
rtj59mrn089+08cT45Ymcdm8u1RHD51f38viNIaRIt+rYMtfH97Poi5PVOV/
wg/K+vdgA8BmQ1/a5TGegIc8X/BdsSzUnI7pNJPSmyxPxPQTH5MR86kZpa2W
KT66//jQ79nDFnQ/8gIpz1PV+jxHD2KsMNeNL46NnR7XGKgzTscxzvV/XT8q
xNbr1n64RtiMYAp7HUZhCbuM2tU6vuZV7D1q69f781TupmBvuN0bU3zCE7qH
xRR97RiTb1PZuSVJclDyNoy/t0mfrtMHJ6kf/LnYZzQsYXUx/lcctniCeGwE
3yfLE/fuDebNafI+LFuGDlw3XxT6rtYtir8dhzSN5ajc3+v1cJ7UZFNMu5cm
PIFYGwUMAKvQN7AVHMG7m+vOPDPMyLwmNgvxhI8jZR821tKuw2dZjeJR9Czt
P5YDR3mdaPfeXi9XzDhyCWW+TpcGeGIctSqOq+h5KJ6oux3z2ZPU57nm8qFR
LQkxhWXOoryxR02sXl73/Dlf+lrxyrHrNg6WwEcSViFPFHEP4gnf17F2sp18
5mL2BY2R/PgTzNl00t7tSY6nnEQ98208x6b9cBL6wp8Pte34pNYsc+qKp+X7
7dWMJbBT8I5Cz5zd2u7jCWwVZ8+/F2qMDfvujOUtHVb3YDv0P3TfSfDEpPSR
g+QJ7CchZ7sZB/itiC8kzG2SFxPdfGc3s2UU8QRjYxS7jOI2ms4piydoC/W2
x31dfOyI8tYe9n182M8Nu7xq24OwTSgWiOcYPGHn6+29e1A80fQ4RXP5dWrg
6R4I8ckF/maj+DfZ5cRz089aDlNUtY+++Pl1K+Ru4jkTYm1uLOS5YBUfgV8W
wu/YJkI7jH/TJMbzYd9XSZIgJ0nHTOfZvC9OQn+IJ8QUf+ramvEZQC9UHo9Q
c3ix3Vna1yfhCVjCxmbDFePmicr39c8rUR8myxNF7+lh9ZVJ5mEh5sPWvo6J
jU+vI7PtqWgcex2eoMbD9s5Crq/AC6Hm1F5WJ0x1sfhdNo1RecLmmG0q4olx
20iom2ftExLlkD3JMo7nHflFpd+P87rY/am2mq/LfJAx0lYYgzGeKHt+1Inl
8cssa9DPnidGtUkUbadnB9/J81XUbmurkF0i1LyOxFG/c3km2LxCPtvZzP4x
znjr2Pkd9v2VJImXt2FsnjQ9OvWHO5/uM/vpD+38/cw78Ycfs5yQPNuvdN8b
6G34PTF3LfsEn8Rkz7/YHur920RPZ/4evZtcUujXsXXw8x93zPCkeUI6wjh5
Al3Y7nv9Watzc7n//cz8IvlQTz94HOTs3HyogVHEE7FrF8sdO4xYnhimr9m2
Tr5aK4wTYmywD8V+t3HoVr5aPH9i8z3Vfb7VffZN6l6xPDtudijy/6/TLj7x
PfJsW5VfTFJlk3i1m8358AlD4Dtk4yT8NRzm2tddv4gneG/IHsR6toa1jbHm
09auI54PnkgskeRtlZOkW6bzHL5PjmO/eHsyPsi8D/BzUi4/5eJnOXo1+V3E
Ewg6KjxxY6FeTtdhhTn8xe2pPp7ARqH8IloPOwqcM85jT5olpDMcBE9wTeVb
hD4tf6ps/+c7V1e/rF1bY5w8QZtUd3iS/Y3Pl+L0JbG62ZKi/j07f/PExFJM
4jnGc6Ko3oR85or6vMxfiPHLc4pP6383DqbQ2LP5Tutsp/jpsnNSDTzlL/b7
VrxHWe4x2f+UH0k8Yftd9oPPv3sUHZ+nuvn7iq5/k2sci1Pi2uj6aH+eJSQh
H8idzG4h/6fwOea4a3uOh32vJUlSJcdZp0znOt4+OW79EvJ8X1sM33kfEJ8r
nnjzerOz2M5ygitfZ1bjK8sf63miykZBniZ0V2wI8kmqK+i4RfEEiN7n4gmE
9qAnS0apQef1jnHrucQ7MO99c+1yXo+N86KfiHlsWuuOGlPsk7biC6SxWYcn
mrS7aH5YepN0qdmu34vqXfn1d0y9r2F84Pw449xjMTQs930FT8TGhs1ZXMQU
ZfcWPmBXFjfD/aJl1Lc47Ht+Us8txdryHR0xpndLZ4/p3szpy1/I69X45PGb
fDFVp3pc7Klj2eM2uc81pqs4iXbHctr6nFQx3uDci/r+zNyjwAowRBbncyMw
Bc8BfsNv7/LSpVxsjt+m1591ZVewbeS6wBLROhGROAh4IrdXqA2GJ8Y9zg/7
fkuSpImkcZvkuLGFbeeNx63AEQ+fbXeurW8FluC9A09I3+O9ic5gY7KzXE+P
Ct+jYgHlMkU3Zo4YXU25ZrExIPxWtJ/gm/LzenSuHtvF3ptWzhJW7rRXwzZV
eZlG0U2uLt3qXHp8rdN6uViqr5QJ3GDzpfBdtpcyniBGmPoI8Aii5ewD/gs1
x2Y28znSMp1qFHuD9VfyPIGgD300E5+73nH1g+sIYwkWkN8S4wn7g+UJ+oEx
xrJY31XlOi7jCcTmkOU+4vzQfWEJ7hs+2c9Pf87yHognmGOmP1hmeeO4Pp9U
145ng/fZEUPE8rj6sYMPDTqp9Hq+n5/L6juH/lzL6tWhu/Y/Y4Yfsz5Wu+o5
4PV+CddTtSFjIpYuskHEcsba+8T3t77DDhcXpwM32LF55+m5IPf27xGeHzAF
8xXiiVHjK2LnF6sTYbcd2F+srsQY8zodl/dwkiQxOU66ZJKDGQdHeTzYZ/7t
/Xc1HIEOzuf1pWwd5hrxb+fdJp2B9+b2TivEaD/cWC7lCel+4gktQ99j/l2x
EOIJ/mc96YbofNRQQGdUXW0xhepy8/12a66QJ/SO5XhFsdxN9AgrnAc2hbI6
F4fFE1w3yxP2eKonPYweNqB3b2/2xUCwX9uf4gl0bXiizK+jSlSzULaVqrod
jB/6cRimKOMJ8mz5OIqYnhU/h62B+HV0Z/HGx2NkjIN6Fp2bawd7DM+GmH4v
m0JRfQXsD+IJjU++YzMlrxD7lb7u71W2bcIUw8RA2/9lQ6Ed8r3isyxGmfv5
1e5yltP4p/Lnpe4p1o31dTanwxg8F3jCj81ba2fD54ONSzlPwBGsP2p8hbbz
NQqJqe6Llai5/75YiTGxxFF/7yZJUlfSWE5i5SizhdoiHyfxBEJuWHEEn/i3
f9TVc+AK5pSxTcAT5I3d3VkufDfqPYf+Jx0ZPVzswCds4POkWp6IvZ/t/ot4
AmFeTseP1bOoo9sWxe3W4YlRpYwnyDeEXsu7HJ44t3ApMMbtp5c6G89bQScj
V7zXwUbhCZ9n3vME+yb/o37X2EEPYj7e8wS/1zmubA5lotp7dpnlCa6/lVit
8z69rssU7Fe8a5kCHRpGwp43Dv8b+pKaDaMwxUE/c7iu8ETZeVXVaRNPKJ6X
5w78AEvAFH59O/6GjZ+28wiyU8Tuk9ixQ16pna2Qw0psKKaw22ieAJEv4r31
m/nzrah95Kwq6u9LC2udq8vnwv6wS7BPm0f6wuNLgSk4Bn5PZ+dnAk+MM1ab
661rTkwdPFEUK9HkXTTO9+1hv1+TJBmXpDGdxMtRYgs7H6RaE+TXmGpnTIH+
p/pm+GXINxqWUL0KvdPf7K0U1p3Te/Sb1TN9PMG7lG2s3ud5okrXk7Av9Lxh
eSLWZr+siCfGJVYX9/pRVfwEDAFTwBb0Q+vH2X19/nFnebtebfFRZXGznY8F
+cd7nkDnlh+81wUX2oP2k5jAE3CnHS/8j+2Kz7vduVjxhOwYPd1wo48l6til
YFmxhPzx2A/+dcSmcG+Eefn2ePMZ0UdNfKHqPlv8cjh01Nhy9snzQXPWXMu6
9gLFFTAuLppcEPg0sR/8nWDimC+RrQvt76M695vdtigOXGOEdvnf4Al7v9Ju
+bHZ9fwzjnEkm+33P9wauPfLrh0CT/D/B/dXgug6whTEUYgn+I7AFMO+b6q2
w37dlwt2gnXomtwDh9WGJEkmJWl8JymSw+YK66+q44slEHzvv/o+02nIca7t
WK46Yrz7WPfri7+rxRPE+6Lnyi7h37NeT5ZvfJWfO4IOGWOJe1vrffss2ta3
+SD0cK+3WJ3C/nbUecKLbFo6H3S1GE9gHyFmQ35Q2iYmxETExox4QszS0zU3
cp4oyyE8rE0BnjiIMfHRTO/eQ2f3un/d54hfR/sRT1x4fLZzdflmmMv2NZbr
PMdoG3MNyt1QhydkE4An0EnRw8UT2g88EduWcVSU26mJvaIqBls+TTGeQOAc
jXHFUfj9eF87MYXnCUR9769l3XeFHR++1swk3l/h+yFzRJP+SZLkOEsa50mq
ZFJ2i1rzlYYnqENh/Z00PwpPhHfqeuYDj31bLIEQS/HZ2d8WzjGHud399Yj1
Vt4lrxvauAi9cy1P4HfCvmJ5e/i9iCdkm/DxGxLitNmWY8f8qialJ9ZZbuPU
q/x88HFCOEfFnv/ll/XSGPdh2jiKxGpEiCfQR2HVMh8sjRmuFbEwshmhz4kn
7BgUr8Ty/x9WzbNhhHM6NdPvN4/ez9wz9y7z0fyvueqiZ4F8X/hk2/54kHOB
Kfju85A2fc5wPavi/yXYdjge/l0wBc8ZfIh8zPWkxLbxXsj1Nei3qTrUxIL7
32ChXVPrkbZ7lvJ2WB/nwFwL3EgfeJYb5Z0wSd2jbz4qsUSSJAcqacwnqSOT
YIvYPm0MnH0f4FsAS3zUfb/DEBfmszoUvFNhCfQ+fBNYD0a4NTfT+fCPv43m
QkSk24sn+EQfJLaWeWfpy0V1FpSzh/dyzFYhnQD2kM4pv5gqnjjKIi6ApeTP
UyXW34c+xlYxqp4lKasNUGd7L4rx1/x2GU/YXK/iCfs7MSJwr60lZvPPqu1V
ef6Puvz6yxPHAadznuB/Pu0ctXxe5Pei9aokVqug7Pliv8MTtCGmf1vhWsET
6ODo46yPTq5aJAfVp3CEJMYTdUU8EfstxhTiieUfFgIvWluUf24P+7yf+Pvq
iLDEYbYhSZLDkMQUSZrIQdktqEHBJyzBOx6dX3Um8BEWS/BelF/81HI7xI3C
EtSggCemnz4J3GC5Ap3Y2wzYP3N+zFdbnigS6ZPiCfTJ2db18Cm7hUTbWD97
2T6CDWP/WFW5Y4vkoHXQcfOEch01bYf823xuzVGEvpQfHWMP20LRvsUS8GBR
7RK4QbE92v9xZYYqKbtX4AX4m34gXlYs4dcj988wPFHnGaTnCkyhfE0x0Ty+
1cOVK6lujP4oYjlCMo68Cq92B8feo60bQSwHIuR0hSfG9bw/aB3jMO0TSZdK
kiRxRZLmMim2gCVCbaHu/tAblacQltjrxkoy/8t7kWXkXIElVH+CT3jis68/
7txeHfQrL+MJ1SpQTHVMt/H1xhSrgT+U5wnE5k1p7TzuPHqWxX6LXYblieMk
6EXWNww9fFiekDAWFDczqq7ueSJWb1diecK3x8ZikAcIpuA7NrWYf9WobT7s
64rUsS8U5cdl/h2p4gn8n0Z9XvEZ4wnufa63eMLnFvYx+5MQ+odnwT0z73Cv
pFZ6E7HxFHbMxK4JTBFqREee81V9jE3P1so+aJ0isUSSJEdDElMkGVaKfJdG
2l/3vWBznmOXIEYW/wX0M96JygWvetn4PMEU8AQs0Xo1+H6FH4pyL8mWwXvX
8oRqlSlWGp0SXRid2PIE6+LnVPRu9zxRprMeln44iu5UpdvTZ7CE+nWU80QH
RD9kDIxS+06iscc8dhlPSBfzy5RTlE/4lrFKLRT5OcETnPuk4mIO0wZi9dEq
thBDSLQPO1/uBd+ocT2vYj5ANpba18zGPuHn+MdVC9teu1gfwFmj7tvmnVJu
ZeWJ4rv8nL4PPp/LWX6kGs9xW9daYx6OuLU2nbPFgb+LDpgnkt6UJEmxpPsj
ySgyTrYgNoL3lGICVecXnpAuiZ8T/6NTwhvwBFzw+cVPO6evnunML9zsvlOz
efAylvA8wafVd+EE6+/k39vBl6oi3tgea6Z1s3C9Onq2t5OMSw6LJ+rkaLXr
Wp7g2o963sxDa7zG6mZ78fYG+WExRtGt7vbNNZPn/1YjnlD8dtX1sPmApCce
NFdU8QT89fzVo/DpOULyvRkXk2QKciPFcij5GhAS2S60Lt/HzRMSzxO2ruQw
YmOxGUc83zSeXhmfQeY36H8Em5qe5WX9CE8UjUfsx01iXqqkbg5hbNuH8a47
7PdukiRHVdJ9kmRcMgxf5HHZt/tzw6KnMXfGMuImsUfw7hNPEGMhnqAO9YWZ
WzlPWB2wjCeQ9Z3taCy3eALh/RvTKco4gPcssd86TpGfE8vr1JeYZM26urK9
M5vnxwr1NF4uRtoZ324U+4TqipHTk0/V7x3lXOAJjT+fK9bPWWssaRnXlvHI
2JzdyHKP8XtMLy7LF2tFPMG4p2116/2prbY22qTHAceK2SHgh62duZwnqvZT
xhTj0E/17GGuQse0c/dlOV9V20420SY1sCV1ahbK9jW3eTXYDka5Lr6NYgq/
TM8z8UVV/yErz25Hz4XrLqbAjjzqNWM+CSliiq++n8ttIQfl85R0pCRJmkm6
Z5KMW+ryhfV5QtDPri9l81S8O/gf/U3+0MxPY6tAD8TfSTxx9cqHnXMX39nX
y+bDOxOds4onkKL3c1aDbrZQ74jlj7U6iXiCWgyWJ8q2K9bhNgb2P6pe2GQf
6D3MtyOL21Od2fZUo2PZHKtNxerW48qRhB7FuIrxBDqYanjrWN6vXrVQYAD9
xjna+thVsTJ+XMmHyuaJqj8+Rh8PVWPF+gjFfJma5ieqslFg/yjLQ1tXLE/4
cyk6V3Rz2FU8IWarU3OCWAj07zr1K63AYKOMa8bgKxNjFGLQjA02FlPB+ZX1
HdeU8xBPWKbgmeSvu2IpJvE+4X0AT8Belxcz+5V9b0ziuEknSpJkOElMkWRS
UsQWniUQ2SnEE+h7yoPPcvQtyxPLP/ZsDLs7y517984V8oRiuCVlelgVT1iJ
6Y5sQ0xHLK5jWCGGQzEe49AR6647Kk8Quz6sjUXxCEV60bDCHPQnM5mNoe94
b3q6o1gG3czGX2tMiifs9pmetdSYJ0Zlgkn7Pdl+R69syhD+/NALq3iCOYQm
zxnySn0cqe3Ns6ROX9t10M3J9YTOrRp2dt3dvf4+sbmasNMU9cPas5XovVDH
plMmgZHXsvp3jFfaRS0N7yNnt+G+ls+TF3gq8/9azvPgeRsF/3OurMP6o/IE
bSnzdyJeQzxhmUI27nHaLJIulCTJ6JK4IsmkpS9nLDmeuu+AkC/kfvZewoZ+
ZTGrN8G7HB2OdXi3o8vxnmeOmXee9E3xxKlzHwabRRVPjEvXwqfHxwkTv6EY
jnHF5Yonmmzj50kVpzmucy/TyXJdaf/86/AE1/ag6jRYnhA7iB98GyxPIKPo
/uyLsczx7X7s93HnhxrXdW16Tbxdw48RdENfX9LvowlTiCd8bbYwL1FRk8K2
SzYKeEJ+QWo/fj0sJ3/1bne8YGux+ZqQIqYQTyz9MD32a8T9A09gU9ndy3jC
+0HZa0gMuOqwqK/Q55m7gQ+4PqwDT8iXzW4PT7AM2Xg++nuBtsjnyesfivum
n4k9gSfsnFSfjKC/JP0nSZLxSrqnkhyUWBuFfGN5p/FuUf068QSsgb8Tuhjv
PM8T0lvwgSJOuwlP8I6P+QjXyfEa9NE3rdAuvW8nwRPKO3sYuuQ41qmjD02a
JxSfgB+MdHrxRNEx5f9k/x+2H8UTyoMcO2YVTxwGbwzLE4p1ifUZerh4oqgv
qnxyvEgfjjHFme/apdfO697o42IK2kYsl3iC/8UT3tYi2w3PFPkhaZ/EhqAL
47vDuU8iNorjqR4K32N1KSQ8Uz1PIMxdwBKcG9/FE/76KvZ+XO+DGA9Kpjdm
chsQx5Q9RG1W/lsxxVDvoqT3JEkyEUn3V5JJy8DcUvddIJ4gBlvvr5/+3M5r
h6EzYBNAP2A+Dr0Dnc/yBHaKU+c/qRU7QVxDzOcZniAOuSg3LKxgecK+a1de
tkKdbLY/aP1v3LrkONaJideNY/EK45SsNnIWj2PnztF7NX7s+lxTiX6ryjFb
JMEG8mYw19CofTbqNRjnOLDrWp4Y9hjc/6M+Y+RDA0+UjSsbf8D/8IRvG+tY
exXnxzLLFMQbwBq7e1t9PHFzZSHwxBff3Qmi2iasP44+l3BMjVnm8uGBV7v9
+8OWw7PU+zu9eLUa2IFtFDNBbfSytrE+MW+TflfAGTAFx4Un5jdb4TzgCtrd
V0+jod9T0nWSJJm8pPssyUGJ5QneEYqH1LtbPIF+oNyh6IWWJ/SugxdurjwK
NbQ9RxTpY5Yn0BmWXlJr4nZ45/N+jW0DT6AXYDfAXjLgJ75VXKPiqEkst6ak
zpz8UchDVSZZ7E2PJ6p0XdVMlmh9H8Ndp08R+VSNK6Y8doyDGB8HfYwYU+DX
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
+F35Ye26fP/iu8XOfPtR0CvRWfE9Qh9G91d+qFDrOJLTSTzh3+1s29pp5fPW
nifkNxJ7l8IJ2mddfRGGUM6nXLCp1OCJoryyLMdOU1dvQseok6NWMeZWfF/E
ztfGrtbhCcsj0nXJc3th8WyuM5F7Kab7DqMzqh62fLl0XK635vwtT8Ae1g5A
nmI+PU9IyKnvfZMsyy39MNM4R3Duo7+XxWqgy8IUZedJHIbtL99nNldt0T40
f631dvfqtdfzyqjx9cMIx2zqg2bZwY9Ne270v8a2Py8fu64xF+O1WN+HfLA5
T2zk7AEzFPEE8wqKzWJc8rwUTxCXofiJX35e6GtX0T1chyfsmCgaF4oBgSf4
RGAK1cG268IUL/68mvMENgkksUSSJEmSJImJ+ACewAeJWtf4MPHOhRM8T4T5
qe4yfINZR/XniKF9uLEedKsbj9fC90db0wM8wTytzcePXkaeWs8TSOaDtRHs
JWXvU/EEuWl/ibxrY9sU8QT7QWAJ+TvJ1wkpiuMOOubrtT7frUEdqWd7wCZR
lyeK7BNWt0IH2Nnt5wavm9U9jucJdKVzC5eCEFfDusox1aQet/cPyuXNYDu9
rse48jyh31ke4wmEvAGyHXkbktcHy2LbfV9W5dH15w1TNGEvb0cQT/h8qE2u
a1n9hknKMDzhx0FsHOu8YnH6sZraitdRTLbfvxflR1Ds8r395wAx3DGeyHIc
95iC2ATxBN/ZH75V+DplMdwLhefppYgp7Pnp+nq7DLyFjxOi5z7t4jdsQLID
Sfb2NgJLIGF9fJTgCRM7cdjvrSRJkiRJcrTE2hxgCuIoLE+Edbpx23Z95rbg
Cd5nxFlQHwCbBNuQs9PyBPaIWN0JzxO9d/OlgfmyGE9YPbbsXVw0b18Um31v
a71za2O6m2eoZ5OwUnSspjxRNicd05v8MusvXcYTmZ4Q1/39Mjv/HvJr7iwU
8gTHUHxDUx3Rx936NvNdcefYJsgty/iKxUKTj6qKJ2LzyV6UQ6us3apr5+1l
ZX1ga1fUWd/qi3Z9xU1YpmjCKE2Yokle2jKRPUb6/aj7KbpnPHf442VMuhn8
4OY2ekxR1SbxBJwgnsDOQA7rGE+IVdlWz1nxBONQ8RN/+XW18nz1HZ7w5+15
yf5u7Vj8D1PY535Wr1zbtc0+iZHaCExx/XGPG1JOpiRJkiRJUiXvTWW5O8QT
+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
6sRWDyvwDsfB5jAMT1xd/TL4YpEvqq4fkmIq4AwYxOo4Vbosx+ETnojFbTTN
F1qHJ5quP+q8eCxPFTod4wNesDyBLQUJMREz7b4aEDGeIE9AjCfqcJK129i2
1q07YcXag8r6oYonYu3sr2/c7z9zELaKomPY5T6/ad3xUDW+Y/ePtY1xz6Dn
17GXKe8cY0+2UuV/lR2CMcl5wBfiCbsP2SXK2g1PxPrJxomrLbBL7HwR4jDE
FJ9cvhx4Ail6xq8/79W7v7x0Jgh5nDQm4YkQN4EklkiSJEmSJEOK/J4sT1i/
J7se/7/bfeeo9ir+JEU8wTtZdgp81Yn9Rse2LKF3ODyB7o0eLj8hvpfljK0r
o/AEcnPlbu7/pLjrqmNOkifGof8V1UXw+leRv/a4hf0yBsRrxDjrN88TsTbC
IEU8keUja9fmCV8fUb/t1JxPRvBFqsMTiglp0q8xfrD1B+qc5ySuYd0xVCSW
n8ridar2zz3DvRrLpSTJ8jS0+rhMuehsnIR8NX1tC2yOr3ZVr6XaPvTpqf8z
ZwrPTmLKjClWB3giuwc2w/HgCfLIIuSNOnXlm877Nxeiz/ZTD9YDT7A9tep4
JnHe1MDO7CNLgSe++E4+rhlXHPY7KUmSJEmSHD8RTwQ/9QePAxuE5QUxebJP
SCxPUEcMniA+lvn8jRdz4R2NPi6WUP5V7++UvZ+XAnuMmyeQkAM1UmevLk+Q
m6opT3AusIx0HvIz1tXHxq3fWT0MUZ20quMX8cQk2mh5YqGd5YxFTyOOghxg
1JPAzy6mT+p/bGas7+OykSKdb0k+LvvHWPphppD1LFPUPS/5ZsW2QadTXPkw
NbBtu4pqGo46ZmK5xLwNIrZtWTtsDQius/ZfVFvC8xbstFvgR4adAV8lzVP4
9nHv8jtCTYjtH9v5Ncrq110MLEE9bIRl7OdegT9m3Xh4zxOcD7Y327/WD8nf
s/CE/V2cCk8g712Z7nxyf737TO8xgeWJK8ungjDWf9xdyHkit0+kOOwkSZIk
STKC5Hxwu93HE0W1LGJMga2CWhTknaXOnWWJxXY76NKbL+fz9yvvNPyI0Nc9
T8gfSr4HtXWgX9YLfXUQ6mEMwxTYJqjBpzp8+GfBCbI7xEQ5hCxP8Gn96dEj
5V8zyTnjYXmiaD7Y65tFumbmd1LPj80fw/MEuV+R+fZqtC22rWwTbGcz2T7I
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
aB7LEztP7gZxbcJBqssGM3CNKb9JPCGOII+CV5ahHIqYJ3RN5XhCEk+wTbr3
eb6Ey+VyuYZUji1OO2PoP/WVTw6P7+4fHn+6v3X8+cGHWZ7IxTmhkufJTTzR
176mbwM2CXY9Nnvsn1BOhWrB8lrVlHxU+0rgALgBFlJ9f2wV5Wnrd8Ut0V+b
6VSHkvUyb66fQYlNvI4SA3TNzYblYkas2OQgyI5R6rzK8UTb+KoGgLU7S3gi
9/3etzcmPufyJNTXWzE39jfW3+SfwEZnuZxvPKfnVTwxJFPkeEL1n2KOkOCJ
9788CKKHg+aL7X/llIsnYHpYQTyBD0b7hOCNOAc7Nb5Ml6tjkHqu4Tzhcrlc
rkXqLPBFjifoh42NiKy9NStPIOwD7G5NXz1fzE+P/d6Uc9zEE5Yl5s0TvKr3
xlA23rxlbW71Buyai9GXJ1LbwnIsT9jf8Gm8mPAT5Pclt522pphik579PG2L
tvUB4VzDHhZPcK6w7KZn5JYneN6vdbTxBNcptaGwx8UTzMez/abn8V30l5s3
gi5c+JepbVaMk+o3KU8C2W2EJ1LLZpvlV9F1qFwIeMIyBEwRfIIn34sn1I9O
x0y+C32Xqhel3+KeLnyvvh+6/y37HuxyuVyus6fT5seo6pocBp4I9sPzrbqX
m431l70/BE9Y+656LeOJklqq2B7Kjbb1nvSd4p6wMVim6juROwELKNeCZeFL
UY9t9cNTLJPiavhsbeN15wmNGUxZceWNxvkZh0dPDyfi0vpuh42na5oWrihh
njb/QirXQetu44knP2yM7N6NwBTKC8jlH9n1EB8W80R1b2nmCeUkywdm66nO
KnxD8MSbt7cn9oEYIdtrD56w9ZAQudzkS+SWDU8oRktMQd+JX55t1fnXfMd4
cj2JJ9hXMXt8LPldtWDb+geOx3kcF1X7XNxH4XK5XK4V0TozxsvXdoPO3dqp
6jaN8gssT9h8VMU8XTt8HHInru7fDP2x934o63+VsmO2Hk3XPGI9YgNJvoAm
m9TWgFUfCSvVx7H7yivzKQdEz8GVC6HlpGxrvotze7vEPC1ClS9of2K7sLHi
7RRPSMo3b+Ij8YRyBPpuo+WJZceB4SNJ+SysxBPkVSDGiP4qOZ5QXJhl4nGu
f1UnqclHgfBrzNpPOqVfnu0d/+XD/zz+77/9pwme4FU8QUwT9Z9Q6Ht3YoPz
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
EWfG8bQ8sQ5MMcv81o8xb54IvqTn9PTYCuoyX0luzD9+3Qtqy6fu62sp4Yn4
eKTs+dJjxjVCHVnxBJ9LecLm6Q/l23j8fbXt8ARS/nW4R3J//OD+0u/VLpfL
5XKtsuTHj3lCubzKJW6KBVfv5RxPSDbeSPY3arNjZKdgm6smVKmtsEo8Yesw
9VlHnPPQxBPWH4H4Xe83nhwGaexLbFrX5Dmp4wE/iCcQY8prEyMqxq6UJ9CL
k+mVrwwzDB0nVLrfqikW84S9TpXjYW1/5VPJlwlP8D3na8wTjfkOo2XCQPEY
dGFQW5MZnnj1xl5Q8NuKJ3g9YQnnCZfL5XK58hJL8N/5yvXdwABV3E/1nFU9
DWAKWws1ZWeon4Lts4CdwHyy5eN4I2yDtrqgKZ5oq6Vq7W75WuJpQr7IqBaT
/Z79b8ujVc8NpPlD/+xRLVrbl49X9dqQhur9YHuAyDZVfmkTT4Qcjxfzqce7
ihoiR8EyrJYHO/Ce+DfE+V3CE8zDuadrJY5R4jjG14p4wmr82zA5IOl8laOJ
bfv6xzvJGD6mszVp9dlOw3y//LI9sb9wQRPbHz3Nb2tJ/nbOn8l4sl7GWr5S
eCKww7UxVyz7Hu1yuVwu16rL8sTrdw6DzYkPoStPfPvDdt3nTr2a6dPG8vrw
hLUvsMdVA6qpZwLLlp1SGlvNeuLlYecpP1y+BL4rsTexDdkO1ci09WVZj55L
y45vsudL/Ce5WqRah+UJ7F3ysHWczhpPpM6btlwD+5u1SbFliaUSTwSdjGeI
L3s2vVzl09jliifE4fbctn0fx+vcb7Sf58kTlldSPFGNxyQ/2NpZ3ANu7P0l
7CM8gdhH9bVT3dhUzFOulpXdJuVu5PaL9aV+Z92K1Qx96ka+CPdHuFwul8tV
rjp/IuKJf/z6sLalw3PtkZ8h978untDzd8sT8ICWhf1QklOqvmzqh4FY1rrw
hJgixxN8xziJGfQM1ca+zGLr297c9BNk2danotq1bGNJf4TTqD55y/act8/i
w/IMT8TTiycsU9h6BfAE86t3iOoKtx0ba1NbW/7a7tXjb/+6M+g4afmlOd/E
ECE4SDxhf+dctzFHXXlC8/CqZcg3Nz1dxRMpFnv2bD/c+8QTy74nu1wul8u1
bop5AjsTu132r/IhsDubeALbFVvK2tJx7JOe2bfZSJYnxBLiiVR9JrFDac1Z
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
24lpYn8F38mGz7EL81i2YVxzMUxNvVdK7Pp59N/uKhjlUeaai/enGsOqb0S8
b31YUP1rXrTEBsITv7u25/3tcvdo5wiXy+Vyrai68gR1ZbEp4l4N2B16Jo+d
jo2uGCjsemxpvhMjqLeb8h9U8xX7mu+VJ8GzeuwRfhc/YGfb9WGraH7xiuy8
mCew78Ua4hOmsTnbTMc61DdgFjuuhCdUN8vWwGG/mnphrGOsU1eV8oTlAPIR
xAlNsVF8b38jxi833UzHP9HXrq+e/NAvJ4T5EDzRpS5yxRT5Y5I6Pqmat6iE
J+483A88IaZY9r1x2XKOcLlcLte6KO5P+4cb28dv3r0Z9Meb948vbm4en7u9
EWTnUwwUzxSpIR8/fxVPyG5fNZ4QUwzFE9YOY15ka1WJFbStmpb3XXhiHBdz
eW3qyPaVtVd1fsXP+sUO4gkxhDiglAcsT9j15ubv8px+lviu3Sc3gjiXZuEJ
6rbC+V1ZdNyzfL/mEc3fd3u0XJ3L4+8qn0i4L4kn4IsVuE8u5Z7sDOFyuVyu
dZOeCZ68UjsWhf+zTPxBG0+glN0iBlB+wI2Hb0/UhVUegf1OcVOKScL+tvVd
+Rz318vlhLNNsmNsroRyMeCXvjWb7LpjnrCcY+fjO9bJ/mj/UK5fYMwT6tGX
qnfb1O970SqxY5umsTyRsnftdPE0uXHIrWsW+z+1LLs81UfrOnawsmL0um6D
eKKtNnHzflQ8QW417IsfQn6P0mWoHpv6VKTGmfW8/+VB7ac4KzzhvgiXy+Vy
nQoV8ESs313eqnQyDbnasY2A3SQbgs96Biw/A+zAb7KhbT1YPatXTdeheMLq
8Y/bUzal7E5ebT5GF9tL2xn30GjiCZt7rXU32WTMh10nTsnZqKvkw2jiCcUs
5aZZhdxjxhj/VRe7PLaZZ+GJvixw++Dt3jzBOQbDjOs1Vzzx6Ve3gnae3J3Y
ztxy1P+b/YBL5IvQ74dPt+vaufBEYIrrp78nhXOEy+VyuU6jJjjhRFO+idH3
1IOyPGGXYe2vIXhCdZlk2/O5xMZvY4qheUKxWpLdH+VciwGsL4LYLzGTXXdq
Hdoe9RfUunLTrxJPNKmt7lP8e27aLv0tuuQS6HzefHSjjpcrOS+0nboWmK+L
Xc/z/6rmQH/fAjyh88buE88AeM3lPCDLE6r7uvX1ZhA8wfX+/pcPg0r4TDwh
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
T1Txnvy89Il+yz/7aan9/wGQ0pqk
          "], {{0, 414.}, {788., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> True, 
          MetaInformation -> <|
           "Exif" -> <|
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com"|>, 
            "GeoMetaInformation" -> <|
             "GeoModel" -> "ITRF00", 
              "LonLatBox" -> {{-185.70954597711426`, -42.40718022288577}, {
               5.523341766181147, 63.42150453381885}}, 
              "PlotRange" -> {{-0.7889949307020097, 
               0.78899493070201}, {-0.34850092674070937`, 
               0.4796757769561033}}, 
              "Projection" -> {
               "LambertAzimuthal", "Centering" -> 
                GeoPosition[{34.47242315, -114.05836310000001`}], 
                "LongitudeDetermination" -> -114.05836310000001`}, "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com", 
              "TileSources" -> {"Wolfram", "OSM"}|>|>], Selectable -> False], 
        DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {788., 414.}, 
        PlotRange -> {{0, 788.}, {0, 414.}}]], 
      PolygonBox[{{-0.7889949307020097, -0.34850092674070937`}, \
{-0.7889949307020097, 0.4796757769561033}, {0.78899493070201, 
       0.4796757769561033}, {
       0.78899493070201, -0.34850092674070937`}, {-0.7889949307020097, \
-0.34850092674070937`}},
       VertexTextureCoordinates->{{0., 0.}, {0., 1.0000000000000002`}, {1., 
        1.0000000000000002`}, {1., 0.}, {0., 0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], RectangleBox[Scaled[{0.8, 0}], Scaled[{1, 0.2}]]},
       TagBox[
        GridBox[{{
           StyleBox["\"Geo data sources\"", Bold, StripOnInput -> False]}, {
           
           TemplateBox[{
            "\"Wolfram Knowledgebase\"", "\" (\"", 
             "\"https://www.wolfram.com/\"", "\")\""}, "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] OpenStreetMap contributors\"", "\" (\"", 
             "\"https://www.openstreetmap.org/copyright\"", "\")\""}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
      Annotation[#, 
       Column[{
         Style["Geo data sources", Bold], 
         Row[{
          "Wolfram Knowledgebase", " (", "https://www.wolfram.com/", ")"}], 
         Row[{
          "\[Copyright] OpenStreetMap contributors", " (", 
           "https://www.openstreetmap.org/copyright", ")"}]}], "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{
      {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[0.3]}], 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5245732862145802, 0.28673531905073696`}, {
                0.02347421450099374, 0.014128310682625767`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5245732862145802, 0.28673531905073696`}, {
                  0.04278884136200648, 0.02575311069456332}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{962.3886436413768, 
              999.4477813884165}, {-180.47051171700298`, \
-157.3696399355774}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 5.42]& ,
           TagBoxNote->"5.42"],
          StyleBox["5.42`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5.42, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.10104284747640035`, 0.07524153792813293}, {
                0.022044759934871788`, 0.013267971853566582`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.10104284747640035`, 0.07524153792813293}, {
                  0.04135938679588453, 0.024892771865504135`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{496.27194435034596`, 
              531.1961674430664}, {-21.893270671906578`, \
-0.07732953281776389}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 4.78]& ,
           TagBoxNote->"4.78"],
          StyleBox["4.78`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.78, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.32731955380868455`, 0.19509423282282717`}, {
                0.02192915997744549, 0.013198396272524338`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.32731955380868455`, 0.19509423282282717`}, {
                  0.04124378683845823, 0.02482319628446189}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{816.2415277096003, 
              850.9931003040139}, {-111.34233146177122`, \
-89.6303026337626}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 4.73]& ,
           TagBoxNote->"4.73"],
          StyleBox["4.73`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.73, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.23468899960883594`, 0.14045006395232215`}, {
                0.02148420817464365, 0.012930595306979292`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.23468899960883594`, 0.14045006395232215`}, {
                  0.04079883503565639, 0.024555395318916845`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{747.4011468611786, 
              781.4881763866617}, {-70.33635202075793, -49.02428847974268}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 4.54]& ,
           TagBoxNote->"4.54"],
          StyleBox["4.54`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.54, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5191413042702844, -0.0625484634823722}, {
                0.021246280482756758`, 0.012787394930632825`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5191413042702844, -0.0625484634823722}, {
                  0.0405609073437695, 0.02441219494257038}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{959.9959936640356, 993.7276741437245}, {
              81.36145701982655, 102.45964836846039`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 4.44]& ,
           TagBoxNote->"4.44"],
          StyleBox["4.44`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.44, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.11223786600623747`, 0.05613087201197289}, {
                0.021150359990699585`, 0.012729663733171179`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.11223786600623747`, 0.05613087201197289}, {
                  0.04046498685171233, 0.02435446374510873}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{488.57987001364654`, 
              522.1682916105449}, {-7.220232575010034, 
              13.791736250436777`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, 
             Center}],
           StatusArea[#, 4.4]& ,
           TagBoxNote->"4.4"],
          StyleBox["4.4`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.4, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.366998851315802, 0.14592427773410138`}, {
                0.021126311819204047`, 0.012715189977799135`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.366998851315802, 0.14592427773410138`}, {
                  0.04044093868021679, 0.024339989989736688`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{846.4719135041381, 
              880.0244187487772}, {-74.26341185735359, \
-53.273059831194516`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 4.39]& ,
           TagBoxNote->"4.39"],
          StyleBox["4.39`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.39, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.3818109608121747, 0.1204461310368907}, {
                0.02098144397219992, 0.012627999075189383`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.3818109608121747, 0.1204461310368907}, {
                  0.04029607083321266, 0.024252799087126936`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{857.6411632555748, 
              
              890.9773059121061}, {-55.17227906516289, -34.31214813180139}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 4.33]& ,
           TagBoxNote->"4.33"],
          StyleBox["4.33`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.33, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.06293424602958081, -0.00655709853992599}, {
                0.020713221573795793`, 0.012466565371985705`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.06293424602958081, -0.00655709853992599}, {
                  0.040027848434808534`, 0.024091365383923258`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{525.7242034286844, 558.6597513810949}, {
              39.78901231907973, 60.40803927695387}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 4.22]& ,
           TagBoxNote->"4.22"],
          StyleBox["4.22`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.22, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.1010428474764003, 0.07524153792813294}, {
                0.020191268861374123`, 0.012152420245535561`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.1010428474764003, 0.07524153792813294}, {
                  0.039505895722386865`, 0.023777220257473114`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{497.6560545376307, 
              529.8120572557818}, {-21.060223042384507`, \
-0.9103771623398522}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 4.01]& ,
           TagBoxNote->"4.01"],
          StyleBox["4.01`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.01, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5197599358315652, -0.06716776827449837}, {
                0.01978435017303226, 0.01190751008459208}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5197599358315652, -0.06716776827449837}, {
                  0.039098977034045, 0.023532310096529632`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{961.5496708962114, 993.0979336473524}, {
              85.46802354654515, 105.25209194475741`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.85]& ,
           TagBoxNote->"3.85"],
          StyleBox["3.85`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.85, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.3769924194716773, 0.08199001898096919}, {
                0.019629581041007593`, 0.011814359943988564`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.3769924194716773, 0.08199001898096919}, {
                  0.038944207902020335`, 0.023439159955926117`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{855.0523917362686, 
              886.3695041620851}, {-25.847259135251807`, \
-6.2023120529173035`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.79]& ,
           TagBoxNote->"3.79"],
          StyleBox["3.79`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.79, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.3469155894130175, 0.0032505128908627695`}, {
                0.01960366739137198, 0.011798763422411346`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.3469155894130175, 0.0032505128908627695`}, {
                  0.03891829425238472, 0.0234235634343489}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{832.6116149050746, 863.8900248553699}, {
              32.9637820313947, 52.585435444059144`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.78]& ,
           TagBoxNote->"3.78"],
          StyleBox["3.78`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.78, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5086344826226242, 0.2173609734241167}, {
                0.019499668422200328`, 0.01173617007143607}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5086344826226242, 0.2173609734241167}, {
                  0.03881429528321307, 0.023360970083373622`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{953.4542328184447, 
              984.5773185432761}, {-126.87827913077736`, \
-107.35010995009002`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.74]& ,
           TagBoxNote->"3.74"],
          StyleBox["3.74`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.74, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.2546510094982149, 0.2110622389532256}, {
                0.019210768474539286`, 0.011562291272783326`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.2546510094982149, 0.2110622389532256}, {
                  0.03852539533555203, 0.02318709128472088}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{764.0056575252535, 
              794.6972662752224}, {-122.04480024715703`, \
-102.77632200322066`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.63]& ,
           TagBoxNote->"3.63"],
          StyleBox["3.63`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.63, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.48511749127265213`, 0.1719478469686723}, {
                0.019157773150198315`, 0.011530395236092367`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.48511749127265213`, 0.1719478469686723}, {
                  0.03847240001121106, 0.02315519524802992}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{936.148033165544, 
              966.760492499206}, {-92.8119774840355, -73.59113651221682}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.61]& ,
           TagBoxNote->"3.61"],
          StyleBox["3.61`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.61, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4794538269593035, 0.11178792376282984`}, {
                0.019078004143846528`, 0.011482385054344388`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4794538269593035, 0.11178792376282984`}, {
                  0.03839263100485927, 0.02310718506628194}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{931.9782119618405, 
              962.4715349307261}, {-47.85119232100549, \
-28.702055370426443`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.58]& ,
           TagBoxNote->"3.58"],
          StyleBox["3.58`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.58, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4872590549143273, 0.1806338194130487}, {
                0.01905134025360622, 0.011466336989123443`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4872590549143273, 0.1806338194130487}, {
                  0.03836596711461896, 0.023091137001060996`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{937.8267436562962, 
              968.2802436525849}, {-99.25046507383898, -80.12529618102522}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.57]& ,
           TagBoxNote->"3.57"],
          StyleBox["3.57`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.57, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.3200248870917925, 0.11185926289557523`}, {
                0.018997900203727436`, 0.011434173287647925`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.3200248870917925, 0.11185926289557523`}, {
                  0.03831252706474018, 0.023058973299585478`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{812.9831165482672, 
              843.3568029231104}, {-47.868462877854185`, \
-28.791331019056496`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.55]& ,
           TagBoxNote->"3.55"],
          StyleBox["3.55`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.55, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4626939788716715, 0.1088616440527274}, {
                0.018728412789431048`, 0.011271978215515704`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4626939788716715, 0.1088616440527274}, {
                  0.03804303965044379, 0.022896778227453257`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{919.7237134939629, 
              949.6949158419814}, {-45.508845023642095`, \
-26.67395425774802}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.45]& ,
           TagBoxNote->"3.45"],
          StyleBox["3.45`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.45, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.33881212519442044`, 0.05208221682225331}, {
                0.018592204343261698`, 0.01118999910413808}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.33881212519442044`, 0.05208221682225331}, {
                  0.03790683120427444, 0.022814799116075632`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{827.3156028504916, 
              857.0833755725108}, {-3.047107329607929, 
              15.665346242145041`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, 
             Center}],
           StatusArea[#, 3.4]& ,
           TagBoxNote->"3.4"],
          StyleBox["3.4`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.4, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.28076320665211035`, -0.05652444877535233}, {
                0.018564842732639864`, 0.011173531105363274`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.28076320665211035`, -0.05652444877535233}, {
                  0.037879469593652605`, 0.022798331117300827`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{783.9875128588192, 813.7144205510104}, {
              78.06813942570709, 96.75599776180523}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.39]& ,
           TagBoxNote->"3.39"],
          StyleBox["3.39`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.39, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.028651478356717552`, -0.015435068254870288`}, {
                0.018427425279130036`, 0.011090824334650265`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.028651478356717552`, -0.015435068254870288`}, {
                  0.03774205214014278, 0.022715624346587818`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{595.823558061801, 625.3452304550116}, {
              47.446057833153475`, 66.01039220354373}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.34]& ,
           TagBoxNote->"3.34"],
          StyleBox["3.34`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.34, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5110131019357762, 0.21986009882278626`}, {
                0.01837217050623116, 0.011057568414705427`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5110131019357762, 0.21986009882278626`}, {
                  0.0376867973672439, 0.02268236842664298}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{956.0724556111143, 
              985.5116040632506}, {-128.23777068347002`, \
-109.72310459391622`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.32]& ,
           TagBoxNote->"3.32"],
          StyleBox["3.32`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.32, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5142171253457233, 0.24232220599707752`}, {
                0.018344480708269884`, 0.011040902891421539`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5142171253457233, 0.24232220599707752`}, {
                  0.037659107569282625`, 0.022665702903359092`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{958.4857648724355, 
              987.8835581413827}, {-144.99909470141526`, \
-126.50931885372287`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.31]& ,
           TagBoxNote->"3.31"],
          StyleBox["3.31`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.31, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4446560757972081, 0.16990711115097043`}, {
                0.018288975344403324`, 0.011007496149516488`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4446560757972081, 0.16990711115097043`}, {
                  0.037603602205416066`, 0.02263229616145404}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{906.5819099500611, 
              935.896805016071}, {-90.8975613650555, -72.4576790533568}}], {{{
              1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.29]& ,
           TagBoxNote->"3.29"],
          StyleBox["3.29`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.29, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.44800864879098035`, 0.23975575195833637`}, {
                0.018261159396222526`, 0.010990754700816951`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.44800864879098035`, 0.23975575195833637`}, {
                  0.03757578625723527, 0.022615554712754504`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{909.1062440773966, 
              938.3795955527233}, {-143.04512478297644`, \
-124.63024610903598`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.28]& ,
           TagBoxNote->"3.28"],
          StyleBox["3.28`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.28, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.25188737224040475`, -0.007842078237938067}, {
                0.018149469300187904`, 0.010923532328929599`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.25188737224040475`, -0.007842078237938067}, {
                  0.037464096161200645`, 0.02254833234086715}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{762.7344221159176, 791.8409625372816}, {
              41.900854831111296`, 60.2153357517816}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.24]& ,
           TagBoxNote->"3.24"],
          StyleBox["3.24`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.24, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.366998851315802, 0.14592427773410138`}, {
                0.0179806333579991, 0.01082191586608533}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.366998851315802, 0.14592427773410138`}, {
                  0.03729526021901184, 0.022446715878022883`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{848.8209755882946, 
              877.6753566646207}, {-72.84959334869447, -54.68687833985364}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.18]& ,
           TagBoxNote->"3.18"],
          StyleBox["3.18`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.18, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.489307594247794, -0.025516822215007593`}, {
                0.017952339660914446`, 0.010804886876989498`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.489307594247794, -0.025516822215007593`}, {
                  0.03726696652192719, 0.022429686888927054`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{940.1771958052027, 968.9893197647499}, {
              55.1882193764076, 73.32550130102837}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.17]& ,
           TagBoxNote->"3.17"],
          StyleBox["3.17`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.17, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.06293424602958081, -0.006557098539925983}, {
                0.017838716116499485`, 0.010736500829980865`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.06293424602958081, -0.006557098539925983}, {
                  0.03715334297751223, 0.022361300841918418`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{527.8707647710821, 556.5131900386973}, {
              41.08095269661289, 59.11609889942069}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.13]& ,
           TagBoxNote->"3.13"],
          StyleBox["3.13`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.13, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.489307594247794, -0.025516822215007593`}, {
                0.017695660751023995`, 0.01065040079676487}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.489307594247794, -0.025516822215007593`}, {
                  0.03701028761203674, 0.022275200808702426`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{940.3688729592609, 968.7976426106915}, {
              55.30358316773629, 73.21013750969966}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3.08]& ,
           TagBoxNote->"3.08"],
          StyleBox["3.08`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.08, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.39108922211629826`, 0.14157818931382304`}, {
                0.0174643349768539, 0.010511173884348468`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.39108922211629826`, 0.14157818931382304`}, {
                  0.03677896183786664, 0.02213597389628602}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{867.1962146042471, 
              895.2794952860371}, {-69.37206572957132, -51.67344914417463}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.38258470525126687`, 0.1977190257924214}, {
                0.017288809567465535`, 0.010405531264595258`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.38258470525126687`, 0.1977190257924214}, {
                  0.03660343642847828, 0.02203033127653281}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{860.9764695575079, 
              888.7976000614681}, {-111.21682224093746`, \
-93.6759847010432}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.94]& ,
           TagBoxNote->"2.94"],
          StyleBox["2.94`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.94, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5151395096211456, 0.23353875143554334`}, {
                0.017229903741814656`, 0.01037007790338576}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5151395096211456, 0.23353875143554334`}, {
                  0.0365445306028274, 0.021994877915323313`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{960.0068829648288, 
              987.7400366184662}, {-137.93903122169024`, \
-120.45114387845481`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.92]& ,
           TagBoxNote->"2.92"],
          StyleBox["2.92`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.92, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5086344826226242, 0.2173609734241167}, {
                0.017200375178996863`, 0.0103523056916901}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5086344826226242, 0.2173609734241167}, {
                  0.036515002040009605`, 0.021977105703627653`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{955.1712495588961, 
              982.8603018028247}, {-125.84486666215818`, \
-108.38352241870918`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.91]& ,
           TagBoxNote->"2.91"],
          StyleBox["2.91`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.91, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.32002488709179244`, 0.11185926289557523`}, {
                0.01717079583607889, 0.010334502917223903`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.32002488709179244`, 0.11185926289557523`}, {
                  0.03648542269709163, 0.021959302929161456`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{814.3475222390497, 
              841.992397232328}, {-47.0472746972784, -29.6125191996323}}], {{{
              1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.9]& ,
           TagBoxNote->"2.9"],
          StyleBox["2.9`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.9, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.48335071353708736`, 0.17080564497247536`}, {
                0.01711148375613325, 0.010298805045728832`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.48335071353708736`, 0.17080564497247536`}, {
                  0.03642611061714599, 0.021923605057666384`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{936.3567608683783, 
              963.91305226365}, {-91.03932802545731, -73.65788790473124}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.88]& ,
           TagBoxNote->"2.88"],
          StyleBox["2.88`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.88, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.11545320122211078`, 0.06225602160172593}, {
                0.016962296220343592`, 0.01020901427315482}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.11545320122211078`, 0.06225602160172593}, {
                  0.036276923081356334`, 0.021833814285092373`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{489.30626331597927`, 
              516.6397405946308}, {-9.91192363356092, 
              7.3354124444525866`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, 
             Center}],
           StatusArea[#, 2.83]& ,
           TagBoxNote->"2.83"],
          StyleBox["2.83`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.83, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.33713774912263056`, 0.17528617189950035`}, {
                0.016902252505473725`, 0.010172876056125879`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.33713774912263056`, 0.17528617189950035`}, {
                  0.03621687936648647, 0.021797676068063432`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{827.3272341859218, 
              854.5710351573906}, {-94.29116098699456, -77.09779794942918}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.81]& ,
           TagBoxNote->"2.81"],
          StyleBox["2.81`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.81, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.10530247979393553`, 0.1976056899092667}, {
                0.01690225250547364, 0.010172876056125879`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.10530247979393553`, 0.1976056899092667}, {
                  0.03621687936648638, 0.021797676068063432`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{496.9312388319341, 
              524.1750398034027}, {-110.95845045729409`, \
-93.76508741972872}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.81]& ,
           TagBoxNote->"2.81"],
          StyleBox["2.81`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.81, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.47493230184297064`, -0.044727558203820225`}, {
                0.01687215051808294, 0.010154758720186743`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.47493230184297064`, -0.044727558203820225`}, {
                  0.03618677737909568, 0.021779558732124296`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{930.2489646261879, 957.4478077686163}, {
              70.0194882102784, 87.1857926991425}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.8]& ,
           TagBoxNote->"2.8"],
          StyleBox["2.8`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.8, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.30949400717049047`, 0.19057739970168178`}, {
                0.01687215051808294, 0.010154758720186757`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.30949400717049047`, 0.19057739970168178`}, {
                  0.03618677737909568, 0.02177955873212431}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{806.7065142214619, 
              833.9053573638903}, {-105.69648583053885`, \
-88.53018134167473}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.8]& ,
           TagBoxNote->"2.8"],
          StyleBox["2.8`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.8, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.49967838401474374`, 0.2001287481303091}, {
                0.016841994728977294`, 0.010136609002872637`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.49967838401474374`, 0.2001287481303091}, {
                  0.036156621589990036`, 0.02176140901481019}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{948.7508305669442, 
              975.9046355265579}, {-112.81548286397911`, \
-95.67628528594938}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.79]& ,
           TagBoxNote->"2.79"],
          StyleBox["2.79`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.79, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4970227201535451, 0.19349198951431634`}, {
                0.016811784848639738`, 0.010118426729933294`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4970227201535451, 0.19349198951431634`}, {
                  0.03612641170965248, 0.021743226741870847`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{946.7902505279482, 
              973.8989365185744}, {-107.845849283405, -90.73380723858843}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.78]& ,
           TagBoxNote->"2.78"],
          StyleBox["2.78`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.78, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.38943719471817395`, 0.2021028099740518}, {
                0.016781520584947196`, 0.010100211725550062`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.38943719471817395`, 0.2021028099740518}, {
                  0.03609614744595994, 0.021725011737487615`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{866.4724465674132, 
              893.5359323665882}, {-114.26245032137383`, \
-97.17761269473738}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.77]& ,
           TagBoxNote->"2.77"],
          StyleBox["2.77`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.77, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4206301032250759, 0.05031240924293526}, {
                0.0167208277257771, 0.01006368281121571}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4206301032250759, 0.05031240924293526}, {
                  0.03603545458678984, 0.021688482823153263`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{889.8113385958942, 
              916.7841785798572}, {-0.8844022524035573, 
              16.145878820728473`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, 
             Center}],
           StatusArea[#, 2.75]& ,
           TagBoxNote->"2.75"],
          StyleBox["2.75`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.75, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.028149649400137644`, 0.1103142376756354}, {
                0.01653741273329782, 0.00995329172667106}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.028149649400137644`, 0.1103142376756354}, {
                  0.03585203959431056, 0.021578091738608612`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{596.8601959367704, 
              623.5591025166601}, {-45.60884131229831, \
-28.743431197422716`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.69]& ,
           TagBoxNote->"2.69"],
          StyleBox["2.69`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.69, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.47994836061776225`, 0.19674228878654373`}, {
                0.016506645427145195`, 0.009934773958582471}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.47994836061776225`, 0.19674228878654373`}, {
                  0.035821272288157936`, 0.021559573970520024`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{934.2676931092029, 
              960.9206481951901}, {-110.13589358054554`, \
-93.29814006658233}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.68]& ,
           TagBoxNote->"2.68"],
          StyleBox["2.68`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.68, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.47296961857527864`, 0.1500731528711177}, {
                0.016351940557247813`, 0.009841662495111175}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.47296961857527864`, 0.1500731528711177}, {
                  0.035666567418260554`, 0.021466462507048728`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{929.1717854439114, 
              955.5936861811517}, {-75.21578854042788, \
-58.517098577389035`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.63]& ,
           TagBoxNote->"2.63"],
          StyleBox["2.63`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.63, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4872590549143273, 0.1806338194130487}, {
                0.016195757985288467`, 0.009747661654326528}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4872590549143273, 0.1806338194130487}, {
                  0.03551038484630121, 0.02137246166626408}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{939.9591739467479, 
              966.1478133621332}, {-97.9670296834336, -81.40873157143058}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.58]& ,
           TagBoxNote->"2.58"],
          StyleBox["2.58`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.58, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5197599358315651, -0.06716776827449837}, {
                0.01597453724338882, 0.009614516608264706}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5197599358315651, -0.06716776827449837}, {
                  0.03528916410440156, 0.02123931662020226}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{964.3946810303134, 990.2529235132505}, {
              87.18033588262401, 103.53977960867857`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.51]& ,
           TagBoxNote->"2.51"],
          StyleBox["2.51`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.51, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.35818417739581176`, -0.03666484463445842}, {
                0.015974537243388764`, 0.009614516608264706}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.35818417739581176`, -0.03666484463445842}, {
                  0.035289164104401506`, 0.02123931662020226}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{843.7366123366477, 869.5948548195846}, {
              64.40201881607585, 80.76146254213042}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.51]& ,
           TagBoxNote->"2.51"],
          StyleBox["2.51`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.51, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.2902552414133704, 0.15951944677235907`}, {
                0.01597453724338882, 0.009614516608264734}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.2902552414133704, 0.15951944677235907`}, {
                  0.03528916410440156, 0.021239316620202287`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{793.0101029678798, 
              818.8683454508168}, {-82.10026555100767, -65.74082182495306}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.51]& ,
           TagBoxNote->"2.51"],
          StyleBox["2.51`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.51, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.10530247979393553`, 0.19760568990926672`}, {
                0.015942683697748886`, 0.009595345070528088}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.10530247979393553`, 0.19760568990926672`}, {
                  0.03525731055876163, 0.02122014508246564}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{497.64780498170575`, 
              523.4584736536309}, {-110.52717429305018`, \
-94.1963635839727}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.5]& ,
           TagBoxNote->"2.5"],
          StyleBox["2.5`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.5, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.23491184733063297`, -0.06968301275846411}, {
                0.01568552677645546, 0.009440571291918068}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.23491184733063297`, -0.06968301275846411}, {
                  0.0350001536374682, 0.02106537130385562}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{751.897774828356, 777.3243752740217}, {
              89.18851118563776, 105.28816462963663`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.42]& ,
           TagBoxNote->"2.42"],
          StyleBox["2.42`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.42, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5279354631072016, 0.2609103061915393}, {
                0.015620576076029069`, 0.009401479731489526}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5279354631072016, 0.2609103061915393}, {
                  0.03493520293704181, 0.02102627974342708}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{970.7641489037142, 
              996.09374437599}, {-157.6556630981664, -141.61439356310527`}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.4]& ,
           TagBoxNote->"2.4"],
          StyleBox["2.4`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.4, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               Disk[{0.2616795684531848, 0.10740103164923089`}, {
                0.01555535417916025, 0.009362224947384423}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.2616795684531848, 0.10740103164923089`}, {
                  0.03486998104017299, 0.020987024959321976`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{771.9840052108345, 
              797.2161906732313}, {-42.99199585847639, -27.00935400968408}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.38]& ,
           TagBoxNote->"2.38"],
          StyleBox["2.38`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.38, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.09800220889718009, 0.23333294433172805`}, {
                0.015358026686897078`, 0.009243460414633003}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.09800220889718009, 0.23333294433172805`}, {
                  0.03467265354790982, 0.020868260426570556`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{503.5359418057638, 
              528.4734153095457}, {-136.9440318506483, \
-121.13876684711819`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.32]& ,
           TagBoxNote->"2.32"],
          StyleBox["2.32`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.32, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.26825923566919346`, 0.19707172094546585`}, {
                0.015258406003039904`, 0.009183502200828225}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.26825923566919346`, 0.19707172094546585`}, {
                  0.034573032864052645`, 0.020808302212765778`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{777.119176107732, 
              801.9078644294727}, {-109.82088128051768`, \
-94.10516488687863}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.29]& ,
           TagBoxNote->"2.29"],
          StyleBox["2.29`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.29, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.3076047826068933, 0.03783973244642401}, {
                0.015225054256049808`, 0.009163428947971786}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.3076047826068933, 0.03783973244642401}, {
                  0.03453968111706255, 0.02078822895990934}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{806.5257028576434, 831.2645797792293}, {
              9.101947196310046, 24.78768384613721}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.28]& ,
           TagBoxNote->"2.28"],
          StyleBox["2.28`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.28, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4763050265790708, -0.04039072392778264}, {
                0.01515813061666138, 0.009123149944418714}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4763050265790708, -0.04039072392778264}, {
                  0.03447275747767412, 0.020747949956356267`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{932.5540173774149, 957.1929427077877}, {
              67.55128302083375, 83.17686229526414}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.26]& ,
           TagBoxNote->"2.26"],
          StyleBox["2.26`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.26, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4754326997773711, 0.20823105735659692`}, {
                0.014955562973960335`, 0.009001231547949795}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4754326997773711, 0.20823105735659692`}, {
                  0.034270189834973076`, 0.020626031559887348`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{932.0538690420641, 
              956.3902561602105}, {-118.01809828346788`, \
-102.5746062032872}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.2]& ,
           TagBoxNote->"2.2"],
          StyleBox["2.2`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.2, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.23356300685863235`, 0.03670232601686262}, {
                0.014955562973960307`, 0.009001231547949816}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.23356300685863235`, 0.03670232601686262}, {
                  0.03427018983497305, 0.02062603155988737}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{751.4356234238073, 775.7720105419537}, {
              10.072437384086392`, 25.515929464267096`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.2]& ,
           TagBoxNote->"2.2"],
          StyleBox["2.2`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.2, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.46985491516449973`, -0.010437614235637264`}, {
                0.01492153434517196, 0.008980750903555719}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.46985491516449973`, -0.010437614235637264`}, {
                  0.0342361612061847, 0.02060555091549327}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{927.9140222183564, 952.1995870018947}, {
              45.289881877545035`, 60.70278576773836}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.19]& ,
           TagBoxNote->"2.19"],
          StyleBox["2.19`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.19, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4052389120236668, 0.16220139680813744`}, {
                0.014887427936356223`, 0.008960223446076943}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4052389120236668, 0.16220139680813744`}, {
                  0.034202054797368965`, 0.020585023458014495`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{879.6869428117795, 
              903.9215690949186}, {-83.61443552742868, -68.23218974335919}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.18]& ,
           TagBoxNote->"2.18"],
          StyleBox["2.18`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.18, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.3369071282545046, 0.17292670103891852`}, {
                0.014853243211711553`, 0.008939648853033139}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.3369071282545046, 0.17292670103891852`}, {
                  0.034167870072724295`, 0.02056444886497069}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{828.6851311730458, 
              852.8687019897661}, {-91.6082832214242, -76.25676594124485}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.17]& ,
           TagBoxNote->"2.17"],
          StyleBox["2.17`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.17, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.25188737224040475`, -0.00784207823793806}, {
                0.014818979629256115`, 0.008919026798224497}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.25188737224040475`, -0.00784207823793806}, {
                  0.03413360649026886, 0.02054382681016205}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{765.2214935391883, 789.3538911140112}, {
              43.397736345777474`, 58.7184542371154}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.16]& ,
           TagBoxNote->"2.16"],
          StyleBox["2.16`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.16, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.24358642328110625`, -0.009512903728655535}, {
                0.014715710220389311`, 0.008856872544142018}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.24358642328110625`, -0.009512903728655535}, {
                  0.03403033708140205, 0.02048167255607957}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{759.0998067719376, 783.0779697319936}, {
              44.69185367573541, 59.91974313375771}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.13]& ,
           TagBoxNote->"2.13"],
          StyleBox["2.13`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.13, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.35561033579371226`, 0.2017360196670171}, {
                0.014681125659721295`, 0.008836057303746203}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.35561033579371226`, 0.2017360196670171}, {
                  0.033995752520734036`, 0.020460857315683756`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{842.7804403550517, 
              
              866.7069506868023}, {-113.04452850542258`, \
-97.84772696219477}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.12]& ,
           TagBoxNote->"2.12"],
          StyleBox["2.12`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.12, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.2560951066999377, -0.09707848377038684}, {
                0.014611710965134542`, 0.008794279020983273}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.2560951066999377, -0.09707848377038684}, {
                  0.03392633782614728, 0.020419079032920825`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{768.5184345861243, 792.3412728934464}, {
              110.12893587081656`, 125.26334083970283`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.1]& ,
           TagBoxNote->"2.1"],
          StyleBox["2.1`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.1, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.23491184733063303`, -0.06968301275846411}, {
                0.014436714101862147`, 0.00868895451469602}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.23491184733063303`, -0.06968301275846411}, {
                  0.03375134096287489, 0.020313754526633573`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{752.8303362901456, 776.3918138122323}, {
              89.74978739201515, 104.72688842325923`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.05]& ,
           TagBoxNote->"2.05"],
          StyleBox["2.05`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.05, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.439101623154049, 0.18321319447423276`}, {
                0.014366118499824942`, 0.008646465484940996}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.439101623154049, 0.18321319447423276`}, {
                  0.033680745360837684`, 0.02027126549687855}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{905.3635019422551, 
              928.8195437345944}, {-99.0708723142517, -84.1572293700442}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.03]& ,
           TagBoxNote->"2.03"],
          StyleBox["2.03`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.03, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.12566553044932705`, 0.09701928948569392}, {
                0.014366118499824922`, 0.008646465484941024}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.12566553044932705`, 0.09701928948569392}, {
                  0.03368074536083766, 0.020271265496878577`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{671.302439993546, 
              694.7584817858854}, {-34.704842349319094`, \
-19.791199405111556`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 2.03]& ,
           TagBoxNote->"2.03"],
          StyleBox["2.03`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.03, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.2807632066521104, -0.056524448775352336`}, {
                0.013898509425464112`, 0.008365027898166628}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.2807632066521104, -0.056524448775352336`}, {
                  0.03321313628647685, 0.01998982791010418}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{787.4721368530096, 810.2297965568199}, {
              80.16541302776824, 94.6587241597441}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.9]& ,
           TagBoxNote->"1.9"],
          StyleBox["1.9`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.9, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.24425910168217352`, -0.05340514979728994}, {
                0.013751431112212734`, 0.008276506593046719}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.24425910168217352`, -0.05340514979728994}, {
                  0.033066057973225475`, 0.01990130660498427}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{760.322218682679, 782.8602144295264}, {
              77.90215408225922, 92.26325714270982}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.86]& ,
           TagBoxNote->"1.86"],
          StyleBox["1.86`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.86, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.35818417739581176`, -0.036664844634458425`}, {
                0.01352781570358852, 0.008141920280634395}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.35818417739581176`, -0.036664844634458425`}, {
                  0.03284244256460126, 0.019766720292571947`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{845.5637224086136, 867.7677447476187}, {
              65.50169261972944, 79.66178873847683}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.8]& ,
           TagBoxNote->"1.8"],
          StyleBox["1.8`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.8, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.01697630975892872, 0.030736595476755106`}, {
                0.013490186101618888`, 0.008119272336121967}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.01697630975892872, 0.030736595476755106`}, {
                  0.03280481296263163, 0.01974407234805952}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{565.437545354872, 587.5853672447092}, {
              15.186007813715282`, 29.3122788429665}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.79]& ,
           TagBoxNote->"1.79"],
          StyleBox["1.79`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.79, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4605906850422016, 0.0910057232606375}, {
                0.013452451241404484`, 0.008096561040344577}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4605906850422016, 0.0910057232606375}, {
                  0.032767078102417226`, 0.01972136105228213}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{922.0929300350689, 
              944.1843942707633}, {-29.803514931179624`, \
-15.711163607613962`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.78]& ,
           TagBoxNote->"1.78"],
          StyleBox["1.78`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.78, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4120146455071976, 0.1929575838821646}, {
                0.013107950050135764`, 0.007889217793115855}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4120146455071976, 0.1929575838821646}, {
                  0.032422576911148505`, 0.019514017805053407`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{886.0756194990113, 
              907.6525653588853}, {-105.78209665285128`, \
-91.99941598792267}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.69]& ,
           TagBoxNote->"1.69"],
          StyleBox["1.69`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.69, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5086344826226245, 0.2173609734241167}, {
                0.012512721714625696`, 0.0075309706257470355`}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5086344826226245, 0.2173609734241167}, {
                  0.03182734857563844, 0.019155770637684588`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{958.6717945613887, 
              979.3597568003324}, {-123.73801076069098`, \
-110.49037832017639`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.54]& ,
           TagBoxNote->"1.54"],
          StyleBox["1.54`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.54, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4120146455071976, 0.1929575838821646}, {
                0.012141586174061136`, 0.007307597092961193}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4120146455071976, 0.1929575838821646}, {
                  0.03145621303507388, 0.018932397104898746`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{886.797259923734, 
              906.9309249341625}, {-105.34776645955795`, \
-92.43374618121602}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.45]& ,
           TagBoxNote->"1.45"],
          StyleBox["1.45`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.45, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.046139339414103864`, -0.006753008602949528}, {
                0.012057560346697804`, 0.007257024879168766}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.046139339414103864`, -0.006753008602949528}, {
                  0.031372187207710546`, 0.01888182489110632}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{544.7296309307515, 564.7378019419785}, {
              43.825578390630305`, 56.664068209393}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.43]& ,
           TagBoxNote->"1.43"],
          StyleBox["1.43`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.43, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4164097770117775, 0.18697630731586456`}, {
                0.012015327080871108`, 0.007231606150004621}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4164097770117775, 0.18697630731586456`}, {
                  0.03132995394188385, 0.018856406161942174`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{890.1736467197369, 
              910.118741631695}, {-100.82445054692738`, \
-88.02392403156225}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.42]& ,
           TagBoxNote->"1.42"],
          StyleBox["1.42`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.42, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.38932836528484316`, 0.03661548534117835}, {
                0.011887727070322374`, 0.007154808155675069}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.38932836528484316`, 0.03661548534117835}, {
                  0.031202353931335115`, 0.01877960816761262}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{870.0456590988404, 889.8001812294957}, {
              11.51611873191399, 24.201946139380027`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.39]& ,
           TagBoxNote->"1.39"],
          StyleBox["1.39`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.39, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.06293424602958081, -0.00655709853992599}, {
                0.011887727070322398`, 0.007154808155675069}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.06293424602958081, -0.00655709853992599}, {
                  0.03120235393133514, 0.01877960816761262}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{532.314716339562, 552.0692384702174}, {
              43.75561209428379, 56.44143950174983}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.39]& ,
           TagBoxNote->"1.39"],
          StyleBox["1.39`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.39, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.059390025423344706`, -0.0103797939478815}, {
                0.011363007306656351`, 0.006838997637624529}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.059390025423344706`, -0.0103797939478815}, {
                  0.030677634167669093`, 0.018463797649562082`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{535.3532320885522, 554.3240763469541}, {
              46.846076512606366`, 59.060235551623734`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.27]& ,
           TagBoxNote->"1.27"],
          StyleBox["1.27`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.27, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.47610637207077033`, 0.004035493559706199}, {
                0.011227996485984826`, 0.006757739335248425}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.47610637207077033`, 0.004035493559706199}, {
                  0.030542623346997567`, 0.018382539347185978`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{935.3405314496027, 954.1097347560118}, {
              36.14201856948904, 48.234816954842195`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.24]& ,
           TagBoxNote->"1.24"],
          StyleBox["1.24`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.24, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.48589688403044484`, 0.054567746364552305`}, {
                0.011045415269400505`, 0.00664785007132411}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.48589688403044484`, 0.054567746364552305`}, {
                  0.030360042130413246`, 0.018272650083261663`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{942.7880234075492, 
              961.2845385683345}, {-1.5113092732308164`, 
              10.417367631478964`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, 
             Center}],
           StatusArea[#, 1.2]& ,
           TagBoxNote->"1.2"],
          StyleBox["1.2`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.2, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4808073831406685, 0.11337252177931934`}, {
                0.010718416949152654`, 0.006451041191480142}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4808073831406685, 0.11337252177931934`}, {
                  0.030033043810165395`, 0.018075841203417695`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{939.2315842006343, 
              957.2397218205167}, {-45.277305612209034`, \
-33.64256610966443}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 1.13]& ,
           TagBoxNote->"1.13"],
          StyleBox["1.13`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.13, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.045122708075626405`, -0.028242603955073456`}, {
                0.00993064123975633, 0.005976906477830571}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.045122708075626405`, -0.028242603955073456`}, {
                  0.02924526810076907, 0.017601706489768124`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{547.0771039010621, 563.9086851293205}, {
              60.82905535275613, 71.75566661374488}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 0.97]& ,
           TagBoxNote->"0.97"],
          StyleBox["0.97`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.97, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.489307594247794, -0.02551682221500759}, {
                0.009723730190465296, 0.0058523739364785}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.489307594247794, -0.02551682221500759}, {
                  0.029038357051478038`, 0.017477173948416053`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{946.3219797526881, 962.8445358172644}, {
              58.88655044022278, 69.62717023721318}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 0.93]& ,
           TagBoxNote->"0.93"],
          StyleBox["0.93`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.93, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.6871382343934128, -0.08616256005296462}, {
                0.009296102171630904, 0.005594999552069033}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.6871382343934128, -0.08616256005296462}, {
                  0.028610729032643646`, 0.017219799564006585`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{68.12040911226983, 84.00429547327953}, {
              104.36646629719377`, 114.72269308307024`}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 0.85]& ,
           TagBoxNote->"0.85"],
          StyleBox["0.85`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.85, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.4946042062350293, 0.2509447832515126}, {
                0.009074734650093924, 0.005461766164464796}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.4946042062350293, 0.2509447832515126}, {
                  0.028389361511106666`, 0.01708656617640235}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{950.7619126265095, 
              966.3151828371914}, {-147.271809741002, \
-137.11456928066684`}}], {{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 0.81]& ,
           TagBoxNote->"0.81"],
          StyleBox["0.81`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.81, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.5081531171254957, 0.1428422744151436}, {
                0.008129205527385941, 0.00489268517542793}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.5081531171254957, 0.1428422744151436}, {
                  0.027443832388398683`, 0.016517485187365483`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{961.5857587016694, 
              975.7268651206533}, {-66.12037788547772, -56.81306954035863}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 0.65]& ,
           TagBoxNote->"0.65"],
          StyleBox["0.65`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.65, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{-0.05460600503278701, -0.010639445176324085`}, {
                0.008129205527385941, 0.004892685175427909}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{-0.05460600503278701, -0.010639445176324085`}, {
                  0.027443832388398683`, 0.016517485187365462`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{541.3406088306234, 555.4817152496073}, {
              48.4933986177148, 57.80070696283386}}], {{{1, 0.}, {
              0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 0.65]& ,
           TagBoxNote->"0.65"],
          StyleBox["0.65`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.65, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[GeometricTransformationBox[
            DynamicBox[Typeset`ToBoxes[{
               
               Disk[{0.3977307784102022, 0.12310125207950126`}, {
                0.006377073479099549, 0.00383813802821123}], 
               If[
                CurrentValue["MouseOver"], {
                 Thickness[0.009999999999999998], 
                 
                 Circle[{0.3977307784102022, 0.12310125207950126`}, {
                  0.02569170034011229, 0.015462938040148784`}]}, {}]}, 
              StandardForm, Graphics],
             
             ImageSizeCache->{{880.4353597314166, 
              891.9596272001867}, {-50.59110990940066, -42.85878562576967}}], \
{{{1, 0.}, {0, 1.6615018616387793`}}, Center}],
           StatusArea[#, 0.4]& ,
           TagBoxNote->"0.4"],
          StyleBox["0.4`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.4, {}], 
          "Tooltip"]& ]}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}, {}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "LambertAzimuthal", "LongitudeDetermination" -> -114.05836310000001`, 
       "Centering" -> GeoPosition[{34.47242315, -114.05836310000001`}]}, 
      "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "LambertAzimuthal", "LongitudeDetermination" -> -114.05836310000001`, 
       "Centering" -> GeoPosition[{34.47242315, -114.05836310000001`}]}, 
      "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  ImageSize->{785.5848795572929, Automatic},
  Method->{"ChartDefaultStyle" -> {
      Hue[0.125], 
      RGBColor[0.560181, 0.691569, 0.194885], 
      RGBColor[0.922526, 0.385626, 0.209179], 
      RGBColor[0.528488, 0.470624, 0.701351], 
      RGBColor[0.772079, 0.431554, 0.102387], 
      RGBColor[0.647624, 0.37816, 0.614037], 
      RGBColor[0.571589, 0.586483, 0.], 
      RGBColor[0.915, 0.3325, 0.2125], 
      RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
      RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
    "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
    Directive[
      EdgeForm[{
        GrayLevel[0, 0.3]}], 
      Opacity[0.7], 
      Hue[0.125]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "VectorMapRemoveLabels" -> True, "OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoStyling[], {{
          Directive[
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[0.3]]], 
           Opacity[0.7], 
           Hue[0.125, 1, 1]], {{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5245732862145802, 0.28673531905073696`}, {
                  0.02347421450099374, 0.014128310682625767`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5245732862145802, 0.28673531905073696`}, {
                    0.04278884136200648, 0.02575311069456332}]}, {}]}], {
               1, 1.6615018616387793`}], 5.42], 
             Style[5.42, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.10104284747640035`, 0.07524153792813293}, {
                  0.022044759934871788`, 0.013267971853566582`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.10104284747640035`, 0.07524153792813293}, {
                    0.04135938679588453, 0.024892771865504135`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.78], 
             Style[4.78, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.32731955380868455`, 0.19509423282282717`}, {
                  0.02192915997744549, 0.013198396272524338`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.32731955380868455`, 0.19509423282282717`}, {
                    0.04124378683845823, 0.02482319628446189}]}, {}]}], {
               1, 1.6615018616387793`}], 4.73], 
             Style[4.73, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.23468899960883594`, 0.14045006395232215`}, {
                  0.02148420817464365, 0.012930595306979292`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.23468899960883594`, 0.14045006395232215`}, {
                    0.04079883503565639, 0.024555395318916845`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.54], 
             Style[4.54, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5191413042702844, -0.0625484634823722}, {
                  0.021246280482756758`, 0.012787394930632825`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5191413042702844, -0.0625484634823722}, {
                    0.0405609073437695, 0.02441219494257038}]}, {}]}], {
               1, 1.6615018616387793`}], 4.44], 
             Style[4.44, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.11223786600623747`, 0.05613087201197289}, {
                  0.021150359990699585`, 0.012729663733171179`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.11223786600623747`, 0.05613087201197289}, {
                    0.04046498685171233, 0.02435446374510873}]}, {}]}], {
               1, 1.6615018616387793`}], 4.4], 
             Style[4.4, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.366998851315802, 0.14592427773410138`}, {
                  0.021126311819204047`, 0.012715189977799135`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.366998851315802, 0.14592427773410138`}, {
                    0.04044093868021679, 0.024339989989736688`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.39], 
             Style[4.39, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3818109608121747, 0.1204461310368907}, {
                  0.02098144397219992, 0.012627999075189383`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3818109608121747, 0.1204461310368907}, {
                    0.04029607083321266, 0.024252799087126936`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.33], 
             Style[4.33, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.06293424602958081, -0.00655709853992599}, {
                  0.020713221573795793`, 0.012466565371985705`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.06293424602958081, -0.00655709853992599}, {
                    0.040027848434808534`, 0.024091365383923258`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.22], 
             Style[4.22, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.1010428474764003, 0.07524153792813294}, {
                  0.020191268861374123`, 0.012152420245535561`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.1010428474764003, 0.07524153792813294}, {
                    0.039505895722386865`, 0.023777220257473114`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.01], 
             Style[4.01, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5197599358315652, -0.06716776827449837}, {
                  0.01978435017303226, 0.01190751008459208}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5197599358315652, -0.06716776827449837}, {
                    0.039098977034045, 0.023532310096529632`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.85], 
             Style[3.85, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3769924194716773, 0.08199001898096919}, {
                  0.019629581041007593`, 0.011814359943988564`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3769924194716773, 0.08199001898096919}, {
                    0.038944207902020335`, 0.023439159955926117`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.79], 
             Style[3.79, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3469155894130175, 0.0032505128908627695`}, {
                  0.01960366739137198, 0.011798763422411346`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3469155894130175, 0.0032505128908627695`}, {
                    0.03891829425238472, 0.0234235634343489}]}, {}]}], {
               1, 1.6615018616387793`}], 3.78], 
             Style[3.78, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5086344826226242, 0.2173609734241167}, {
                  0.019499668422200328`, 0.01173617007143607}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5086344826226242, 0.2173609734241167}, {
                    0.03881429528321307, 0.023360970083373622`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.74], 
             Style[3.74, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.2546510094982149, 0.2110622389532256}, {
                  0.019210768474539286`, 0.011562291272783326`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   Circle[{0.2546510094982149, 0.2110622389532256}, {
                    0.03852539533555203, 0.02318709128472088}]}, {}]}], {
               1, 1.6615018616387793`}], 3.63], 
             Style[3.63, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.48511749127265213`, 0.1719478469686723}, {
                  0.019157773150198315`, 0.011530395236092367`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.48511749127265213`, 0.1719478469686723}, {
                    0.03847240001121106, 0.02315519524802992}]}, {}]}], {
               1, 1.6615018616387793`}], 3.61], 
             Style[3.61, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4794538269593035, 0.11178792376282984`}, {
                  0.019078004143846528`, 0.011482385054344388`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4794538269593035, 0.11178792376282984`}, {
                    0.03839263100485927, 0.02310718506628194}]}, {}]}], {
               1, 1.6615018616387793`}], 3.58], 
             Style[3.58, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4872590549143273, 0.1806338194130487}, {
                  0.01905134025360622, 0.011466336989123443`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4872590549143273, 0.1806338194130487}, {
                    0.03836596711461896, 0.023091137001060996`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.57], 
             Style[3.57, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3200248870917925, 0.11185926289557523`}, {
                  0.018997900203727436`, 0.011434173287647925`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3200248870917925, 0.11185926289557523`}, {
                    0.03831252706474018, 0.023058973299585478`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.55], 
             Style[3.55, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4626939788716715, 0.1088616440527274}, {
                  0.018728412789431048`, 0.011271978215515704`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4626939788716715, 0.1088616440527274}, {
                    0.03804303965044379, 0.022896778227453257`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.45], 
             Style[3.45, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.33881212519442044`, 0.05208221682225331}, {
                  0.018592204343261698`, 0.01118999910413808}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.33881212519442044`, 0.05208221682225331}, {
                    0.03790683120427444, 0.022814799116075632`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.4], 
             Style[3.4, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.28076320665211035`, -0.05652444877535233}, {
                  0.018564842732639864`, 0.011173531105363274`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.28076320665211035`, -0.05652444877535233}, {
                    0.037879469593652605`, 0.022798331117300827`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.39], 
             Style[3.39, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.028651478356717552`, -0.015435068254870288`}, {
                  0.018427425279130036`, 0.011090824334650265`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.028651478356717552`, -0.015435068254870288`}, {
                    0.03774205214014278, 0.022715624346587818`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.34], 
             Style[3.34, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5110131019357762, 0.21986009882278626`}, {
                  0.01837217050623116, 0.011057568414705427`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5110131019357762, 0.21986009882278626`}, {
                    0.0376867973672439, 0.02268236842664298}]}, {}]}], {
               1, 1.6615018616387793`}], 3.32], 
             Style[3.32, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5142171253457233, 0.24232220599707752`}, {
                  0.018344480708269884`, 0.011040902891421539`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5142171253457233, 0.24232220599707752`}, {
                    0.037659107569282625`, 0.022665702903359092`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.31], 
             Style[3.31, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4446560757972081, 0.16990711115097043`}, {
                  0.018288975344403324`, 0.011007496149516488`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4446560757972081, 0.16990711115097043`}, {
                    0.037603602205416066`, 0.02263229616145404}]}, {}]}], {
               1, 1.6615018616387793`}], 3.29], 
             Style[3.29, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.44800864879098035`, 0.23975575195833637`}, {
                  0.018261159396222526`, 0.010990754700816951`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.44800864879098035`, 0.23975575195833637`}, {
                    0.03757578625723527, 0.022615554712754504`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.28], 
             Style[3.28, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.25188737224040475`, -0.007842078237938067}, {
                  0.018149469300187904`, 0.010923532328929599`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.25188737224040475`, -0.007842078237938067}, {
                    0.037464096161200645`, 0.02254833234086715}]}, {}]}], {
               1, 1.6615018616387793`}], 3.24], 
             Style[3.24, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.366998851315802, 0.14592427773410138`}, {
                  0.0179806333579991, 0.01082191586608533}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.366998851315802, 0.14592427773410138`}, {
                    0.03729526021901184, 0.022446715878022883`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.18], 
             Style[3.18, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.489307594247794, -0.025516822215007593`}, {
                  0.017952339660914446`, 0.010804886876989498`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.489307594247794, -0.025516822215007593`}, {
                    0.03726696652192719, 0.022429686888927054`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.17], 
             Style[3.17, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.06293424602958081, -0.006557098539925983}, {
                  0.017838716116499485`, 0.010736500829980865`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.06293424602958081, -0.006557098539925983}, {
                    0.03715334297751223, 0.022361300841918418`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.13], 
             Style[3.13, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.489307594247794, -0.025516822215007593`}, {
                  0.017695660751023995`, 0.01065040079676487}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.489307594247794, -0.025516822215007593`}, {
                    0.03701028761203674, 0.022275200808702426`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.08], 
             Style[3.08, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.39108922211629826`, 0.14157818931382304`}, {
                  0.0174643349768539, 0.010511173884348468`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.39108922211629826`, 0.14157818931382304`}, {
                    0.03677896183786664, 0.02213597389628602}]}, {}]}], {
               1, 1.6615018616387793`}], 3], 
             Style[3, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.38258470525126687`, 0.1977190257924214}, {
                  0.017288809567465535`, 0.010405531264595258`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.38258470525126687`, 0.1977190257924214}, {
                    0.03660343642847828, 0.02203033127653281}]}, {}]}], {
               1, 1.6615018616387793`}], 2.94], 
             Style[2.94, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5151395096211456, 0.23353875143554334`}, {
                  0.017229903741814656`, 0.01037007790338576}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5151395096211456, 0.23353875143554334`}, {
                    0.0365445306028274, 0.021994877915323313`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.92], 
             Style[2.92, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5086344826226242, 0.2173609734241167}, {
                  0.017200375178996863`, 0.0103523056916901}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5086344826226242, 0.2173609734241167}, {
                    0.036515002040009605`, 0.021977105703627653`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.91], 
             Style[2.91, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.32002488709179244`, 0.11185926289557523`}, {
                  0.01717079583607889, 0.010334502917223903`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.32002488709179244`, 0.11185926289557523`}, {
                    0.03648542269709163, 0.021959302929161456`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.9], 
             Style[2.9, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.48335071353708736`, 0.17080564497247536`}, {
                  0.01711148375613325, 0.010298805045728832`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.48335071353708736`, 0.17080564497247536`}, {
                    0.03642611061714599, 0.021923605057666384`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.88], 
             Style[2.88, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.11545320122211078`, 0.06225602160172593}, {
                  0.016962296220343592`, 0.01020901427315482}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.11545320122211078`, 0.06225602160172593}, {
                    0.036276923081356334`, 0.021833814285092373`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.83], 
             Style[2.83, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.33713774912263056`, 0.17528617189950035`}, {
                  0.016902252505473725`, 0.010172876056125879`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.33713774912263056`, 0.17528617189950035`}, {
                    0.03621687936648647, 0.021797676068063432`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.81], 
             Style[2.81, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.10530247979393553`, 0.1976056899092667}, {
                  0.01690225250547364, 0.010172876056125879`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.10530247979393553`, 0.1976056899092667}, {
                    0.03621687936648638, 0.021797676068063432`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.81], 
             Style[2.81, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.47493230184297064`, -0.044727558203820225`}, {
                  0.01687215051808294, 0.010154758720186743`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.47493230184297064`, -0.044727558203820225`}, {
                    0.03618677737909568, 0.021779558732124296`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.8], 
             Style[2.8, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.30949400717049047`, 0.19057739970168178`}, {
                  0.01687215051808294, 0.010154758720186757`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.30949400717049047`, 0.19057739970168178`}, {
                    0.03618677737909568, 0.02177955873212431}]}, {}]}], {
               1, 1.6615018616387793`}], 2.8], 
             Style[2.8, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.49967838401474374`, 0.2001287481303091}, {
                  0.016841994728977294`, 0.010136609002872637`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.49967838401474374`, 0.2001287481303091}, {
                    0.036156621589990036`, 0.02176140901481019}]}, {}]}], {
               1, 1.6615018616387793`}], 2.79], 
             Style[2.79, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4970227201535451, 0.19349198951431634`}, {
                  0.016811784848639738`, 0.010118426729933294`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4970227201535451, 0.19349198951431634`}, {
                    0.03612641170965248, 0.021743226741870847`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.78], 
             Style[2.78, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.38943719471817395`, 0.2021028099740518}, {
                  0.016781520584947196`, 0.010100211725550062`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.38943719471817395`, 0.2021028099740518}, {
                    0.03609614744595994, 0.021725011737487615`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.77], 
             Style[2.77, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4206301032250759, 0.05031240924293526}, {
                  0.0167208277257771, 0.01006368281121571}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4206301032250759, 0.05031240924293526}, {
                    0.03603545458678984, 0.021688482823153263`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.75], 
             Style[2.75, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.028149649400137644`, 0.1103142376756354}, {
                  0.01653741273329782, 0.00995329172667106}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.028149649400137644`, 0.1103142376756354}, {
                    0.03585203959431056, 0.021578091738608612`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.69], 
             Style[2.69, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.47994836061776225`, 0.19674228878654373`}, {
                  0.016506645427145195`, 0.009934773958582471}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.47994836061776225`, 0.19674228878654373`}, {
                    0.035821272288157936`, 0.021559573970520024`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.68], 
             Style[2.68, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.47296961857527864`, 0.1500731528711177}, {
                  0.016351940557247813`, 0.009841662495111175}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.47296961857527864`, 0.1500731528711177}, {
                    0.035666567418260554`, 0.021466462507048728`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.63], 
             Style[2.63, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4872590549143273, 0.1806338194130487}, {
                  0.016195757985288467`, 0.009747661654326528}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4872590549143273, 0.1806338194130487}, {
                    0.03551038484630121, 0.02137246166626408}]}, {}]}], {
               1, 1.6615018616387793`}], 2.58], 
             Style[2.58, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5197599358315651, -0.06716776827449837}, {
                  0.01597453724338882, 0.009614516608264706}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5197599358315651, -0.06716776827449837}, {
                    0.03528916410440156, 0.02123931662020226}]}, {}]}], {
               1, 1.6615018616387793`}], 2.51], 
             Style[2.51, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.35818417739581176`, -0.03666484463445842}, {
                  0.015974537243388764`, 0.009614516608264706}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.35818417739581176`, -0.03666484463445842}, {
                    0.035289164104401506`, 0.02123931662020226}]}, {}]}], {
               1, 1.6615018616387793`}], 2.51], 
             Style[2.51, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.2902552414133704, 0.15951944677235907`}, {
                  0.01597453724338882, 0.009614516608264734}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.2902552414133704, 0.15951944677235907`}, {
                    0.03528916410440156, 0.021239316620202287`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.51], 
             Style[2.51, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.10530247979393553`, 0.19760568990926672`}, {
                  0.015942683697748886`, 0.009595345070528088}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.10530247979393553`, 0.19760568990926672`}, {
                    0.03525731055876163, 0.02122014508246564}]}, {}]}], {
               1, 1.6615018616387793`}], 2.5], 
             Style[2.5, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.23491184733063297`, -0.06968301275846411}, {
                  0.01568552677645546, 0.009440571291918068}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.23491184733063297`, -0.06968301275846411}, {
                    0.0350001536374682, 0.02106537130385562}]}, {}]}], {
               1, 1.6615018616387793`}], 2.42], 
             Style[2.42, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5279354631072016, 0.2609103061915393}, {
                  0.015620576076029069`, 0.009401479731489526}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5279354631072016, 0.2609103061915393}, {
                    0.03493520293704181, 0.02102627974342708}]}, {}]}], {
               1, 1.6615018616387793`}], 2.4], 
             Style[2.4, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.2616795684531848, 0.10740103164923089`}, {
                  0.01555535417916025, 0.009362224947384423}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   Circle[{0.2616795684531848, 0.10740103164923089`}, {
                    0.03486998104017299, 0.020987024959321976`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.38], 
             Style[2.38, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.09800220889718009, 0.23333294433172805`}, {
                  0.015358026686897078`, 0.009243460414633003}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.09800220889718009, 0.23333294433172805`}, {
                    0.03467265354790982, 0.020868260426570556`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.32], 
             Style[2.32, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.26825923566919346`, 0.19707172094546585`}, {
                  0.015258406003039904`, 0.009183502200828225}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.26825923566919346`, 0.19707172094546585`}, {
                    0.034573032864052645`, 0.020808302212765778`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.29], 
             Style[2.29, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3076047826068933, 0.03783973244642401}, {
                  0.015225054256049808`, 0.009163428947971786}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3076047826068933, 0.03783973244642401}, {
                    0.03453968111706255, 0.02078822895990934}]}, {}]}], {
               1, 1.6615018616387793`}], 2.28], 
             Style[2.28, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4763050265790708, -0.04039072392778264}, {
                  0.01515813061666138, 0.009123149944418714}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4763050265790708, -0.04039072392778264}, {
                    0.03447275747767412, 0.020747949956356267`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.26], 
             Style[2.26, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4754326997773711, 0.20823105735659692`}, {
                  0.014955562973960335`, 0.009001231547949795}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4754326997773711, 0.20823105735659692`}, {
                    0.034270189834973076`, 0.020626031559887348`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.2], 
             Style[2.2, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.23356300685863235`, 0.03670232601686262}, {
                  0.014955562973960307`, 0.009001231547949816}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.23356300685863235`, 0.03670232601686262}, {
                    0.03427018983497305, 0.02062603155988737}]}, {}]}], {
               1, 1.6615018616387793`}], 2.2], 
             Style[2.2, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.46985491516449973`, -0.010437614235637264`}, {
                  0.01492153434517196, 0.008980750903555719}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.46985491516449973`, -0.010437614235637264`}, {
                    0.0342361612061847, 0.02060555091549327}]}, {}]}], {
               1, 1.6615018616387793`}], 2.19], 
             Style[2.19, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4052389120236668, 0.16220139680813744`}, {
                  0.014887427936356223`, 0.008960223446076943}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4052389120236668, 0.16220139680813744`}, {
                    0.034202054797368965`, 0.020585023458014495`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.18], 
             Style[2.18, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3369071282545046, 0.17292670103891852`}, {
                  0.014853243211711553`, 0.008939648853033139}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3369071282545046, 0.17292670103891852`}, {
                    0.034167870072724295`, 0.02056444886497069}]}, {}]}], {
               1, 1.6615018616387793`}], 2.17], 
             Style[2.17, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.25188737224040475`, -0.00784207823793806}, {
                  0.014818979629256115`, 0.008919026798224497}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.25188737224040475`, -0.00784207823793806}, {
                    0.03413360649026886, 0.02054382681016205}]}, {}]}], {
               1, 1.6615018616387793`}], 2.16], 
             Style[2.16, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.24358642328110625`, -0.009512903728655535}, {
                  0.014715710220389311`, 0.008856872544142018}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.24358642328110625`, -0.009512903728655535}, {
                    0.03403033708140205, 0.02048167255607957}]}, {}]}], {
               1, 1.6615018616387793`}], 2.13], 
             Style[2.13, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.35561033579371226`, 0.2017360196670171}, {
                  0.014681125659721295`, 0.008836057303746203}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.35561033579371226`, 0.2017360196670171}, {
                    0.033995752520734036`, 0.020460857315683756`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.12], 
             Style[2.12, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.2560951066999377, -0.09707848377038684}, {
                  0.014611710965134542`, 0.008794279020983273}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.2560951066999377, -0.09707848377038684}, {
                    0.03392633782614728, 0.020419079032920825`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.1], 
             Style[2.1, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.23491184733063303`, -0.06968301275846411}, {
                  0.014436714101862147`, 0.00868895451469602}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.23491184733063303`, -0.06968301275846411}, {
                    0.03375134096287489, 0.020313754526633573`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.05], 
             Style[2.05, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.439101623154049, 0.18321319447423276`}, {
                  0.014366118499824942`, 0.008646465484940996}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.439101623154049, 0.18321319447423276`}, {
                    0.033680745360837684`, 0.02027126549687855}]}, {}]}], {
               1, 1.6615018616387793`}], 2.03], 
             Style[2.03, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.12566553044932705`, 0.09701928948569392}, {
                  0.014366118499824922`, 0.008646465484941024}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.12566553044932705`, 0.09701928948569392}, {
                    0.03368074536083766, 0.020271265496878577`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.03], 
             Style[2.03, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.2807632066521104, -0.056524448775352336`}, {
                  0.013898509425464112`, 0.008365027898166628}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.2807632066521104, -0.056524448775352336`}, {
                    0.03321313628647685, 0.01998982791010418}]}, {}]}], {
               1, 1.6615018616387793`}], 1.9], 
             Style[1.9, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.24425910168217352`, -0.05340514979728994}, {
                  0.013751431112212734`, 0.008276506593046719}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.24425910168217352`, -0.05340514979728994}, {
                    0.033066057973225475`, 0.01990130660498427}]}, {}]}], {
               1, 1.6615018616387793`}], 1.86], 
             Style[1.86, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.35818417739581176`, -0.036664844634458425`}, {
                  0.01352781570358852, 0.008141920280634395}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.35818417739581176`, -0.036664844634458425`}, {
                    0.03284244256460126, 0.019766720292571947`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.8], 
             Style[1.8, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.01697630975892872, 0.030736595476755106`}, {
                  0.013490186101618888`, 0.008119272336121967}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.01697630975892872, 0.030736595476755106`}, {
                    0.03280481296263163, 0.01974407234805952}]}, {}]}], {
               1, 1.6615018616387793`}], 1.79], 
             Style[1.79, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4605906850422016, 0.0910057232606375}, {
                  0.013452451241404484`, 0.008096561040344577}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4605906850422016, 0.0910057232606375}, {
                    0.032767078102417226`, 0.01972136105228213}]}, {}]}], {
               1, 1.6615018616387793`}], 1.78], 
             Style[1.78, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4120146455071976, 0.1929575838821646}, {
                  0.013107950050135764`, 0.007889217793115855}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4120146455071976, 0.1929575838821646}, {
                    0.032422576911148505`, 0.019514017805053407`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.69], 
             Style[1.69, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5086344826226245, 0.2173609734241167}, {
                  0.012512721714625696`, 0.0075309706257470355`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5086344826226245, 0.2173609734241167}, {
                    0.03182734857563844, 0.019155770637684588`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.54], 
             Style[1.54, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4120146455071976, 0.1929575838821646}, {
                  0.012141586174061136`, 0.007307597092961193}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4120146455071976, 0.1929575838821646}, {
                    0.03145621303507388, 0.018932397104898746`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.45], 
             Style[1.45, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.046139339414103864`, -0.006753008602949528}, {
                  0.012057560346697804`, 0.007257024879168766}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.046139339414103864`, -0.006753008602949528}, {
                    0.031372187207710546`, 0.01888182489110632}]}, {}]}], {
               1, 1.6615018616387793`}], 1.43], 
             Style[1.43, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4164097770117775, 0.18697630731586456`}, {
                  0.012015327080871108`, 0.007231606150004621}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4164097770117775, 0.18697630731586456`}, {
                    0.03132995394188385, 0.018856406161942174`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.42], 
             Style[1.42, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.38932836528484316`, 0.03661548534117835}, {
                  0.011887727070322374`, 0.007154808155675069}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.38932836528484316`, 0.03661548534117835}, {
                    0.031202353931335115`, 0.01877960816761262}]}, {}]}], {
               1, 1.6615018616387793`}], 1.39], 
             Style[1.39, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.06293424602958081, -0.00655709853992599}, {
                  0.011887727070322398`, 0.007154808155675069}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.06293424602958081, -0.00655709853992599}, {
                    0.03120235393133514, 0.01877960816761262}]}, {}]}], {
               1, 1.6615018616387793`}], 1.39], 
             Style[1.39, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.059390025423344706`, -0.0103797939478815}, {
                  0.011363007306656351`, 0.006838997637624529}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.059390025423344706`, -0.0103797939478815}, {
                    0.030677634167669093`, 0.018463797649562082`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.27], 
             Style[1.27, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.47610637207077033`, 0.004035493559706199}, {
                  0.011227996485984826`, 0.006757739335248425}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.47610637207077033`, 0.004035493559706199}, {
                    0.030542623346997567`, 0.018382539347185978`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.24], 
             Style[1.24, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.48589688403044484`, 0.054567746364552305`}, {
                  0.011045415269400505`, 0.00664785007132411}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.48589688403044484`, 0.054567746364552305`}, {
                    0.030360042130413246`, 0.018272650083261663`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.2], 
             Style[1.2, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4808073831406685, 0.11337252177931934`}, {
                  0.010718416949152654`, 0.006451041191480142}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4808073831406685, 0.11337252177931934`}, {
                    0.030033043810165395`, 0.018075841203417695`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.13], 
             Style[1.13, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.045122708075626405`, -0.028242603955073456`}, {
                  0.00993064123975633, 0.005976906477830571}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.045122708075626405`, -0.028242603955073456`}, {
                    0.02924526810076907, 0.017601706489768124`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.97], 
             Style[0.97, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.489307594247794, -0.02551682221500759}, {
                  0.009723730190465296, 0.0058523739364785}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.489307594247794, -0.02551682221500759}, {
                    0.029038357051478038`, 0.017477173948416053`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.93], 
             Style[0.93, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.6871382343934128, -0.08616256005296462}, {
                  0.009296102171630904, 0.005594999552069033}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.6871382343934128, -0.08616256005296462}, {
                    0.028610729032643646`, 0.017219799564006585`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.85], 
             Style[0.85, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4946042062350293, 0.2509447832515126}, {
                  0.009074734650093924, 0.005461766164464796}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4946042062350293, 0.2509447832515126}, {
                    0.028389361511106666`, 0.01708656617640235}]}, {}]}], {
               1, 1.6615018616387793`}], 0.81], 
             Style[0.81, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5081531171254957, 0.1428422744151436}, {
                  0.008129205527385941, 0.00489268517542793}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5081531171254957, 0.1428422744151436}, {
                    0.027443832388398683`, 0.016517485187365483`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.65], 
             Style[0.65, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.05460600503278701, -0.010639445176324085`}, {
                  0.008129205527385941, 0.004892685175427909}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.05460600503278701, -0.010639445176324085`}, {
                    0.027443832388398683`, 0.016517485187365462`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.65], 
             Style[0.65, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3977307784102022, 0.12310125207950126`}, {
                  0.006377073479099549, 0.00383813802821123}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3977307784102022, 0.12310125207950126`}, {
                    0.02569170034011229, 0.015462938040148784`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.4], 
             Style[
             0.4, {}]]}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}, {}}}, {
       CoordinatesToolOptions -> {
         "DisplayFunction" -> (
           GeoGraphics`GeoGridPositionDisplay[#, {
            "LambertAzimuthal", 
             "LongitudeDetermination" -> -114.05836310000001`, "Centering" -> 
             GeoPosition[{34.47242315, -114.05836310000001`}]}, "ITRF00"]& ), 
          "CopiedValueFunction" -> (
           GeoGraphics`GeoGridPositionCopiedValue[#, {
            "LambertAzimuthal", 
             "LongitudeDetermination" -> -114.05836310000001`, "Centering" -> 
             GeoPosition[{34.47242315, -114.05836310000001`}]}, "ITRF00"]& )},
         GeoBackground -> GeoStyling["GeoPlotMap"], GeoCenter -> 
        GeoPosition[{34.47242315, -114.05836310000001`}], GeoGridLinesStyle -> 
        GrayLevel[0.4, 0.3], 
        GeoGridRange -> {{-0.7889949307020097, 
         0.78899493070201}, {-0.34850092674070937`, 0.4796757769561033}}, 
        GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
        GeoProjection -> {
         "LambertAzimuthal", "Centering" -> 
          GeoPosition[{34.47242315, -114.05836310000001`}]}, 
        GeoServer -> {Automatic}, 
        MetaInformation -> <|
         "GeoMetaInformation" -> <|"Software" -> "Wolfram Language"|>|>, 
        Method -> {"ChartDefaultStyle" -> {
            Hue[0.125], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            RGBColor[0.571589, 0.586483, 0.], 
            RGBColor[0.915, 0.3325, 0.2125], 
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
          "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
          Directive[
            EdgeForm[{
              GrayLevel[0, 0.3]}], 
            Opacity[0.7], 
            Hue[0.125]], 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultPlotStyle" -> Automatic, "VectorMapRemoveLabels" -> True, 
          "OriginalInput" -> HoldForm[
            GeoGraphics[{
              Annotation[
               Style[
                Point[
                 GeoPosition[CompressedData["
1:eJyF1Hs01HkUAHAUEzV5bEQSkk0ePUimGHtnfr+R16p5j5gRkspGRUmobZ1K
JqJQxBROxNKm6Sgkt1VDrUIe21tYspFUUhK7dv9s/uiPe77nc77fe+/3nO/3
XPOgCE6ImoqKStBU/LcOjv/hkVAH0E2nZFrI+VheOyhzuQPQovnFJU/dH+l0
lfeP/Rmwatez9HcGQqS98ImPVWPAJcN5I57ZYiUHyxuM1V8CmC83u303Soyz
G/HqWXUG7K7lxX9aJ8aPufqUwxVMaDjpcVmeJMEfdNvPp06dJ8JedQ0fFeP4
3v5qvy0Ac2ddrCxwF+PNOUlGh90J2HzVWWdSLFHy1/0pr9vriS4mULunOU+e
keDipIFInYcEpPxGly+y3YDpG6tvU7tJkNyya6+24WBy0bKMhiISTvJ1w+2d
OShuo/UaPydAZ0ZTZ2cXB01MhBbVkQR0x7H0DBlcvDDR4ZOe6ALp3j6vZ4l4
Sq7SNdDfqVgNV/zT3vtSeXiuatrhUcoaUOicD0rU4mH442OtOnXO0BK1x55W
/O38znuaqcJPzlCxQ/vTZRkP9xzQ6K0vo8PnrH3PFmbycEh2qtdN4AqlujMV
nG08ZL96OlnYBZCdKTKiGvORSCkLncF1hEaa8LlpdTD255v3sJ+QYM9JH14y
zEfP3CedKwdIWCCL4BcM8LFj3L5maw8BrSOPVIVHlX09bJ7lWCsJASci/FS6
BTiqnqVpo0/AI09ZXvhWPkb7qnVaqBMgON9jJjThYy51LFRjjA6lCr0ORYJA
yUPqmw8tbGfBm8i4K7Q0NpZYSUK2FxIwY5Z7ud5irpKJu+tK4q1Z0Pb29EHP
m2xcs6rIyd2CBQfOGljdH+Kh2YOIAMoKFrhPfNCSKngosPvbihLLAr03nk9H
pu4XFEef/lnVDeTy/tykBUIcHnda5hPrBjkFKSk2bCH2JSoWbbcCCKy42C1L
FuA5qla6hE3A9B8zVhcdV7Y0MeidRioBesW3mlkFQgx2L+58kUdC0RzroYtq
IqzZ7VtkacKEXTZL5vc1+6PXMS2G3J8ElZJrO2dKOZgT67vIic+CmdbqNMNI
DtqtNP94Q0yC/5o+l54wDsZ4JQxq8Ekw5owH68R9245NumNLM1jQLSztWhjK
RemYpL8imwGjGN9q7cjDkvp6WuoEA15SGaajlVzcMvFg7aFRBnyXJaFE/s7F
wGj9MicqE1zqlq0v0+HhqXzVQO8kEp5s6zAKCOTh5xP2Pv1pBJj8mi7basZH
scvcPIcaEqQhpDwujIe/sId6qJMEWCd+/0Grlqe035faxrxTzYCltITazo0i
LHQ3aqy65QbeBh9Ns4olSjZ+u8nJQZWE1B56TWIDBxteCZo8aCREq62P/XmS
i/nsHaH6sSQwu+vSbKf+x/V/Vm6QW5Bw/0xbl/0SLnJOrSgpn5on14bnzg6Y
4OLE/H19kMyA/+fSfgEmxZRLJ/SZUN7qG02/zEd2vuXxohCAKlmy6uRyEeZK
d298s5cOp1NvD57JE6FruKbWvXo6JBT81V75UIjnbBVaDcEAufNH/KwFIuwY
okYV+LiCQ0yla9AOETZmi17Y3HAGd0MN20pfkVL9r+t93U8YkpFYGEzCoKqP
Z864H0KO7QbLPUzQvjTucEF76r20nd6a7iTgzyMf3Oy8uNgc7T/WMp2A1fV3
Y3TOcjFCtOnQT01roTSHcjMqU4IFHobXZS0ENOw38Er7wkVR1IAjXcqCOfxN
Rkf8BHjQrLfROJEFzd5S/vMJPv4LG1LanA==
                  "]]], 
                Opacity[0]], "GeoBubbleChartPlaceholder"]}, 
             Method -> {"ChartDefaultStyle" -> {
                 Hue[0.125], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 RGBColor[0.647624, 0.37816, 0.614037], 
                 RGBColor[0.571589, 0.586483, 0.], 
                 RGBColor[0.915, 0.3325, 0.2125], 
                 RGBColor[
                 0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                 
                 RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                 RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
               "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
               Directive[
                 EdgeForm[{
                   GrayLevel[0, 0.3]}], 
                 Opacity[0.7], 
                 Hue[0.125]], 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "VectorMapRemoveLabels" -> 
               True}, GeoBackground -> None, {
             GeoBackground -> GeoStyling["GeoPlotMap"], 
              MetaInformation -> {}}]], 
          "BasicGeoRange" -> {{21.324347, 
           47.6204993}, {-157.84764020000003`, -70.26908599999999}}}, 
        PlotRange -> {{-0.7889949307020097, 
         0.78899493070201}, {-0.34850092674070937`, 0.4796757769561033}}, 
        PlotRangePadding -> None}]], 
    "BasicGeoRange" -> {{21.324347, 
     47.6204993}, {-157.84764020000003`, -70.26908599999999}}, 
    "OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoStyling[], {{
          Directive[
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[0.3]]], 
           Opacity[0.7], 
           Hue[0.125, 1, 1]], {{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5245732862145802, 0.28673531905073696`}, {
                  0.02347421450099374, 0.014128310682625767`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5245732862145802, 0.28673531905073696`}, {
                    0.04278884136200648, 0.02575311069456332}]}, {}]}], {
               1, 1.6615018616387793`}], 5.42], 
             Style[5.42, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.10104284747640035`, 0.07524153792813293}, {
                  0.022044759934871788`, 0.013267971853566582`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.10104284747640035`, 0.07524153792813293}, {
                    0.04135938679588453, 0.024892771865504135`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.78], 
             Style[4.78, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.32731955380868455`, 0.19509423282282717`}, {
                  0.02192915997744549, 0.013198396272524338`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.32731955380868455`, 0.19509423282282717`}, {
                    0.04124378683845823, 0.02482319628446189}]}, {}]}], {
               1, 1.6615018616387793`}], 4.73], 
             Style[4.73, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.23468899960883594`, 0.14045006395232215`}, {
                  0.02148420817464365, 0.012930595306979292`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.23468899960883594`, 0.14045006395232215`}, {
                    0.04079883503565639, 0.024555395318916845`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.54], 
             Style[4.54, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5191413042702844, -0.0625484634823722}, {
                  0.021246280482756758`, 0.012787394930632825`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5191413042702844, -0.0625484634823722}, {
                    0.0405609073437695, 0.02441219494257038}]}, {}]}], {
               1, 1.6615018616387793`}], 4.44], 
             Style[4.44, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.11223786600623747`, 0.05613087201197289}, {
                  0.021150359990699585`, 0.012729663733171179`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.11223786600623747`, 0.05613087201197289}, {
                    0.04046498685171233, 0.02435446374510873}]}, {}]}], {
               1, 1.6615018616387793`}], 4.4], 
             Style[4.4, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.366998851315802, 0.14592427773410138`}, {
                  0.021126311819204047`, 0.012715189977799135`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.366998851315802, 0.14592427773410138`}, {
                    0.04044093868021679, 0.024339989989736688`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.39], 
             Style[4.39, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3818109608121747, 0.1204461310368907}, {
                  0.02098144397219992, 0.012627999075189383`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3818109608121747, 0.1204461310368907}, {
                    0.04029607083321266, 0.024252799087126936`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.33], 
             Style[4.33, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.06293424602958081, -0.00655709853992599}, {
                  0.020713221573795793`, 0.012466565371985705`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.06293424602958081, -0.00655709853992599}, {
                    0.040027848434808534`, 0.024091365383923258`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.22], 
             Style[4.22, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.1010428474764003, 0.07524153792813294}, {
                  0.020191268861374123`, 0.012152420245535561`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.1010428474764003, 0.07524153792813294}, {
                    0.039505895722386865`, 0.023777220257473114`}]}, {}]}], {
               1, 1.6615018616387793`}], 4.01], 
             Style[4.01, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5197599358315652, -0.06716776827449837}, {
                  0.01978435017303226, 0.01190751008459208}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   Circle[{0.5197599358315652, -0.06716776827449837}, {
                    0.039098977034045, 0.023532310096529632`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.85], 
             Style[3.85, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3769924194716773, 0.08199001898096919}, {
                  0.019629581041007593`, 0.011814359943988564`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3769924194716773, 0.08199001898096919}, {
                    0.038944207902020335`, 0.023439159955926117`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.79], 
             Style[3.79, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3469155894130175, 0.0032505128908627695`}, {
                  0.01960366739137198, 0.011798763422411346`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3469155894130175, 0.0032505128908627695`}, {
                    0.03891829425238472, 0.0234235634343489}]}, {}]}], {
               1, 1.6615018616387793`}], 3.78], 
             Style[3.78, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5086344826226242, 0.2173609734241167}, {
                  0.019499668422200328`, 0.01173617007143607}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5086344826226242, 0.2173609734241167}, {
                    0.03881429528321307, 0.023360970083373622`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.74], 
             Style[3.74, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.2546510094982149, 0.2110622389532256}, {
                  0.019210768474539286`, 0.011562291272783326`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.2546510094982149, 0.2110622389532256}, {
                    0.03852539533555203, 0.02318709128472088}]}, {}]}], {
               1, 1.6615018616387793`}], 3.63], 
             Style[3.63, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.48511749127265213`, 0.1719478469686723}, {
                  0.019157773150198315`, 0.011530395236092367`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.48511749127265213`, 0.1719478469686723}, {
                    0.03847240001121106, 0.02315519524802992}]}, {}]}], {
               1, 1.6615018616387793`}], 3.61], 
             Style[3.61, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4794538269593035, 0.11178792376282984`}, {
                  0.019078004143846528`, 0.011482385054344388`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4794538269593035, 0.11178792376282984`}, {
                    0.03839263100485927, 0.02310718506628194}]}, {}]}], {
               1, 1.6615018616387793`}], 3.58], 
             Style[3.58, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4872590549143273, 0.1806338194130487}, {
                  0.01905134025360622, 0.011466336989123443`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4872590549143273, 0.1806338194130487}, {
                    0.03836596711461896, 0.023091137001060996`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.57], 
             Style[3.57, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3200248870917925, 0.11185926289557523`}, {
                  0.018997900203727436`, 0.011434173287647925`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3200248870917925, 0.11185926289557523`}, {
                    0.03831252706474018, 0.023058973299585478`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.55], 
             Style[3.55, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4626939788716715, 0.1088616440527274}, {
                  0.018728412789431048`, 0.011271978215515704`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4626939788716715, 0.1088616440527274}, {
                    0.03804303965044379, 0.022896778227453257`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.45], 
             Style[3.45, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.33881212519442044`, 0.05208221682225331}, {
                  0.018592204343261698`, 0.01118999910413808}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.33881212519442044`, 0.05208221682225331}, {
                    0.03790683120427444, 0.022814799116075632`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.4], 
             Style[3.4, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.28076320665211035`, -0.05652444877535233}, {
                  0.018564842732639864`, 0.011173531105363274`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.28076320665211035`, -0.05652444877535233}, {
                    0.037879469593652605`, 0.022798331117300827`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.39], 
             Style[3.39, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.028651478356717552`, -0.015435068254870288`}, {
                  0.018427425279130036`, 0.011090824334650265`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.028651478356717552`, -0.015435068254870288`}, {
                    0.03774205214014278, 0.022715624346587818`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.34], 
             Style[3.34, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5110131019357762, 0.21986009882278626`}, {
                  0.01837217050623116, 0.011057568414705427`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5110131019357762, 0.21986009882278626`}, {
                    0.0376867973672439, 0.02268236842664298}]}, {}]}], {
               1, 1.6615018616387793`}], 3.32], 
             Style[3.32, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5142171253457233, 0.24232220599707752`}, {
                  0.018344480708269884`, 0.011040902891421539`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5142171253457233, 0.24232220599707752`}, {
                    0.037659107569282625`, 0.022665702903359092`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.31], 
             Style[3.31, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4446560757972081, 0.16990711115097043`}, {
                  0.018288975344403324`, 0.011007496149516488`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4446560757972081, 0.16990711115097043`}, {
                    0.037603602205416066`, 0.02263229616145404}]}, {}]}], {
               1, 1.6615018616387793`}], 3.29], 
             Style[3.29, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.44800864879098035`, 0.23975575195833637`}, {
                  0.018261159396222526`, 0.010990754700816951`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.44800864879098035`, 0.23975575195833637`}, {
                    0.03757578625723527, 0.022615554712754504`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.28], 
             Style[3.28, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.25188737224040475`, -0.007842078237938067}, {
                  0.018149469300187904`, 0.010923532328929599`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.25188737224040475`, -0.007842078237938067}, {
                    0.037464096161200645`, 0.02254833234086715}]}, {}]}], {
               1, 1.6615018616387793`}], 3.24], 
             Style[3.24, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.366998851315802, 0.14592427773410138`}, {
                  0.0179806333579991, 0.01082191586608533}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.366998851315802, 0.14592427773410138`}, {
                    0.03729526021901184, 0.022446715878022883`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.18], 
             Style[3.18, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.489307594247794, -0.025516822215007593`}, {
                  0.017952339660914446`, 0.010804886876989498`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.489307594247794, -0.025516822215007593`}, {
                    0.03726696652192719, 0.022429686888927054`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.17], 
             Style[3.17, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.06293424602958081, -0.006557098539925983}, {
                  0.017838716116499485`, 0.010736500829980865`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.06293424602958081, -0.006557098539925983}, {
                    0.03715334297751223, 0.022361300841918418`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.13], 
             Style[3.13, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.489307594247794, -0.025516822215007593`}, {
                  0.017695660751023995`, 0.01065040079676487}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.489307594247794, -0.025516822215007593`}, {
                    0.03701028761203674, 0.022275200808702426`}]}, {}]}], {
               1, 1.6615018616387793`}], 3.08], 
             Style[3.08, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.39108922211629826`, 0.14157818931382304`}, {
                  0.0174643349768539, 0.010511173884348468`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.39108922211629826`, 0.14157818931382304`}, {
                    0.03677896183786664, 0.02213597389628602}]}, {}]}], {
               1, 1.6615018616387793`}], 3], 
             Style[3, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.38258470525126687`, 0.1977190257924214}, {
                  0.017288809567465535`, 0.010405531264595258`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.38258470525126687`, 0.1977190257924214}, {
                    0.03660343642847828, 0.02203033127653281}]}, {}]}], {
               1, 1.6615018616387793`}], 2.94], 
             Style[2.94, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5151395096211456, 0.23353875143554334`}, {
                  0.017229903741814656`, 0.01037007790338576}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5151395096211456, 0.23353875143554334`}, {
                    0.0365445306028274, 0.021994877915323313`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.92], 
             Style[2.92, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5086344826226242, 0.2173609734241167}, {
                  0.017200375178996863`, 0.0103523056916901}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5086344826226242, 0.2173609734241167}, {
                    0.036515002040009605`, 0.021977105703627653`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.91], 
             Style[2.91, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.32002488709179244`, 0.11185926289557523`}, {
                  0.01717079583607889, 0.010334502917223903`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.32002488709179244`, 0.11185926289557523`}, {
                    0.03648542269709163, 0.021959302929161456`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.9], 
             Style[2.9, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.48335071353708736`, 0.17080564497247536`}, {
                  0.01711148375613325, 0.010298805045728832`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.48335071353708736`, 0.17080564497247536`}, {
                    0.03642611061714599, 0.021923605057666384`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.88], 
             Style[2.88, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.11545320122211078`, 0.06225602160172593}, {
                  0.016962296220343592`, 0.01020901427315482}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.11545320122211078`, 0.06225602160172593}, {
                    0.036276923081356334`, 0.021833814285092373`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.83], 
             Style[2.83, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.33713774912263056`, 0.17528617189950035`}, {
                  0.016902252505473725`, 0.010172876056125879`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.33713774912263056`, 0.17528617189950035`}, {
                    0.03621687936648647, 0.021797676068063432`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.81], 
             Style[2.81, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.10530247979393553`, 0.1976056899092667}, {
                  0.01690225250547364, 0.010172876056125879`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.10530247979393553`, 0.1976056899092667}, {
                    0.03621687936648638, 0.021797676068063432`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.81], 
             Style[2.81, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.47493230184297064`, -0.044727558203820225`}, {
                  0.01687215051808294, 0.010154758720186743`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.47493230184297064`, -0.044727558203820225`}, {
                    0.03618677737909568, 0.021779558732124296`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.8], 
             Style[2.8, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.30949400717049047`, 0.19057739970168178`}, {
                  0.01687215051808294, 0.010154758720186757`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.30949400717049047`, 0.19057739970168178`}, {
                    0.03618677737909568, 0.02177955873212431}]}, {}]}], {
               1, 1.6615018616387793`}], 2.8], 
             Style[2.8, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.49967838401474374`, 0.2001287481303091}, {
                  0.016841994728977294`, 0.010136609002872637`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.49967838401474374`, 0.2001287481303091}, {
                    0.036156621589990036`, 0.02176140901481019}]}, {}]}], {
               1, 1.6615018616387793`}], 2.79], 
             Style[2.79, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4970227201535451, 0.19349198951431634`}, {
                  0.016811784848639738`, 0.010118426729933294`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4970227201535451, 0.19349198951431634`}, {
                    0.03612641170965248, 0.021743226741870847`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.78], 
             Style[2.78, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.38943719471817395`, 0.2021028099740518}, {
                  0.016781520584947196`, 0.010100211725550062`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.38943719471817395`, 0.2021028099740518}, {
                    0.03609614744595994, 0.021725011737487615`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.77], 
             Style[2.77, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4206301032250759, 0.05031240924293526}, {
                  0.0167208277257771, 0.01006368281121571}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4206301032250759, 0.05031240924293526}, {
                    0.03603545458678984, 0.021688482823153263`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.75], 
             Style[2.75, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.028149649400137644`, 0.1103142376756354}, {
                  0.01653741273329782, 0.00995329172667106}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.028149649400137644`, 0.1103142376756354}, {
                    0.03585203959431056, 0.021578091738608612`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.69], 
             Style[2.69, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.47994836061776225`, 0.19674228878654373`}, {
                  0.016506645427145195`, 0.009934773958582471}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.47994836061776225`, 0.19674228878654373`}, {
                    0.035821272288157936`, 0.021559573970520024`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.68], 
             Style[2.68, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.47296961857527864`, 0.1500731528711177}, {
                  0.016351940557247813`, 0.009841662495111175}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.47296961857527864`, 0.1500731528711177}, {
                    0.035666567418260554`, 0.021466462507048728`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.63], 
             Style[2.63, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4872590549143273, 0.1806338194130487}, {
                  0.016195757985288467`, 0.009747661654326528}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4872590549143273, 0.1806338194130487}, {
                    0.03551038484630121, 0.02137246166626408}]}, {}]}], {
               1, 1.6615018616387793`}], 2.58], 
             Style[2.58, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5197599358315651, -0.06716776827449837}, {
                  0.01597453724338882, 0.009614516608264706}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5197599358315651, -0.06716776827449837}, {
                    0.03528916410440156, 0.02123931662020226}]}, {}]}], {
               1, 1.6615018616387793`}], 2.51], 
             Style[2.51, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.35818417739581176`, -0.03666484463445842}, {
                  0.015974537243388764`, 0.009614516608264706}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.35818417739581176`, -0.03666484463445842}, {
                    0.035289164104401506`, 0.02123931662020226}]}, {}]}], {
               1, 1.6615018616387793`}], 2.51], 
             Style[2.51, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.2902552414133704, 0.15951944677235907`}, {
                  0.01597453724338882, 0.009614516608264734}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   Circle[{0.2902552414133704, 0.15951944677235907`}, {
                    0.03528916410440156, 0.021239316620202287`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.51], 
             Style[2.51, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.10530247979393553`, 0.19760568990926672`}, {
                  0.015942683697748886`, 0.009595345070528088}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.10530247979393553`, 0.19760568990926672`}, {
                    0.03525731055876163, 0.02122014508246564}]}, {}]}], {
               1, 1.6615018616387793`}], 2.5], 
             Style[2.5, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.23491184733063297`, -0.06968301275846411}, {
                  0.01568552677645546, 0.009440571291918068}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.23491184733063297`, -0.06968301275846411}, {
                    0.0350001536374682, 0.02106537130385562}]}, {}]}], {
               1, 1.6615018616387793`}], 2.42], 
             Style[2.42, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5279354631072016, 0.2609103061915393}, {
                  0.015620576076029069`, 0.009401479731489526}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5279354631072016, 0.2609103061915393}, {
                    0.03493520293704181, 0.02102627974342708}]}, {}]}], {
               1, 1.6615018616387793`}], 2.4], 
             Style[2.4, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.2616795684531848, 0.10740103164923089`}, {
                  0.01555535417916025, 0.009362224947384423}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.2616795684531848, 0.10740103164923089`}, {
                    0.03486998104017299, 0.020987024959321976`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.38], 
             Style[2.38, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.09800220889718009, 0.23333294433172805`}, {
                  0.015358026686897078`, 0.009243460414633003}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.09800220889718009, 0.23333294433172805`}, {
                    0.03467265354790982, 0.020868260426570556`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.32], 
             Style[2.32, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.26825923566919346`, 0.19707172094546585`}, {
                  0.015258406003039904`, 0.009183502200828225}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.26825923566919346`, 0.19707172094546585`}, {
                    0.034573032864052645`, 0.020808302212765778`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.29], 
             Style[2.29, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3076047826068933, 0.03783973244642401}, {
                  0.015225054256049808`, 0.009163428947971786}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3076047826068933, 0.03783973244642401}, {
                    0.03453968111706255, 0.02078822895990934}]}, {}]}], {
               1, 1.6615018616387793`}], 2.28], 
             Style[2.28, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4763050265790708, -0.04039072392778264}, {
                  0.01515813061666138, 0.009123149944418714}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4763050265790708, -0.04039072392778264}, {
                    0.03447275747767412, 0.020747949956356267`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.26], 
             Style[2.26, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4754326997773711, 0.20823105735659692`}, {
                  0.014955562973960335`, 0.009001231547949795}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4754326997773711, 0.20823105735659692`}, {
                    0.034270189834973076`, 0.020626031559887348`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.2], 
             Style[2.2, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.23356300685863235`, 0.03670232601686262}, {
                  0.014955562973960307`, 0.009001231547949816}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.23356300685863235`, 0.03670232601686262}, {
                    0.03427018983497305, 0.02062603155988737}]}, {}]}], {
               1, 1.6615018616387793`}], 2.2], 
             Style[2.2, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.46985491516449973`, -0.010437614235637264`}, {
                  0.01492153434517196, 0.008980750903555719}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.46985491516449973`, -0.010437614235637264`}, {
                    0.0342361612061847, 0.02060555091549327}]}, {}]}], {
               1, 1.6615018616387793`}], 2.19], 
             Style[2.19, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4052389120236668, 0.16220139680813744`}, {
                  0.014887427936356223`, 0.008960223446076943}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4052389120236668, 0.16220139680813744`}, {
                    0.034202054797368965`, 0.020585023458014495`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.18], 
             Style[2.18, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3369071282545046, 0.17292670103891852`}, {
                  0.014853243211711553`, 0.008939648853033139}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3369071282545046, 0.17292670103891852`}, {
                    0.034167870072724295`, 0.02056444886497069}]}, {}]}], {
               1, 1.6615018616387793`}], 2.17], 
             Style[2.17, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.25188737224040475`, -0.00784207823793806}, {
                  0.014818979629256115`, 0.008919026798224497}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.25188737224040475`, -0.00784207823793806}, {
                    0.03413360649026886, 0.02054382681016205}]}, {}]}], {
               1, 1.6615018616387793`}], 2.16], 
             Style[2.16, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.24358642328110625`, -0.009512903728655535}, {
                  0.014715710220389311`, 0.008856872544142018}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.24358642328110625`, -0.009512903728655535}, {
                    0.03403033708140205, 0.02048167255607957}]}, {}]}], {
               1, 1.6615018616387793`}], 2.13], 
             Style[2.13, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.35561033579371226`, 0.2017360196670171}, {
                  0.014681125659721295`, 0.008836057303746203}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.35561033579371226`, 0.2017360196670171}, {
                    0.033995752520734036`, 0.020460857315683756`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.12], 
             Style[2.12, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.2560951066999377, -0.09707848377038684}, {
                  0.014611710965134542`, 0.008794279020983273}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.2560951066999377, -0.09707848377038684}, {
                    0.03392633782614728, 0.020419079032920825`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.1], 
             Style[2.1, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.23491184733063303`, -0.06968301275846411}, {
                  0.014436714101862147`, 0.00868895451469602}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.23491184733063303`, -0.06968301275846411}, {
                    0.03375134096287489, 0.020313754526633573`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.05], 
             Style[2.05, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.439101623154049, 0.18321319447423276`}, {
                  0.014366118499824942`, 0.008646465484940996}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.439101623154049, 0.18321319447423276`}, {
                    0.033680745360837684`, 0.02027126549687855}]}, {}]}], {
               1, 1.6615018616387793`}], 2.03], 
             Style[2.03, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.12566553044932705`, 0.09701928948569392}, {
                  0.014366118499824922`, 0.008646465484941024}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.12566553044932705`, 0.09701928948569392}, {
                    0.03368074536083766, 0.020271265496878577`}]}, {}]}], {
               1, 1.6615018616387793`}], 2.03], 
             Style[2.03, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.2807632066521104, -0.056524448775352336`}, {
                  0.013898509425464112`, 0.008365027898166628}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.2807632066521104, -0.056524448775352336`}, {
                    0.03321313628647685, 0.01998982791010418}]}, {}]}], {
               1, 1.6615018616387793`}], 1.9], 
             Style[1.9, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.24425910168217352`, -0.05340514979728994}, {
                  0.013751431112212734`, 0.008276506593046719}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.24425910168217352`, -0.05340514979728994}, {
                    0.033066057973225475`, 0.01990130660498427}]}, {}]}], {
               1, 1.6615018616387793`}], 1.86], 
             Style[1.86, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.35818417739581176`, -0.036664844634458425`}, {
                  0.01352781570358852, 0.008141920280634395}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.35818417739581176`, -0.036664844634458425`}, {
                    0.03284244256460126, 0.019766720292571947`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.8], 
             Style[1.8, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.01697630975892872, 0.030736595476755106`}, {
                  0.013490186101618888`, 0.008119272336121967}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.01697630975892872, 0.030736595476755106`}, {
                    0.03280481296263163, 0.01974407234805952}]}, {}]}], {
               1, 1.6615018616387793`}], 1.79], 
             Style[1.79, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4605906850422016, 0.0910057232606375}, {
                  0.013452451241404484`, 0.008096561040344577}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4605906850422016, 0.0910057232606375}, {
                    0.032767078102417226`, 0.01972136105228213}]}, {}]}], {
               1, 1.6615018616387793`}], 1.78], 
             Style[1.78, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4120146455071976, 0.1929575838821646}, {
                  0.013107950050135764`, 0.007889217793115855}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4120146455071976, 0.1929575838821646}, {
                    0.032422576911148505`, 0.019514017805053407`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.69], 
             Style[1.69, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5086344826226245, 0.2173609734241167}, {
                  0.012512721714625696`, 0.0075309706257470355`}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   Circle[{0.5086344826226245, 0.2173609734241167}, {
                    0.03182734857563844, 0.019155770637684588`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.54], 
             Style[1.54, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4120146455071976, 0.1929575838821646}, {
                  0.012141586174061136`, 0.007307597092961193}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4120146455071976, 0.1929575838821646}, {
                    0.03145621303507388, 0.018932397104898746`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.45], 
             Style[1.45, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.046139339414103864`, -0.006753008602949528}, {
                  0.012057560346697804`, 0.007257024879168766}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.046139339414103864`, -0.006753008602949528}, {
                    0.031372187207710546`, 0.01888182489110632}]}, {}]}], {
               1, 1.6615018616387793`}], 1.43], 
             Style[1.43, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4164097770117775, 0.18697630731586456`}, {
                  0.012015327080871108`, 0.007231606150004621}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4164097770117775, 0.18697630731586456`}, {
                    0.03132995394188385, 0.018856406161942174`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.42], 
             Style[1.42, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.38932836528484316`, 0.03661548534117835}, {
                  0.011887727070322374`, 0.007154808155675069}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.38932836528484316`, 0.03661548534117835}, {
                    0.031202353931335115`, 0.01877960816761262}]}, {}]}], {
               1, 1.6615018616387793`}], 1.39], 
             Style[1.39, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.06293424602958081, -0.00655709853992599}, {
                  0.011887727070322398`, 0.007154808155675069}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.06293424602958081, -0.00655709853992599}, {
                    0.03120235393133514, 0.01877960816761262}]}, {}]}], {
               1, 1.6615018616387793`}], 1.39], 
             Style[1.39, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.059390025423344706`, -0.0103797939478815}, {
                  0.011363007306656351`, 0.006838997637624529}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.059390025423344706`, -0.0103797939478815}, {
                    0.030677634167669093`, 0.018463797649562082`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.27], 
             Style[1.27, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.47610637207077033`, 0.004035493559706199}, {
                  0.011227996485984826`, 0.006757739335248425}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.47610637207077033`, 0.004035493559706199}, {
                    0.030542623346997567`, 0.018382539347185978`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.24], 
             Style[1.24, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.48589688403044484`, 0.054567746364552305`}, {
                  0.011045415269400505`, 0.00664785007132411}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.48589688403044484`, 0.054567746364552305`}, {
                    0.030360042130413246`, 0.018272650083261663`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.2], 
             Style[1.2, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4808073831406685, 0.11337252177931934`}, {
                  0.010718416949152654`, 0.006451041191480142}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4808073831406685, 0.11337252177931934`}, {
                    0.030033043810165395`, 0.018075841203417695`}]}, {}]}], {
               1, 1.6615018616387793`}], 1.13], 
             Style[1.13, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.045122708075626405`, -0.028242603955073456`}, {
                  0.00993064123975633, 0.005976906477830571}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.045122708075626405`, -0.028242603955073456`}, {
                    0.02924526810076907, 0.017601706489768124`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.97], 
             Style[0.97, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.489307594247794, -0.02551682221500759}, {
                  0.009723730190465296, 0.0058523739364785}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.489307594247794, -0.02551682221500759}, {
                    0.029038357051478038`, 0.017477173948416053`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.93], 
             Style[0.93, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.6871382343934128, -0.08616256005296462}, {
                  0.009296102171630904, 0.005594999552069033}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.6871382343934128, -0.08616256005296462}, {
                    0.028610729032643646`, 0.017219799564006585`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.85], 
             Style[0.85, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.4946042062350293, 0.2509447832515126}, {
                  0.009074734650093924, 0.005461766164464796}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.4946042062350293, 0.2509447832515126}, {
                    0.028389361511106666`, 0.01708656617640235}]}, {}]}], {
               1, 1.6615018616387793`}], 0.81], 
             Style[0.81, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.5081531171254957, 0.1428422744151436}, {
                  0.008129205527385941, 0.00489268517542793}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.5081531171254957, 0.1428422744151436}, {
                    0.027443832388398683`, 0.016517485187365483`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.65], 
             Style[0.65, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{-0.05460600503278701, -0.010639445176324085`}, {
                  0.008129205527385941, 0.004892685175427909}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{-0.05460600503278701, -0.010639445176324085`}, {
                    0.027443832388398683`, 0.016517485187365462`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.65], 
             Style[0.65, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Scale[
               Dynamic[{
                 
                 Disk[{0.3977307784102022, 0.12310125207950126`}, {
                  0.006377073479099549, 0.00383813802821123}], 
                 If[
                  CurrentValue["MouseOver"], {
                   Thickness[0.009999999999999998], 
                   
                   Circle[{0.3977307784102022, 0.12310125207950126`}, {
                    0.02569170034011229, 0.015462938040148784`}]}, {}]}], {
               1, 1.6615018616387793`}], 0.4], 
             Style[
             0.4, {}]]}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}, {}}}, {
       CoordinatesToolOptions -> {
         "DisplayFunction" -> (
           GeoGraphics`GeoGridPositionDisplay[#, {
            "LambertAzimuthal", 
             "LongitudeDetermination" -> -114.05836310000001`, "Centering" -> 
             GeoPosition[{34.47242315, -114.05836310000001`}]}, "ITRF00"]& ), 
          "CopiedValueFunction" -> (
           GeoGraphics`GeoGridPositionCopiedValue[#, {
            "LambertAzimuthal", 
             "LongitudeDetermination" -> -114.05836310000001`, "Centering" -> 
             GeoPosition[{34.47242315, -114.05836310000001`}]}, "ITRF00"]& )},
         GeoBackground -> GeoStyling["GeoPlotMap"], GeoCenter -> 
        GeoPosition[{34.47242315, -114.05836310000001`}], GeoGridLinesStyle -> 
        GrayLevel[0.4, 0.3], 
        GeoGridRange -> {{-0.7889949307020097, 
         0.78899493070201}, {-0.34850092674070937`, 0.4796757769561033}}, 
        GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
        GeoProjection -> {
         "LambertAzimuthal", "Centering" -> 
          GeoPosition[{34.47242315, -114.05836310000001`}]}, 
        GeoServer -> {Automatic}, 
        MetaInformation -> <|
         "GeoMetaInformation" -> <|"Software" -> "Wolfram Language"|>|>, 
        Method -> {"ChartDefaultStyle" -> {
            Hue[0.125], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            RGBColor[0.571589, 0.586483, 0.], 
            RGBColor[0.915, 0.3325, 0.2125], 
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
          "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
          Directive[
            EdgeForm[{
              GrayLevel[0, 0.3]}], 
            Opacity[0.7], 
            Hue[0.125]], 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultPlotStyle" -> Automatic, "VectorMapRemoveLabels" -> True, 
          "OriginalInput" -> HoldForm[
            GeoGraphics[{
              Annotation[
               Style[
                Point[
                 GeoPosition[CompressedData["
1:eJyF1Hs01HkUAHAUEzV5bEQSkk0ePUimGHtnfr+R16p5j5gRkspGRUmobZ1K
JqJQxBROxNKm6Sgkt1VDrUIe21tYspFUUhK7dv9s/uiPe77nc77fe+/3nO/3
XPOgCE6ImoqKStBU/LcOjv/hkVAH0E2nZFrI+VheOyhzuQPQovnFJU/dH+l0
lfeP/Rmwatez9HcGQqS98ImPVWPAJcN5I57ZYiUHyxuM1V8CmC83u303Soyz
G/HqWXUG7K7lxX9aJ8aPufqUwxVMaDjpcVmeJMEfdNvPp06dJ8JedQ0fFeP4
3v5qvy0Ac2ddrCxwF+PNOUlGh90J2HzVWWdSLFHy1/0pr9vriS4mULunOU+e
keDipIFInYcEpPxGly+y3YDpG6tvU7tJkNyya6+24WBy0bKMhiISTvJ1w+2d
OShuo/UaPydAZ0ZTZ2cXB01MhBbVkQR0x7H0DBlcvDDR4ZOe6ALp3j6vZ4l4
Sq7SNdDfqVgNV/zT3vtSeXiuatrhUcoaUOicD0rU4mH442OtOnXO0BK1x55W
/O38znuaqcJPzlCxQ/vTZRkP9xzQ6K0vo8PnrH3PFmbycEh2qtdN4AqlujMV
nG08ZL96OlnYBZCdKTKiGvORSCkLncF1hEaa8LlpdTD255v3sJ+QYM9JH14y
zEfP3CedKwdIWCCL4BcM8LFj3L5maw8BrSOPVIVHlX09bJ7lWCsJASci/FS6
BTiqnqVpo0/AI09ZXvhWPkb7qnVaqBMgON9jJjThYy51LFRjjA6lCr0ORYJA
yUPqmw8tbGfBm8i4K7Q0NpZYSUK2FxIwY5Z7ud5irpKJu+tK4q1Z0Pb29EHP
m2xcs6rIyd2CBQfOGljdH+Kh2YOIAMoKFrhPfNCSKngosPvbihLLAr03nk9H
pu4XFEef/lnVDeTy/tykBUIcHnda5hPrBjkFKSk2bCH2JSoWbbcCCKy42C1L
FuA5qla6hE3A9B8zVhcdV7Y0MeidRioBesW3mlkFQgx2L+58kUdC0RzroYtq
IqzZ7VtkacKEXTZL5vc1+6PXMS2G3J8ElZJrO2dKOZgT67vIic+CmdbqNMNI
DtqtNP94Q0yC/5o+l54wDsZ4JQxq8Ekw5owH68R9245NumNLM1jQLSztWhjK
RemYpL8imwGjGN9q7cjDkvp6WuoEA15SGaajlVzcMvFg7aFRBnyXJaFE/s7F
wGj9MicqE1zqlq0v0+HhqXzVQO8kEp5s6zAKCOTh5xP2Pv1pBJj8mi7basZH
scvcPIcaEqQhpDwujIe/sId6qJMEWCd+/0Grlqe035faxrxTzYCltITazo0i
LHQ3aqy65QbeBh9Ns4olSjZ+u8nJQZWE1B56TWIDBxteCZo8aCREq62P/XmS
i/nsHaH6sSQwu+vSbKf+x/V/Vm6QW5Bw/0xbl/0SLnJOrSgpn5on14bnzg6Y
4OLE/H19kMyA/+fSfgEmxZRLJ/SZUN7qG02/zEd2vuXxohCAKlmy6uRyEeZK
d298s5cOp1NvD57JE6FruKbWvXo6JBT81V75UIjnbBVaDcEAufNH/KwFIuwY
okYV+LiCQ0yla9AOETZmi17Y3HAGd0MN20pfkVL9r+t93U8YkpFYGEzCoKqP
Z864H0KO7QbLPUzQvjTucEF76r20nd6a7iTgzyMf3Oy8uNgc7T/WMp2A1fV3
Y3TOcjFCtOnQT01roTSHcjMqU4IFHobXZS0ENOw38Er7wkVR1IAjXcqCOfxN
Rkf8BHjQrLfROJEFzd5S/vMJPv4LG1LanA==
                  "]]], 
                Opacity[0]], "GeoBubbleChartPlaceholder"]}, 
             Method -> {"ChartDefaultStyle" -> {
                 Hue[0.125], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 RGBColor[0.647624, 0.37816, 0.614037], 
                 RGBColor[0.571589, 0.586483, 0.], 
                 RGBColor[0.915, 0.3325, 0.2125], 
                 RGBColor[
                 0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                 
                 RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                 RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
               "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
               Directive[
                 EdgeForm[{
                   GrayLevel[0, 0.3]}], 
                 Opacity[0.7], 
                 Hue[0.125]], 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "VectorMapRemoveLabels" -> 
               True}, GeoBackground -> None, {
             GeoBackground -> GeoStyling["GeoPlotMap"], 
              MetaInformation -> {}}]], 
          "BasicGeoRange" -> {{21.324347, 
           47.6204993}, {-157.84764020000003`, -70.26908599999999}}}, 
        PlotRange -> {{-0.7889949307020097, 
         0.78899493070201}, {-0.34850092674070937`, 0.4796757769561033}}, 
        PlotRangePadding -> None}]], 
    "BasicGeoRange" -> {{5.523341766181147, 
     63.42150453381885}, {-185.70954597711426`, -42.40718022288577}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
      GeoPosition[{34.47242315, -114.05836310000001`}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-0.7889949307020097, 
       0.78899493070201}, {-0.34850092674070937`, 0.4796757769561033}}, 
      GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
      GeoProjection -> {
       "LambertAzimuthal", "Centering" -> 
        GeoPosition[{34.47242315, -114.05836310000001`}]}, 
      GeoRange -> {{5.523341766181147, 
       63.42150453381885}, {-185.70954597711426`, -42.40718022288577}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 3, 
      MetaInformation -> <|"GeoMetaInformation" -> <|"Attribution" -> Row[{
             Hyperlink["Wolfram Knowledgebase", "https://www.wolfram.com/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] OpenStreetMap contributors", 
              "https://www.openstreetmap.org/copyright"]}], "GeoModel" -> 
          "ITRF00", 
          "LonLatBox" -> {{-185.70954597711426`, -42.40718022288577}, {
           5.523341766181147, 63.42150453381885}}, 
          "PlotRange" -> {{-0.7889949307020097, 
           0.78899493070201}, {-0.34850092674070937`, 0.4796757769561033}}, 
          "Projection" -> {
           "LambertAzimuthal", "Centering" -> 
            GeoPosition[{34.47242315, -114.05836310000001`}], 
            "LongitudeDetermination" -> -114.05836310000001`}, 
          "Software" -> {
           "Wolfram Language", 
            "Created with the Wolfram Language: www.wolfram.com"}, 
          "TileSources" -> {"Wolfram", "OSM"}|>|>}},
  PlotRange->{{-0.7889949307020097, 0.78899493070201}, {-0.34850092674070937`,
    0.4796757769561033}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.924482165091374*^9, 3.924482292713527*^9, 3.924482796332474*^9, {
   3.9244843529748497`*^9, 3.924484375244574*^9}, 3.924484662724976*^9, {
   3.924484896925904*^9, 3.924484926226253*^9}},
 CellLabel->"Out[640]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy8vWdwZFmWHpaVQAFV7Wd67LqZdVppJQ6DLkSKESR3SYpBjcxKDP1UBDco
MpZUKKSg+FsK7nJ3ubszO961Q6FQBq7gvTdpgEQiMwGk9/kyE97bquqOODrf
ufe+94Cu7uoJRejHSwCJNO/dd75jv3Puf/f7/+4P/uX//vv/7l//i9//+j/5
t7//f/7Bv/4X/9fX/+v/49/yUw23PJ7Gdzwe77/5uqeRfyePx/3gaaDuSJnu
Bas4PCS/2Q9P8NBELQHLw4/+Mn0wn6QPZjfkaF2IU7c/4qXx5QB/zEY2RqdH
OTo9zHq8ePTS+XHBS2fHef7v2VGezk8K9Pyyyn999LTueYWeXVh0cVqUA/87
P87T1XmZDnYSVLcidHVWpmeXNS9dXtQ9dylcKNGDQJYe8nHfl6OWxQLd8xf5
KNG9AK7B8vyaXEUT/22p//kKdN+fp/aVIgXzeS9lN3OeVylm+ShQHKCZbBet
1aapfhCjp5cVPmr8jXWcH52e1+jopIZrOa3zOZ+c1unotEZXl3V9BXfpQ37d
8yt1XJzXafewRlMbJepZXaO53Bi1z0/y+98bnuar/WB2nVp8RVnb+0slerzC
r4tVKV2v0fEJf+6FfM4dfLQXn/x1+ZIG/rXG/6jiKc9tee4OfXhVk+c/khOo
0uFxjmo7cdrbT1GpuOSlWGSMl8EqhejipGgfl6clvPVt+ZRX+dc6LofXt0Yn
R0WqVsJUKS7z4q/SyUEW949vgrzF04z33MIq3aK907hITk+0+kmS04uHxk+Q
nJa5DeqeW/TS5Fwff/DMfC8tLQ3Rdn0NckMHuwlKxmdoJTTEqxcI9PNXBQJ9
FF0d4f/nbPnZ2VynBL8OR2R1mF8/IKdf48vAJbDk0faB5aXcZo3PYjpRplaW
mwdGflg27gUqXgjOr79Abu758tTKstO5wnLTF8vzgs1lHLlZyPdQtDpJ24cb
VNsv0c5hTeThptycn9XpGS/0h08duXnKi37MsoTjkO+9kZvHS1nqWklQ22KC
3//BXIJf27KQteWmNWix7FjUtlylgWiZYuUKbiK/SokKZBffhb8c8VHy/JHr
+yE+QBoQaESoWArSnL+D5vlYDvV7jAytRSdoY23SPrKpBcjSF/RNgAxdMlCP
9tNULa/IDchlFim01E+R8DDlM356el7R4sMyyzJ0VRHx6f1k8emWJ1/HrcE9
sg+WJ5GmFsY8FqV1McN6KE0PfWmaXMvSbMjPJz413en5VRobf0Sj4w8pFJ6i
2PoihWMLNBGYo8GFORqYn6KxyU4an2ijuZnHlE0vCFjKfPb57CJf6AStLA9S
eGWIFhc6aGbmAcX54jPJeUolZnlRxsi3ukgzsQ2Klio0tl4Webkf4HMKsD7y
K330m3IdDc51+Ip8fi2Lec/n6H4wz0ogy6KVoKnUEi3k5mkq7afxpJ98+SWq
7q9RaadAxe0a1fdrVN6p8e9VsnaqEDAIkadR7kIz/83K56hGByfqqO5VKcLn
1R8p8fe1BQqsOXB+/M3OwefSKOd3mx4tl2khXWZFVJfj/LyuEO/F1/y6fMtX
REWenRXkuLqoiBhdsn6AooYSt6wV8gW7qavv+zQ49g7NLbRTODQkK7kc7Keg
v1d+4u+16LjIy2Y1KkB+elH5vJZRqJzdrXVaj43zyTOyWeFFV8fko6Kroyxi
ITpmccNXH+6lWKsVlV58iVB1yZO/oW9GWRsPZUBa/Hxz/AVWEHkxGE/YYPSF
izQSK1Fhq0qJ7CpNzQ/Q+OwAjUz2UP9oF3WO9FEHH+2jQ9Q2t8qGKUNdSyka
mRuhiekumprpJL+/hwJ8LMx30NjYBzQ784iWGRoroUEKBvC/bi9gxZe4HOyj
7u7v0b3uVnowMUu+RJqGowWtp6zflrN/W5k7vn047gdy1LGSovF4lCYSET7i
NJmwaHC9StOpIuW245SsFVkUauTPVWm5UKXVokUxFo2t/Sqv7tlZ3fMa66G6
2Dc2tCxyNbFJ1h6OKsUqFepeLdKDpaJRjY0iwQ22WsKJebUkPWRJGt+oUIY/
osSSu3+kbQe/HmpPm1fPF416UqpRaxM8vsmmtEh7R0lWi3E6PcvDaaCDvaQI
Rc0KU2DpCfUM/IjuPfxT6hn8Ec3OP6IVRiovNJ+Hb7GbVbXP102h5QEoMTki
4RFaZ1Tvs5WEkYGrAoeDdRMvgPpefA+eO9xNih7jm0Nzc49oKdhLVnmVjdKc
yO8SG6MKawvovBIjdW9rg7+XleItaNRbStV9ZoH8hhbGkiOQPmWBHi0XxXPp
jRYpXbME+SUWxi3WBkmrSFNrKeoJxqnDt0GPF9fp/mKS7s+vszBG6P7ChhLI
lTyNRuM0EVujmbUobSQWBUTXBJKvCUKZz/ro+CAtzhq0oVsiPxgep4cslW2z
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
7RptxAa65w6IgPnGKDOIzszcNVdvdNEjgN53mqv3us21voPuutp7wFzuedvc
mDhqBxg6eBsyzMDpm3+2kymYWx3jRGPLko6trFcxE4GOVCI2V7yTKXjZlamC
snyfd6Fdbh5HEuFon1YwFLkaEvpaMjixqfuMp03RGN9i8XU8OFgl5CzEK9vS
Ak4JkoK9R/6HYbOrE1VzJxeRhmPwrGIu07+PpBnE0odol0sqzAdXt2DC/TxL
BRp0qD0GDpDDzi9HpvwADcMyWRG0ImqI781hKSAmEDnidzH3ACrX21ksF27w
nxhKucSzWRG7fdzDqZEKD664yEtm0HcwGcpfczhdte/Sagc6GdqbaH2Buw4z
/2CHdFOV65uxFihTrNr5YQoC1FrA3oBpqvAgnZDyI2Yni277iFIi4kZAC88k
d0/l5rEgj1d/kDXNPSyb4bkZk31Y4/2HMBVz5MVXN0DhWjdPtiJHVPruE9le
iCgJgUPxYYNynkVmbFyQLEGvzAOpMjx7oj2/Tv50ME7AU/UDiDsamYPpCpmJ
CgcCSG9B23d6GHul5EJgcMBujwsZDD0WpBqQdrR6gXcVr33m6njFDJQinvYX
ZmpM90XMDabcX4UHgyZdBknKaRl/2M1DYmBSxwWzAhYaaLEOQ8MLKA5hdXnG
jGWumpHRy3Sc+Npmbt8/ai5d+zpPZ11JdndgzRep+6VUlzl59U/4upo8ZDK1
u5RopnXtApJC9Hs1a8HmZnDkXZ1qthXq2LkvwbpkbYVO8lfDKQNJtwMD0dYM
623xvAKemKUpzrelU1uj8DiDxL9yPcWAe8BDGjCFen6sag73i/fl20FdlXun
JWfslDkanCyI6XEBXwo0ffQQYJqamZ0D/ZsfjQDz4yls5+PahZuWRXMBmEjB
anMFZSdlvxCXnho/jVNDuM1LDOfGHhXX5wQqfbvSaw07XKn1ZGvuk9s0OGDw
F0xKdqEHCNSEYt3RTYy/aieTj4w3bnNvbY4kgTX0EciV6/b3Ohk8IDvAq7Ks
lZw8BsDqS7pnr9MUyON8kIqyh6dY/cKE9EBURdEQ3+cq0W6U1E/qerS58y0e
r6ZoWUWP1dgooyg4uwC1u2TuFJzaAWkHBLLSH2Nmc2U9rnYfso9wlFTu8vU/
Nxeu/kf6F31tg7bRXZ298n87JbuRPmZm54cp3xuX7aiduktzRyVrd7IiABgX
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
yzelrQ+GIkUnHqe0nZ8TRxRjoQ0PyNwdi/jnhRTD94kf5JpP0pnND9H7r+MC
+TT1xC+j7pQHqD35EerNW07jlastI2TQNicglC+ssdLnKX7Hs3QicYdIHgq7
4iEHdSLS47cAixT0+aP7txkOoAMjaLeautyr9d4e5Q8x5RMNBi4SxLVIcmkL
VwOk0FlBlI7mFdyAMQzT5s/GZaK7o0IudDRsihkh80ysCabFqJlMVsFRGF+Z
J9ZY1V6HW3811mAaTBW+horZIArG3R2VlrfjlcteS0galKHjQJwIa8V0Nui4
aJzVTGngupQwOoRwXpJMoNecCQmGobev82U7YPyd6GSCmcyvwyGnaM6Ao7zf
2FNluglFL/gQq0EYZiaIR3mD4//M70DHS403UwgukopfugX1VPKxOwQk4dgI
Sh+96Sk6u+4zfO0sFSEVkusJ65byfXfT8XfupegND0nXSU3U09K5P6nctOWa
6S/8G0o+/hLFMHBeaCxEL690W/tnaVHsADbTb2GZvBeIeMCmz/fmcSBTRwUd
OVTlqSL/kEd2tWuiteuSbaOpt4DqfVnymNGJVtkysAeX8625v1CSvPwaITNO
l1c+CpVZNafyPiuqOct8E8aIQk63fUkwNHvXvVRy6AuYmyp/B77i72e3Lqf0
5H3UWJ8rzAB5jx5dWBu/3CZI7h/qopxmn6yNuFofJTZ4pO39VJWCusR6NfTk
VFkXJiPRseIOOsaM8UgBELTlpiKyUbSa+LPM1hOnZGuSDyju1h3xZgbQ8XJ+
/Zoe6XRD3yxzaDNzSY9uNc8vz6OSfMturoUwzO7Pa6E1+4/Sho0/oOPbVlDh
yaeln+VqzUqJTvvSH6bus4sxFFpKNNmb3ZS8Lpyhlq+odfNQhpZZR6F6FqaB
W8j74tfOEyvf6QLLvnL9y1+gn6zdI/D6ZQtK91qR+8dXjb1B/c0Dmv23aOO0
Tlp7KpNeXruekva/SL58jsPPPkVxm+8Rf2/gJlqtIVia0rJIjCMo37+Q8nht
FOyYLxPdgLdH3rybXvnuZ+j4G+r/A+fuEUy9WLjcjqdCSEdLnqNz+5dTcsIO
qu7MEIvIUl7yTKWcaLTj91HW2SLeTicq4HbLeNo9EBDdbK+V5ftAesuR5eOg
FlxWWwRMTHQG8XS+8FRgKPRqNjy1+JzwPAanzLR9qEI7FRwC+lVMD+RUFejp
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
EzqjTh1G3F7hjFgZBvk17DSobSBQB3BhOjGcUdEhOV2c4UUN8LL93jqXH+cm
6UoZeLFD7sFpPkcVM9MyxR/a/cQqwJbhWmvx+oFDW78kzeLQpq1ReDZnGdKa
uyFzW8kgXM1LBhxG8L4R6IPvMUnIbCKPOqzWbF2NvJcInDqweaAJBysObL+q
D/JAOTF0Aql25/ZXKJVC6xowIBlUrM2B8yno0Xy7rPCnNgB+Yveqtkn4COY4
wM0MQgDq290m+Igp0FdM9jCIOBrXDUQQfHzeuqep8MCm2Gy6ybKNjNhwSrDv
UBjF8+/pO8XbMxJvB4ICC5AOCUrcf8+cjkVjX8w2braydLttHOosQvT+zHmF
QYzXkduycRmtXPkIrVv632jTii/S/rWfp7zl36QNK39CO7avptq6EjpwIkVr
qpJQYg0oCA3m10FBKDl+4/GlVL/uPfAEYyioLuDw3ikclqoLOLZXvL8ICBMW
x47s1vLquS3ZkR+4dRoR46Ci4axxaNieN4MW/eRWevgn99Lm8qXB1jzIAx6d
Od/I226LEN8QN14aEefiRkM83DJUUQFF8CH+QyHe9IB48KzQRYYQFMjWYYlG
IB5QA+fSKQPvaoEwCdMzKWOgAaMZUnBgRBjYOdbhE0Hb0UbPZMA6nCHONMVH
Q70BUehvg3VHLYmIO4PEohN/4agBxzz6xJUhIMYV6bSFcrnxF+WKD0OG5XWw
TsdiotcEx8ZDwwPDeYDS/GfX1Ea7bIxVjrjdRznghgBTSQvqxHCZ2xMCWVlC
JYO5IGhi88lEqRFE46FxyOWy045ce/IfAb7kxMDrcp3pAfrAegUvkHHR+dl4
rFDKL1edJqEtrnCF9mx5AQjjCm4yjkW9pECac8kOdo8yEib869IqUZ1kupxf
TeUu2rTuKcpb/Pe05ZW/p62L/4hK1nwWQS1t5hjYg1kA3OHG/SjdJQLWqzuF
QRqQW+ztj/CqV9S5j/NHDY+08seD6mN4FU4J8o0XlFcXC/JTsnp5/4BHMogn
Mzw0XjBKmTid1Nx8iI4cLhQ+iU/MtJF+8v7GVIp2HEvR0vKkghSKCwpWGcev
0fLIEpDatPgz4q4N7J0lQMVLCZHrMHtqo3vZU9uakHoCg5LUEzJDwJorQDWT
ml7JpH1PKT9ubF82e2yTqX/3TAlYSYJWD1zRjwoVkBtp2y9voie+/TZavOEn
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
KPv8QZetk7Eq4b5TsCYP9Pn+CPZFeLJfsk8xMcT3gQ8LDgo0heOLGfQUZxYb
YBGpBASlZdLvUShw2d/X6OonBvtMymOa1K1wzlHPsNiHcwdcw3nD14pEHbZD
vP0xqeVkyk8NJA7K78BF04RrCr4RgnuINo0J79Pmbme2zfzKmW1PcE2zSfs3
06lqzcuNsfH12Zk0tzyezHi5jN0vUfHGz1Hpysl0szCBt7SCeFx4hQl0syiB
3itO1AyeL8qgSxgJTeU4YMHw3bsldES+juNBO85dmCSOWTHIJeQM/kW5o7fF
ZkNT/MbxwOLfvnc+K9Fz7ooPAdsCo8noNJtdNJ22Meob/vZd8hzUxW177UjV
0/LT4J7ftJflbPk+HT+WSZs3LaNVr3xUXg4c70rqeOrLiJSiBkeuEwXxIsby
O4FAvmIz3/bT2pdi5IBW//4TYI1u3eKbuHI9RKdbWmnfiQbaXHKBNhXW6sgn
pOTKWn1Hb0O9yUbS0iLmTsjwJVde5OuzUhL1NpE8JB5pxlRKC2CaKZjgQiZk
oIBS0DKgLFfGweVo0AvQ2U7dasNe+JMkAhQPEmYNiPzOtGlB9KLxyIQqDYeh
nkRFflHCxQpzAKjh7cAE8H87IxIrA8wA4w0hmxDQc0TvTqg3UVJDMv+887gw
M6Sc8jwTrsrFwjwdK8qnrVSJssq0aprsmtjOyKSqajkdCPvtuAN5Tf5ooFzw
GNCq8xkcm18EPeNdxH5NChiNTmFiZiv5PRg40DcGA6fcAQPTKeNctuBfyqlS
xsAUJwbSsVpZcpIAJ60m73Xleo1RtxgQHNaaEWJH24LsNiud1QmUHpbmlQbZ
qIBIUqEwjg/43MBRDxgCTnFaUITHN6s51UYhx8bZwYGhzScgQDaNz54ZqzAc
myQbB6pL6nJwTLpYsGmpvEBnaCPFgSCdz2Wi5zyCJJihWs8aSmh7acX9g2Ej
PCYl3mWzkP1KNoOdzpwsdiSg51o9NdTmCZ5gjnvp4bnye03FTufUbfo5Nm1Y
Sqve/AvKW/kgFS6LopG88bzT5UVDZJ8XRcO5uE2g4byJNJw/WbDyVnEiMJGv
3+KpOH4mTTeKkQcTAqm4FElla2dI8Jq177d0gqM/zeeFE5MjpggzzYufHAhD
F8OBbrTDTyaakqDc/Bgtmfl9WrxwtnxepOK0yIvlIxszXag5QrP//UE6vHC6
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
jg07hqVigHzeXurvvStB5CabgH1J6UfZ459U/Hppem1kj7/F4Lhy9s9L7+to
ooUNzCTDdkTTM5WaYFBPe+aQ37ipqLv2MILvzf5XWkDorCUgZESEMDBn7Mbn
ZaJw5P4rJhUEf9+kgvioAY7zX2/2vCowXvuDjwmEg2Qf6/s2XX7rm/S3V5qd
UP4AX8Rz+EOTEJIRCIpVDziH1wFxqeFI+iQ4PwnN/WCdLKsBU5pZLMXZ/1do
/uEKNLdyfgc2ojvRHRmXje2UuBVLG0nJ+z2Wv89YEkBOPR8DjuDRrW/naRcK
xJv/peD8wydkdkwG3kF2t373YUcmdK+sVDihUG9lRaU1/Pn3NG1TMGJwzHRu
qvoE5FdKTxWOvFNG4NkHIP/hXloyQivLCyL9gy4syQrhuaUgzTHyOpG/Y3SQ
YkVEginq9MxR+3AnTfnd5A9OCuqXCn4q76jgGWED3qNYCPD7RyhXWKT5iIf6
hhorkP9h8/vU3nWbJqc72T2boZ2NGK3x/4/z1jbI3xtqoK75R9QbbqLeSDM/
NlPXAr/P0E0L+QeHGykSn6Vs1kf5nI8fvXz4aWzskaD+bT7u3nubahsuc8hS
Ry39HfSwf4BudXVS/USfE/lNa6yw3dShROlBqwfaD/olkQORaYP82LhXmtro
aku7JHqu98/R1YaH6ueeScwd40Xy/lCQF8L1kQgbnJQF/eJxl9VCcEoHHuot
ZNqGHYDp0vn5I8d6M8u22gH/uq9Jo/lpJTRgmwrz1sowqFnVxmKoPzl13ABo
Dtjhvik4wRdGgzA6ghn+QSNNNEG+XbpVUSZthc+sZg+ddjZhOyMUp6Pi+FCI
GgpVr1rneqj5/oanLaoavGLCwWEa6LvHd97Dv0/Ixjg6yAhFB8iOFlhVGWio
kp4rYw6mUj0UKMwy7M9L2gqhCQJ69Mr6cn3i3R+amnINpROzUgrIDP2FJTkq
im8yLY3vLexBqOXPRRa776cXZazlasclJH1UhsdFGz2v8jsZT/7R25+kkXtf
NfM7pxu+Tj/54X8vtQEnF/O+1WOlTMFLStl6LMHefJzuTSWpcS4t+rAzqSzN
pNNslTOUX8uJYU9zvLawUtTpn0p7AALPTCYnmUxkNTHNo8mX5NWZIl82w/51
jtIMV4ulAo0nC+TJFSmwBG230jltDxzZJCvjDnIjOmn3ykXL8psOa1X6LBpn
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
ZovuHpm8idK4N3+/m5MGILZSY+UB32n2M2/r/mOxdSPeMU17W3dJ7a23dVwn
q0ih62f8peDLQfkBaAd3HdiKXlRw6DBOioUWdTQUzDlq2aBEgEUwRrd3mmzd
ZD22d49nR9zk3GOXSr0gR3XBtfdyokB/UOSurvxO/bJSRDHTL7+7ztLQx1Ym
vsheDS7uKHc1YPjXU66K7nUKJ7iW4mF0u4X/h7j3fo48Te/DupAmbprNd7d7
d+SRPJ5I0SVbtH6QS1VSlSmaSRKDSEqkAoOlf8ShytkuW7Jddzs7szu7O3kw
GAwwyEAjZ3QD6ITOSINBbISZ2arXz+cJ7/dtDPYol1T2Dz3ANDp8w/t+nvR5
Pg9zpGwxnka+CULkmVUKGrfzvmwW5c5fdWvxmmPutCxbJeoMQKSj+CBYvfWb
7SIvB7AZipuTHKkCwqH/htkAmH+5tQuGVsmX5Y9Pb4oW3q/I589SMIuC6AEn
wVQS7iLryyCmBcUDEGIBJ09W3apYdtCg0qiVaKXAPUeA9ApUXnKm4mi0BOM9
WmoXy3dXlEliNuF3XbswIL8AYhyOBElDJDKQsV1cHeEKlEbrNpF0tNDGfoUo
KmTMcL0M4E23qQ41l8mado4AZas3XVZItVaHYHZGzIgL0aBidLD7JEOTx1Ak
Eug2Nbqp0hP6rOzGGG9e9BJucUcvko1QyG+kDZ2xDe1LeSG8nld4fZTscndn
Jyn6m3OfjadpwxXJdn3i9YTM5zCYPS0M8Pw4atw6iSxIzDj9hpsI3aXpt8p9
34a7YAcYLdpC+ZYzVq35tKbUjC0Isj4w19IHF3UhIZmG5j/4fRCKAIsDzgli
Ae+tNqkcgPecG/S4eaLUns54PPJVUr9x5W0r5EkusYQ8XOSdvQKHPfG0ofEF
vmpt80X3OLHiupaWaU+Ncxq/xhNmJLDzSl/qoaJAhgbTvYMSuW/SoQIrpRzV
94yCVxEeXr0QbZN+8Q0F6bZE0t2fTZGLiHalFc8whR/6sx6K/7Vg84D3Q5c8
Nl8yMoJiMxxc8BnQeHp/VufqnWcdFJS2sFfb5oWYi00G8kZ3ko6XwJn8J+w/
PA1iF3pIujLkhpaqbqxSFlieibvOsR43NT/gqtV53VkyXo7ZoHRPlp+uXlDq
AXAzSfiJFPDm3qp0Eh4JmUvb4n2pE4sAsu8oyIKTirAdGdbd/axPH3v/4djG
+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\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"cd3b301b-a1c7-4746-acc3-b9dadd091e44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "nums", "]"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.924485078891094*^9, 3.924485081657743*^9}},
 CellLabel->
  "In[641]:=",ExpressionUUID->"6ce8ff9b-a117-4c1b-9ef6-2be30815de02"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{{-1.46, 0.}, {98.5, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.013999999999999999`], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0.5, 0.}, {1.5, 1.39},
          RoundingRadius->0],
         StatusArea[#, 1.39]& ,
         TagBoxNote->"1.39"],
        StyleBox["1.39`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.39, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{1.5, 0.}, {2.5, 3.34},
          RoundingRadius->0],
         StatusArea[#, 3.34]& ,
         TagBoxNote->"3.34"],
        StyleBox["3.34`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.34, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{2.5, 0.}, {3.5, 2.28},
          RoundingRadius->0],
         StatusArea[#, 2.28]& ,
         TagBoxNote->"2.28"],
        StyleBox["2.28`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.28, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{3.5, 0.}, {4.5, 1.39},
          RoundingRadius->0],
         StatusArea[#, 1.39]& ,
         TagBoxNote->"1.39"],
        StyleBox["1.39`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.39, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{4.5, 0.}, {5.5, 3.13},
          RoundingRadius->0],
         StatusArea[#, 3.13]& ,
         TagBoxNote->"3.13"],
        StyleBox["3.13`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.13, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{5.5, 0.}, {6.5, 0.65},
          RoundingRadius->0],
         StatusArea[#, 0.65]& ,
         TagBoxNote->"0.65"],
        StyleBox["0.65`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.65, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{6.5, 0.}, {7.5, 1.43},
          RoundingRadius->0],
         StatusArea[#, 1.43]& ,
         TagBoxNote->"1.43"],
        StyleBox["1.43`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.43, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{7.5, 0.}, {8.5, 4.4},
          RoundingRadius->0],
         StatusArea[#, 4.4]& ,
         TagBoxNote->"4.4"],
        StyleBox["4.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{8.5, 0.}, {9.5, 1.27},
          RoundingRadius->0],
         StatusArea[#, 1.27]& ,
         TagBoxNote->"1.27"],
        StyleBox["1.27`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.27, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{9.5, 0.}, {10.5, 0.97},
          RoundingRadius->0],
         StatusArea[#, 0.97]& ,
         TagBoxNote->"0.97"],
        StyleBox["0.97`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.97, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{10.5, 0.}, {11.5, 4.01},
          RoundingRadius->0],
         StatusArea[#, 4.01]& ,
         TagBoxNote->"4.01"],
        StyleBox["4.01`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.01, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{11.5, 0.}, {12.5, 4.78},
          RoundingRadius->0],
         StatusArea[#, 4.78]& ,
         TagBoxNote->"4.78"],
        StyleBox["4.78`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.78, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{12.5, 0.}, {13.5, 4.22},
          RoundingRadius->0],
         StatusArea[#, 4.22]& ,
         TagBoxNote->"4.22"],
        StyleBox["4.22`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.22, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{13.5, 0.}, {14.5, 2.83},
          RoundingRadius->0],
         StatusArea[#, 2.83]& ,
         TagBoxNote->"2.83"],
        StyleBox["2.83`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.83, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{14.5, 0.}, {15.5, 2.03},
          RoundingRadius->0],
         StatusArea[#, 2.03]& ,
         TagBoxNote->"2.03"],
        StyleBox["2.03`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.03, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{15.5, 0.}, {16.5, 3.31},
          RoundingRadius->0],
         StatusArea[#, 3.31]& ,
         TagBoxNote->"3.31"],
        StyleBox["3.31`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.31, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{16.5, 0.}, {17.5, 2.92},
          RoundingRadius->0],
         StatusArea[#, 2.92]& ,
         TagBoxNote->"2.92"],
        StyleBox["2.92`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.92, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{17.5, 0.}, {18.5, 2.78},
          RoundingRadius->0],
         StatusArea[#, 2.78]& ,
         TagBoxNote->"2.78"],
        StyleBox["2.78`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.78, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{18.5, 0.}, {19.5, 3.61},
          RoundingRadius->0],
         StatusArea[#, 3.61]& ,
         TagBoxNote->"3.61"],
        StyleBox["3.61`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.61, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{19.5, 0.}, {20.5, 3.08},
          RoundingRadius->0],
         StatusArea[#, 3.08]& ,
         TagBoxNote->"3.08"],
        StyleBox["3.08`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.08, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{20.5, 0.}, {21.5, 3.17},
          RoundingRadius->0],
         StatusArea[#, 3.17]& ,
         TagBoxNote->"3.17"],
        StyleBox["3.17`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.17, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{21.5, 0.}, {22.5, 3.85},
          RoundingRadius->0],
         StatusArea[#, 3.85]& ,
         TagBoxNote->"3.85"],
        StyleBox["3.85`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.85, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{22.5, 0.}, {23.5, 4.44},
          RoundingRadius->0],
         StatusArea[#, 4.44]& ,
         TagBoxNote->"4.44"],
        StyleBox["4.44`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.44, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{23.5, 0.}, {24.5, 2.8},
          RoundingRadius->0],
         StatusArea[#, 2.8]& ,
         TagBoxNote->"2.8"],
        StyleBox["2.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{24.5, 0.}, {25.5, 0.93},
          RoundingRadius->0],
         StatusArea[#, 0.93]& ,
         TagBoxNote->"0.93"],
        StyleBox["0.93`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.93, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{25.5, 0.}, {26.5, 2.51},
          RoundingRadius->0],
         StatusArea[#, 2.51]& ,
         TagBoxNote->"2.51"],
        StyleBox["2.51`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.51, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{26.5, 0.}, {27.5, 2.26},
          RoundingRadius->0],
         StatusArea[#, 2.26]& ,
         TagBoxNote->"2.26"],
        StyleBox["2.26`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.26, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{27.5, 0.}, {28.5, 2.19},
          RoundingRadius->0],
         StatusArea[#, 2.19]& ,
         TagBoxNote->"2.19"],
        StyleBox["2.19`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.19, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{28.5, 0.}, {29.5, 1.24},
          RoundingRadius->0],
         StatusArea[#, 1.24]& ,
         TagBoxNote->"1.24"],
        StyleBox["1.24`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.24, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{29.5, 0.}, {30.5, 2.75},
          RoundingRadius->0],
         StatusArea[#, 2.75]& ,
         TagBoxNote->"2.75"],
        StyleBox["2.75`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.75, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{30.5, 0.}, {31.5, 0.85},
          RoundingRadius->0],
         StatusArea[#, 0.85]& ,
         TagBoxNote->"0.85"],
        StyleBox["0.85`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.85, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{31.5, 0.}, {32.5, 2.17},
          RoundingRadius->0],
         StatusArea[#, 2.17]& ,
         TagBoxNote->"2.17"],
        StyleBox["2.17`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.17, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{32.5, 0.}, {33.5, 2.81},
          RoundingRadius->0],
         StatusArea[#, 2.81]& ,
         TagBoxNote->"2.81"],
        StyleBox["2.81`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.81, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{33.5, 0.}, {34.5, 4.39},
          RoundingRadius->0],
         StatusArea[#, 4.39]& ,
         TagBoxNote->"4.39"],
        StyleBox["4.39`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.39, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{34.5, 0.}, {35.5, 3.18},
          RoundingRadius->0],
         StatusArea[#, 3.18]& ,
         TagBoxNote->"3.18"],
        StyleBox["3.18`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.18, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{35.5, 0.}, {36.5, 2.51},
          RoundingRadius->0],
         StatusArea[#, 2.51]& ,
         TagBoxNote->"2.51"],
        StyleBox["2.51`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.51, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{36.5, 0.}, {37.5, 4.33},
          RoundingRadius->0],
         StatusArea[#, 4.33]& ,
         TagBoxNote->"4.33"],
        StyleBox["4.33`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.33, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{37.5, 0.}, {38.5, 0.4},
          RoundingRadius->0],
         StatusArea[#, 0.4]& ,
         TagBoxNote->"0.4"],
        StyleBox["0.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{38.5, 0.}, {39.5, 2.51},
          RoundingRadius->0],
         StatusArea[#, 2.51]& ,
         TagBoxNote->"2.51"],
        StyleBox["2.51`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.51, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{39.5, 0.}, {40.5, 1.8},
          RoundingRadius->0],
         StatusArea[#, 1.8]& ,
         TagBoxNote->"1.8"],
        StyleBox["1.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{40.5, 0.}, {41.5, 5.42},
          RoundingRadius->0],
         StatusArea[#, 5.42]& ,
         TagBoxNote->"5.42"],
        StyleBox["5.42`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5.42, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{41.5, 0.}, {42.5, 2.58},
          RoundingRadius->0],
         StatusArea[#, 2.58]& ,
         TagBoxNote->"2.58"],
        StyleBox["2.58`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.58, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{42.5, 0.}, {43.5, 3.57},
          RoundingRadius->0],
         StatusArea[#, 3.57]& ,
         TagBoxNote->"3.57"],
        StyleBox["3.57`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.57, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{43.5, 0.}, {44.5, 2.4},
          RoundingRadius->0],
         StatusArea[#, 2.4]& ,
         TagBoxNote->"2.4"],
        StyleBox["2.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{44.5, 0.}, {45.5, 2.94},
          RoundingRadius->0],
         StatusArea[#, 2.94]& ,
         TagBoxNote->"2.94"],
        StyleBox["2.94`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.94, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{45.5, 0.}, {46.5, 2.77},
          RoundingRadius->0],
         StatusArea[#, 2.77]& ,
         TagBoxNote->"2.77"],
        StyleBox["2.77`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.77, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{46.5, 0.}, {47.5, 2.12},
          RoundingRadius->0],
         StatusArea[#, 2.12]& ,
         TagBoxNote->"2.12"],
        StyleBox["2.12`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.12, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{47.5, 0.}, {48.5, 2.29},
          RoundingRadius->0],
         StatusArea[#, 2.29]& ,
         TagBoxNote->"2.29"],
        StyleBox["2.29`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.29, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{48.5, 0.}, {49.5, 3.63},
          RoundingRadius->0],
         StatusArea[#, 3.63]& ,
         TagBoxNote->"3.63"],
        StyleBox["3.63`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.63, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{49.5, 0.}, {50.5, 3.78},
          RoundingRadius->0],
         StatusArea[#, 3.78]& ,
         TagBoxNote->"3.78"],
        StyleBox["3.78`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.78, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{50.5, 0.}, {51.5, 2.9},
          RoundingRadius->0],
         StatusArea[#, 2.9]& ,
         TagBoxNote->"2.9"],
        StyleBox["2.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{51.5, 0.}, {52.5, 3.55},
          RoundingRadius->0],
         StatusArea[#, 3.55]& ,
         TagBoxNote->"3.55"],
        StyleBox["3.55`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.55, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{52.5, 0.}, {53.5, 2.38},
          RoundingRadius->0],
         StatusArea[#, 2.38]& ,
         TagBoxNote->"2.38"],
        StyleBox["2.38`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.38, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{53.5, 0.}, {54.5, 4.54},
          RoundingRadius->0],
         StatusArea[#, 4.54]& ,
         TagBoxNote->"4.54"],
        StyleBox["4.54`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.54, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{54.5, 0.}, {55.5, 1.79},
          RoundingRadius->0],
         StatusArea[#, 1.79]& ,
         TagBoxNote->"1.79"],
        StyleBox["1.79`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.79, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{55.5, 0.}, {56.5, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{56.5, 0.}, {57.5, 0.81},
          RoundingRadius->0],
         StatusArea[#, 0.81]& ,
         TagBoxNote->"0.81"],
        StyleBox["0.81`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.81, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{57.5, 0.}, {58.5, 3.32},
          RoundingRadius->0],
         StatusArea[#, 3.32]& ,
         TagBoxNote->"3.32"],
        StyleBox["3.32`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.32, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{58.5, 0.}, {59.5, 1.54},
          RoundingRadius->0],
         StatusArea[#, 1.54]& ,
         TagBoxNote->"1.54"],
        StyleBox["1.54`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.54, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{59.5, 0.}, {60.5, 3.74},
          RoundingRadius->0],
         StatusArea[#, 3.74]& ,
         TagBoxNote->"3.74"],
        StyleBox["3.74`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.74, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{60.5, 0.}, {61.5, 2.91},
          RoundingRadius->0],
         StatusArea[#, 2.91]& ,
         TagBoxNote->"2.91"],
        StyleBox["2.91`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.91, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{61.5, 0.}, {62.5, 3.28},
          RoundingRadius->0],
         StatusArea[#, 3.28]& ,
         TagBoxNote->"3.28"],
        StyleBox["3.28`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.28, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{62.5, 0.}, {63.5, 1.78},
          RoundingRadius->0],
         StatusArea[#, 1.78]& ,
         TagBoxNote->"1.78"],
        StyleBox["1.78`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.78, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{63.5, 0.}, {64.5, 1.13},
          RoundingRadius->0],
         StatusArea[#, 1.13]& ,
         TagBoxNote->"1.13"],
        StyleBox["1.13`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.13, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{64.5, 0.}, {65.5, 3.58},
          RoundingRadius->0],
         StatusArea[#, 3.58]& ,
         TagBoxNote->"3.58"],
        StyleBox["3.58`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.58, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{65.5, 0.}, {66.5, 3.45},
          RoundingRadius->0],
         StatusArea[#, 3.45]& ,
         TagBoxNote->"3.45"],
        StyleBox["3.45`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.45, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{66.5, 0.}, {67.5, 1.42},
          RoundingRadius->0],
         StatusArea[#, 1.42]& ,
         TagBoxNote->"1.42"],
        StyleBox["1.42`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.42, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{67.5, 0.}, {68.5, 3.},
          RoundingRadius->0],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{68.5, 0.}, {69.5, 1.45},
          RoundingRadius->0],
         StatusArea[#, 1.45]& ,
         TagBoxNote->"1.45"],
        StyleBox["1.45`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.45, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{69.5, 0.}, {70.5, 2.18},
          RoundingRadius->0],
         StatusArea[#, 2.18]& ,
         TagBoxNote->"2.18"],
        StyleBox["2.18`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.18, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{70.5, 0.}, {71.5, 1.69},
          RoundingRadius->0],
         StatusArea[#, 1.69]& ,
         TagBoxNote->"1.69"],
        StyleBox["1.69`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.69, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{71.5, 0.}, {72.5, 2.2},
          RoundingRadius->0],
         StatusArea[#, 2.2]& ,
         TagBoxNote->"2.2"],
        StyleBox["2.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{72.5, 0.}, {73.5, 2.81},
          RoundingRadius->0],
         StatusArea[#, 2.81]& ,
         TagBoxNote->"2.81"],
        StyleBox["2.81`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.81, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{73.5, 0.}, {74.5, 2.5},
          RoundingRadius->0],
         StatusArea[#, 2.5]& ,
         TagBoxNote->"2.5"],
        StyleBox["2.5`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{74.5, 0.}, {75.5, 2.79},
          RoundingRadius->0],
         StatusArea[#, 2.79]& ,
         TagBoxNote->"2.79"],
        StyleBox["2.79`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.79, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{75.5, 0.}, {76.5, 2.03},
          RoundingRadius->0],
         StatusArea[#, 2.03]& ,
         TagBoxNote->"2.03"],
        StyleBox["2.03`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.03, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{76.5, 0.}, {77.5, 2.2},
          RoundingRadius->0],
         StatusArea[#, 2.2]& ,
         TagBoxNote->"2.2"],
        StyleBox["2.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{77.5, 0.}, {78.5, 2.68},
          RoundingRadius->0],
         StatusArea[#, 2.68]& ,
         TagBoxNote->"2.68"],
        StyleBox["2.68`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.68, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{78.5, 0.}, {79.5, 1.2},
          RoundingRadius->0],
         StatusArea[#, 1.2]& ,
         TagBoxNote->"1.2"],
        StyleBox["1.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{79.5, 0.}, {80.5, 3.4},
          RoundingRadius->0],
         StatusArea[#, 3.4]& ,
         TagBoxNote->"3.4"],
        StyleBox["3.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{80.5, 0.}, {81.5, 3.79},
          RoundingRadius->0],
         StatusArea[#, 3.79]& ,
         TagBoxNote->"3.79"],
        StyleBox["3.79`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.79, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{81.5, 0.}, {82.5, 2.16},
          RoundingRadius->0],
         StatusArea[#, 2.16]& ,
         TagBoxNote->"2.16"],
        StyleBox["2.16`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.16, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{82.5, 0.}, {83.5, 2.42},
          RoundingRadius->0],
         StatusArea[#, 2.42]& ,
         TagBoxNote->"2.42"],
        StyleBox["2.42`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.42, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{83.5, 0.}, {84.5, 3.39},
          RoundingRadius->0],
         StatusArea[#, 3.39]& ,
         TagBoxNote->"3.39"],
        StyleBox["3.39`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.39, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{84.5, 0.}, {85.5, 2.13},
          RoundingRadius->0],
         StatusArea[#, 2.13]& ,
         TagBoxNote->"2.13"],
        StyleBox["2.13`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.13, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{85.5, 0.}, {86.5, 1.86},
          RoundingRadius->0],
         StatusArea[#, 1.86]& ,
         TagBoxNote->"1.86"],
        StyleBox["1.86`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.86, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{86.5, 0.}, {87.5, 2.1},
          RoundingRadius->0],
         StatusArea[#, 2.1]& ,
         TagBoxNote->"2.1"],
        StyleBox["2.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{87.5, 0.}, {88.5, 3.24},
          RoundingRadius->0],
         StatusArea[#, 3.24]& ,
         TagBoxNote->"3.24"],
        StyleBox["3.24`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.24, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{88.5, 0.}, {89.5, 1.9},
          RoundingRadius->0],
         StatusArea[#, 1.9]& ,
         TagBoxNote->"1.9"],
        StyleBox["1.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{89.5, 0.}, {90.5, 2.05},
          RoundingRadius->0],
         StatusArea[#, 2.05]& ,
         TagBoxNote->"2.05"],
        StyleBox["2.05`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.05, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{90.5, 0.}, {91.5, 2.69},
          RoundingRadius->0],
         StatusArea[#, 2.69]& ,
         TagBoxNote->"2.69"],
        StyleBox["2.69`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.69, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{91.5, 0.}, {92.5, 0.65},
          RoundingRadius->0],
         StatusArea[#, 0.65]& ,
         TagBoxNote->"0.65"],
        StyleBox["0.65`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.65, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{92.5, 0.}, {93.5, 2.88},
          RoundingRadius->0],
         StatusArea[#, 2.88]& ,
         TagBoxNote->"2.88"],
        StyleBox["2.88`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.88, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{93.5, 0.}, {94.5, 2.63},
          RoundingRadius->0],
         StatusArea[#, 2.63]& ,
         TagBoxNote->"2.63"],
        StyleBox["2.63`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.63, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{94.5, 0.}, {95.5, 2.32},
          RoundingRadius->0],
         StatusArea[#, 2.32]& ,
         TagBoxNote->"2.32"],
        StyleBox["2.32`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.32, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{95.5, 0.}, {96.5, 3.29},
          RoundingRadius->0],
         StatusArea[#, 3.29]& ,
         TagBoxNote->"3.29"],
        StyleBox["3.29`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.29, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{96.5, 0.}, {97.5, 2.8},
          RoundingRadius->0],
         StatusArea[#, 2.8]& ,
         TagBoxNote->"2.8"],
        StyleBox["2.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{97.5, 0.}, {98.5, 4.73},
          RoundingRadius->0],
         StatusArea[#, 4.73]& ,
         TagBoxNote->"4.73"],
        StyleBox["4.73`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.73, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], LineBox[{{-1.46, 0.}, {100.4992, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5, 0.}]}], 
         LineBox[{{98.5, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {98.5, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{-1.46, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.9244850824800158`*^9},
 CellLabel->
  "Out[641]=",ExpressionUUID->"bf96c6ec-277c-457b-bde6-e029e55649af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomChoice", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2"}], "}"}], "]"}], ",", " ", "10"}], 
   "]"}], "]"}]], "Input",
 CellLabel->
  "In[653]:=",ExpressionUUID->"8ae8b1e9-78bb-4c52-9d96-6390244fc8a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.924485441328188*^9},
 CellLabel->
  "Out[653]=",ExpressionUUID->"a9104ea6-d414-4f88-ac03-090084e2f6ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"Tooltip", "@@@", 
   RowBox[{"Reverse", "[", 
    RowBox[{"bs", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9244856068147593`*^9, 3.9244856073383617`*^9}, {
  3.924485663153401*^9, 3.9244856643272047`*^9}, {3.924485727532896*^9, 
  3.9244857276630898`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[668]:=",ExpressionUUID->"3be712fb-205b-4853-ad0e-0a6277fd9d6a"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{{-1.46, 0.}, {98.5, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.013999999999999999`], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0.5, 0.}, {1.5, 0.},
            RoundingRadius->0],
           "\"Newark\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Newark", "Tooltip"]& ],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{1.5, 0.}, {2.5, 0.4},
            RoundingRadius->0],
           "\"Lexington\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Lexington", "Tooltip"]& ],
         StatusArea[#, 0.4]& ,
         TagBoxNote->"0.4"],
        StyleBox["0.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{2.5, 0.}, {3.5, 0.65},
            RoundingRadius->0],
           "\"Norfolk\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Norfolk", "Tooltip"]& ],
         StatusArea[#, 0.65]& ,
         TagBoxNote->"0.65"],
        StyleBox["0.65`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.65, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{3.5, 0.}, {4.5, 0.65},
            RoundingRadius->0],
           "\"Orange\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Orange", "Tooltip"]& ],
         StatusArea[#, 0.65]& ,
         TagBoxNote->"0.65"],
        StyleBox["0.65`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.65, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{4.5, 0.}, {5.5, 0.81},
            RoundingRadius->0],
           "\"Albany\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Albany", "Tooltip"]& ],
         StatusArea[#, 0.81]& ,
         TagBoxNote->"0.81"],
        StyleBox["0.81`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.81, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{5.5, 0.}, {6.5, 0.85},
            RoundingRadius->0],
           "\"Honolulu\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Honolulu", "Tooltip"]& ],
         StatusArea[#, 0.85]& ,
         TagBoxNote->"0.85"],
        StyleBox["0.85`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.85, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{6.5, 0.}, {7.5, 0.93},
            RoundingRadius->0],
           "\"Orlando\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Orlando", "Tooltip"]& ],
         StatusArea[#, 0.93]& ,
         TagBoxNote->"0.93"],
        StyleBox["0.93`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.93, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{7.5, 0.}, {8.5, 0.97},
            RoundingRadius->0],
           "\"San Diego\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "San Diego", "Tooltip"]& ],
         StatusArea[#, 0.97]& ,
         TagBoxNote->"0.97"],
        StyleBox["0.97`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.97, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{8.5, 0.}, {9.5, 1.13},
            RoundingRadius->0],
           "\"Durham\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Durham", "Tooltip"]& ],
         StatusArea[#, 1.13]& ,
         TagBoxNote->"1.13"],
        StyleBox["1.13`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.13, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{9.5, 0.}, {10.5, 1.2},
            RoundingRadius->0],
           "\"Charleston\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Charleston", "Tooltip"]& ],
         StatusArea[#, 1.2]& ,
         TagBoxNote->"1.2"],
        StyleBox["1.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{10.5, 0.}, {11.5, 1.24},
            RoundingRadius->0],
           "\"Jacksonville\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Jacksonville", "Tooltip"]& ],
         StatusArea[#, 1.24]& ,
         TagBoxNote->"1.24"],
        StyleBox["1.24`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.24, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{11.5, 0.}, {12.5, 1.27},
            RoundingRadius->0],
           "\"Long Beach\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Long Beach", "Tooltip"]& ],
         StatusArea[#, 1.27]& ,
         TagBoxNote->"1.27"],
        StyleBox["1.27`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.27, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{12.5, 0.}, {13.5, 1.39},
            RoundingRadius->0],
           "\"Birmingham\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Birmingham", "Tooltip"]& ],
         StatusArea[#, 1.39]& ,
         TagBoxNote->"1.39"],
        StyleBox["1.39`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.39, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{13.5, 0.}, {14.5, 1.39},
            RoundingRadius->0],
           "\"Los Angeles\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Los Angeles", "Tooltip"]& ],
         StatusArea[#, 1.39]& ,
         TagBoxNote->"1.39"],
        StyleBox["1.39`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.39, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{14.5, 0.}, {15.5, 1.42},
            RoundingRadius->0],
           "\"Akron\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Akron", "Tooltip"]& ],
         StatusArea[#, 1.42]& ,
         TagBoxNote->"1.42"],
        StyleBox["1.42`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.42, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{15.5, 0.}, {16.5, 1.43},
            RoundingRadius->0],
           "\"Loma Linda\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Loma Linda", "Tooltip"]& ],
         StatusArea[#, 1.43]& ,
         TagBoxNote->"1.43"],
        StyleBox["1.43`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.43, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{16.5, 0.}, {17.5, 1.45},
            RoundingRadius->0],
           "\"Cleveland\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Cleveland", "Tooltip"]& ],
         StatusArea[#, 1.45]& ,
         TagBoxNote->"1.45"],
        StyleBox["1.45`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.45, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{17.5, 0.}, {18.5, 1.54},
            RoundingRadius->0],
           "\"New York City\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "New York City", "Tooltip"]& ],
         StatusArea[#, 1.54]& ,
         TagBoxNote->"1.54"],
        StyleBox["1.54`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.54, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{18.5, 0.}, {19.5, 1.69},
            RoundingRadius->0],
           "\"Cleveland\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Cleveland", "Tooltip"]& ],
         StatusArea[#, 1.69]& ,
         TagBoxNote->"1.69"],
        StyleBox["1.69`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.69, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{19.5, 0.}, {20.5, 1.78},
            RoundingRadius->0],
           "\"Charlotte\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Charlotte", "Tooltip"]& ],
         StatusArea[#, 1.78]& ,
         TagBoxNote->"1.78"],
        StyleBox["1.78`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.78, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{20.5, 0.}, {21.5, 1.79},
            RoundingRadius->0],
           "\"Las Vegas\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Las Vegas", "Tooltip"]& ],
         StatusArea[#, 1.79]& ,
         TagBoxNote->"1.79"],
        StyleBox["1.79`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.79, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{21.5, 0.}, {22.5, 1.8},
            RoundingRadius->0],
           "\"New Orleans\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "New Orleans", "Tooltip"]& ],
         StatusArea[#, 1.8]& ,
         TagBoxNote->"1.8"],
        StyleBox["1.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{22.5, 0.}, {23.5, 1.86},
            RoundingRadius->0],
           "\"Austin\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Austin", "Tooltip"]& ],
         StatusArea[#, 1.86]& ,
         TagBoxNote->"1.86"],
        StyleBox["1.86`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.86, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{23.5, 0.}, {24.5, 1.9},
            RoundingRadius->0],
           "\"Houston\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Houston", "Tooltip"]& ],
         StatusArea[#, 1.9]& ,
         TagBoxNote->"1.9"],
        StyleBox["1.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{24.5, 0.}, {25.5, 2.03},
            RoundingRadius->0],
           "\"Aurora\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Aurora", "Tooltip"]& ],
         StatusArea[#, 2.03]& ,
         TagBoxNote->"2.03"],
        StyleBox["2.03`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.03, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{25.5, 0.}, {26.5, 2.03},
            RoundingRadius->0],
           "\"Pittsburgh\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Pittsburgh", "Tooltip"]& ],
         StatusArea[#, 2.03]& ,
         TagBoxNote->"2.03"],
        StyleBox["2.03`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.03, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{26.5, 0.}, {27.5, 2.05},
            RoundingRadius->0],
           "\"San Antonio\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "San Antonio", "Tooltip"]& ],
         StatusArea[#, 2.05]& ,
         TagBoxNote->"2.05"],
        StyleBox["2.05`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.05, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{27.5, 0.}, {28.5, 2.1},
            RoundingRadius->0],
           "\"Corpus Christi\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Corpus Christi", "Tooltip"]& ],
         StatusArea[#, 2.1]& ,
         TagBoxNote->"2.1"],
        StyleBox["2.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{28.5, 0.}, {29.5, 2.12},
            RoundingRadius->0],
           "\"Grand Rapids\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Grand Rapids", "Tooltip"]& ],
         StatusArea[#, 2.12]& ,
         TagBoxNote->"2.12"],
        StyleBox["2.12`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.12, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{29.5, 0.}, {30.5, 2.13},
            RoundingRadius->0],
           "\"Fort Worth\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Fort Worth", "Tooltip"]& ],
         StatusArea[#, 2.13]& ,
         TagBoxNote->"2.13"],
        StyleBox["2.13`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.13, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{30.5, 0.}, {31.5, 2.16},
            RoundingRadius->0],
           "\"Dallas\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Dallas", "Tooltip"]& ],
         StatusArea[#, 2.16]& ,
         TagBoxNote->"2.16"],
        StyleBox["2.16`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.16, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{31.5, 0.}, {32.5, 2.17},
            RoundingRadius->0],
           "\"Oak Lawn\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Oak Lawn", "Tooltip"]& ],
         StatusArea[#, 2.17]& ,
         TagBoxNote->"2.17"],
        StyleBox["2.17`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.17, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{32.5, 0.}, {33.5, 2.18},
            RoundingRadius->0],
           "\"Columbus\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Columbus", "Tooltip"]& ],
         StatusArea[#, 2.18]& ,
         TagBoxNote->"2.18"],
        StyleBox["2.18`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.18, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{33.5, 0.}, {34.5, 2.19},
            RoundingRadius->0],
           "\"Gainesville\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Gainesville", "Tooltip"]& ],
         StatusArea[#, 2.19]& ,
         TagBoxNote->"2.19"],
        StyleBox["2.19`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.19, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{34.5, 0.}, {35.5, 2.2},
            RoundingRadius->0],
           "\"Danville\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Danville", "Tooltip"]& ],
         StatusArea[#, 2.2]& ,
         TagBoxNote->"2.2"],
        StyleBox["2.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{35.5, 0.}, {36.5, 2.2},
            RoundingRadius->0],
           "\"Oklahoma City\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Oklahoma City", "Tooltip"]& ],
         StatusArea[#, 2.2]& ,
         TagBoxNote->"2.2"],
        StyleBox["2.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{36.5, 0.}, {37.5, 2.26},
            RoundingRadius->0],
           "\"Tampa\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Tampa", "Tooltip"]& ],
         StatusArea[#, 2.26]& ,
         TagBoxNote->"2.26"],
        StyleBox["2.26`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.26, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{37.5, 0.}, {38.5, 2.28},
            RoundingRadius->0],
           "\"Little Rock\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Little Rock", "Tooltip"]& ],
         StatusArea[#, 2.28]& ,
         TagBoxNote->"2.28"],
        StyleBox["2.28`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.28, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{38.5, 0.}, {39.5, 2.29},
            RoundingRadius->0],
           "\"Rochester\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Rochester", "Tooltip"]& ],
         StatusArea[#, 2.29]& ,
         TagBoxNote->"2.29"],
        StyleBox["2.29`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.29, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{39.5, 0.}, {40.5, 2.32},
            RoundingRadius->0],
           "\"Seattle\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Seattle", "Tooltip"]& ],
         StatusArea[#, 2.32]& ,
         TagBoxNote->"2.32"],
        StyleBox["2.32`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.32, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{40.5, 0.}, {41.5, 2.38},
            RoundingRadius->0],
           "\"Kansas City\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Kansas City", "Tooltip"]& ],
         StatusArea[#, 2.38]& ,
         TagBoxNote->"2.38"],
        StyleBox["2.38`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.38, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{41.5, 0.}, {42.5, 2.4},
            RoundingRadius->0],
           "\"Boston\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Boston", "Tooltip"]& ],
         StatusArea[#, 2.4]& ,
         TagBoxNote->"2.4"],
        StyleBox["2.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{42.5, 0.}, {43.5, 2.42},
            RoundingRadius->0],
           "\"San Antonio\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "San Antonio", "Tooltip"]& ],
         StatusArea[#, 2.42]& ,
         TagBoxNote->"2.42"],
        StyleBox["2.42`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.42, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{43.5, 0.}, {44.5, 2.5},
            RoundingRadius->0],
           "\"Portland\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Portland", "Tooltip"]& ],
         StatusArea[#, 2.5]& ,
         TagBoxNote->"2.5"],
        StyleBox["2.5`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{44.5, 0.}, {45.5, 2.51},
            RoundingRadius->0],
           "\"Iowa City\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Iowa City", "Tooltip"]& ],
         StatusArea[#, 2.51]& ,
         TagBoxNote->"2.51"],
        StyleBox["2.51`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.51, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{45.5, 0.}, {46.5, 2.51},
            RoundingRadius->0],
           "\"Miami\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Miami", "Tooltip"]& ],
         StatusArea[#, 2.51]& ,
         TagBoxNote->"2.51"],
        StyleBox["2.51`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.51, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{46.5, 0.}, {47.5, 2.51},
            RoundingRadius->0],
           "\"New Orleans\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "New Orleans", "Tooltip"]& ],
         StatusArea[#, 2.51]& ,
         TagBoxNote->"2.51"],
        StyleBox["2.51`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.51, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{47.5, 0.}, {48.5, 2.58},
            RoundingRadius->0],
           "\"Baltimore\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Baltimore", "Tooltip"]& ],
         StatusArea[#, 2.58]& ,
         TagBoxNote->"2.58"],
        StyleBox["2.58`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.58, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{48.5, 0.}, {49.5, 2.63},
            RoundingRadius->0],
           "\"Charlottesville\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Charlottesville", "Tooltip"]& ],
         StatusArea[#, 2.63]& ,
         TagBoxNote->"2.63"],
        StyleBox["2.63`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.63, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{49.5, 0.}, {50.5, 2.68},
            RoundingRadius->0],
           "\"Hershey\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Hershey", "Tooltip"]& ],
         StatusArea[#, 2.68]& ,
         TagBoxNote->"2.68"],
        StyleBox["2.68`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.68, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{50.5, 0.}, {51.5, 2.69},
            RoundingRadius->0],
           "\"Salt Lake City\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Salt Lake City", "Tooltip"]& ],
         StatusArea[#, 2.69]& ,
         TagBoxNote->"2.69"],
        StyleBox["2.69`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.69, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{51.5, 0.}, {52.5, 2.75},
            RoundingRadius->0],
           "\"Atlanta\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Atlanta", "Tooltip"]& ],
         StatusArea[#, 2.75]& ,
         TagBoxNote->"2.75"],
        StyleBox["2.75`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.75, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{52.5, 0.}, {53.5, 2.77},
            RoundingRadius->0],
           "\"Detroit\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Detroit", "Tooltip"]& ],
         StatusArea[#, 2.77]& ,
         TagBoxNote->"2.77"],
        StyleBox["2.77`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.77, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{53.5, 0.}, {54.5, 2.78},
            RoundingRadius->0],
           "\"Wilmington\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Wilmington", "Tooltip"]& ],
         StatusArea[#, 2.78]& ,
         TagBoxNote->"2.78"],
        StyleBox["2.78`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.78, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{54.5, 0.}, {55.5, 2.79},
            RoundingRadius->0],
           "\"Philadelphia\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Philadelphia", "Tooltip"]& ],
         StatusArea[#, 2.79]& ,
         TagBoxNote->"2.79"],
        StyleBox["2.79`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.79, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{55.5, 0.}, {56.5, 2.8},
            RoundingRadius->0],
           "\"Madison\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Madison", "Tooltip"]& ],
         StatusArea[#, 2.8]& ,
         TagBoxNote->"2.8"],
        StyleBox["2.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{56.5, 0.}, {57.5, 2.8},
            RoundingRadius->0],
           "\"Saint Petersburg\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Saint Petersburg", "Tooltip"]& ],
         StatusArea[#, 2.8]& ,
         TagBoxNote->"2.8"],
        StyleBox["2.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{57.5, 0.}, {58.5, 2.81},
            RoundingRadius->0],
           "\"Chicago\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Chicago", "Tooltip"]& ],
         StatusArea[#, 2.81]& ,
         TagBoxNote->"2.81"],
        StyleBox["2.81`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.81, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{58.5, 0.}, {59.5, 2.81},
            RoundingRadius->0],
           "\"Portland\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Portland", "Tooltip"]& ],
         StatusArea[#, 2.81]& ,
         TagBoxNote->"2.81"],
        StyleBox["2.81`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.81, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{59.5, 0.}, {60.5, 2.83},
            RoundingRadius->0],
           "\"San Francisco\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "San Francisco", "Tooltip"]& ],
         StatusArea[#, 2.83]& ,
         TagBoxNote->"2.83"],
        StyleBox["2.83`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.83, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{60.5, 0.}, {61.5, 2.88},
            RoundingRadius->0],
           "\"Falls Church\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Falls Church", "Tooltip"]& ],
         StatusArea[#, 2.88]& ,
         TagBoxNote->"2.88"],
        StyleBox["2.88`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.88, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{61.5, 0.}, {62.5, 2.9},
            RoundingRadius->0],
           "\"Saint Louis\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Saint Louis", "Tooltip"]& ],
         StatusArea[#, 2.9]& ,
         TagBoxNote->"2.9"],
        StyleBox["2.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{62.5, 0.}, {63.5, 2.91},
            RoundingRadius->0],
           "\"New York City\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "New York City", "Tooltip"]& ],
         StatusArea[#, 2.91]& ,
         TagBoxNote->"2.91"],
        StyleBox["2.91`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.91, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{63.5, 0.}, {64.5, 2.92},
            RoundingRadius->0],
           "\"New Haven\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "New Haven", "Tooltip"]& ],
         StatusArea[#, 2.92]& ,
         TagBoxNote->"2.92"],
        StyleBox["2.92`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.92, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{64.5, 0.}, {65.5, 2.94},
            RoundingRadius->0],
           "\"Ann Arbor\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Ann Arbor", "Tooltip"]& ],
         StatusArea[#, 2.94]& ,
         TagBoxNote->"2.94"],
        StyleBox["2.94`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.94, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{65.5, 0.}, {66.5, 3.},
            RoundingRadius->0],
           "\"Cincinnati\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Cincinnati", "Tooltip"]& ],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{66.5, 0.}, {67.5, 3.08},
            RoundingRadius->0],
           "\"Orlando\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Orlando", "Tooltip"]& ],
         StatusArea[#, 3.08]& ,
         TagBoxNote->"3.08"],
        StyleBox["3.08`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.08, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{67.5, 0.}, {68.5, 3.13},
            RoundingRadius->0],
           "\"Los Angeles\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Los Angeles", "Tooltip"]& ],
         StatusArea[#, 3.13]& ,
         TagBoxNote->"3.13"],
        StyleBox["3.13`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.13, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{68.5, 0.}, {69.5, 3.17},
            RoundingRadius->0],
           "\"Orlando\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Orlando", "Tooltip"]& ],
         StatusArea[#, 3.17]& ,
         TagBoxNote->"3.17"],
        StyleBox["3.17`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.17, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{69.5, 0.}, {70.5, 3.18},
            RoundingRadius->0],
           "\"Indianapolis\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Indianapolis", "Tooltip"]& ],
         StatusArea[#, 3.18]& ,
         TagBoxNote->"3.18"],
        StyleBox["3.18`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.18, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{70.5, 0.}, {71.5, 3.24},
            RoundingRadius->0],
           "\"Dallas\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Dallas", "Tooltip"]& ],
         StatusArea[#, 3.24]& ,
         TagBoxNote->"3.24"],
        StyleBox["3.24`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.24, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{71.5, 0.}, {72.5, 3.28},
            RoundingRadius->0],
           "\"Rochester\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Rochester", "Tooltip"]& ],
         StatusArea[#, 3.28]& ,
         TagBoxNote->"3.28"],
        StyleBox["3.28`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.28, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{72.5, 0.}, {73.5, 3.29},
            RoundingRadius->0],
           "\"Morgantown\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Morgantown", "Tooltip"]& ],
         StatusArea[#, 3.29]& ,
         TagBoxNote->"3.29"],
        StyleBox["3.29`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.29, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{73.5, 0.}, {74.5, 3.31},
            RoundingRadius->0],
           "\"Hartford\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Hartford", "Tooltip"]& ],
         StatusArea[#, 3.31]& ,
         TagBoxNote->"3.31"],
        StyleBox["3.31`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.31, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{74.5, 0.}, {75.5, 3.32},
            RoundingRadius->0],
           "\"New Hyde Park\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "New Hyde Park", "Tooltip"]& ],
         StatusArea[#, 3.32]& ,
         TagBoxNote->"3.32"],
        StyleBox["3.32`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.32, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{75.5, 0.}, {76.5, 3.34},
            RoundingRadius->0],
           "\"Phoenix\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Phoenix", "Tooltip"]& ],
         StatusArea[#, 3.34]& ,
         TagBoxNote->"3.34"],
        StyleBox["3.34`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.34, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{76.5, 0.}, {77.5, 3.39},
            RoundingRadius->0],
           "\"Houston\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Houston", "Tooltip"]& ],
         StatusArea[#, 3.39]& ,
         TagBoxNote->"3.39"],
        StyleBox["3.39`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.39, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{77.5, 0.}, {78.5, 3.4},
            RoundingRadius->0],
           "\"Memphis\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Memphis", "Tooltip"]& ],
         StatusArea[#, 3.4]& ,
         TagBoxNote->"3.4"],
        StyleBox["3.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{78.5, 0.}, {79.5, 3.45},
            RoundingRadius->0],
           "\"Winston\[Hyphen]Salem\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Winston\[Hyphen]Salem", "Tooltip"]& ],
         StatusArea[#, 3.45]& ,
         TagBoxNote->"3.45"],
        StyleBox["3.45`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.45, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{79.5, 0.}, {80.5, 3.55},
            RoundingRadius->0],
           "\"Saint Louis\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Saint Louis", "Tooltip"]& ],
         StatusArea[#, 3.55]& ,
         TagBoxNote->"3.55"],
        StyleBox["3.55`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.55, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{80.5, 0.}, {81.5, 3.57},
            RoundingRadius->0],
           "\"Baltimore\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Baltimore", "Tooltip"]& ],
         StatusArea[#, 3.57]& ,
         TagBoxNote->"3.57"],
        StyleBox["3.57`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.57, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{81.5, 0.}, {82.5, 3.58},
            RoundingRadius->0],
           "\"Chapel Hill\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Chapel Hill", "Tooltip"]& ],
         StatusArea[#, 3.58]& ,
         TagBoxNote->"3.58"],
        StyleBox["3.58`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.58, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{82.5, 0.}, {83.5, 3.61},
            RoundingRadius->0],
           "\"Washington\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Washington", "Tooltip"]& ],
         StatusArea[#, 3.61]& ,
         TagBoxNote->"3.61"],
        StyleBox["3.61`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.61, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{83.5, 0.}, {84.5, 3.63},
            RoundingRadius->0],
           "\"Minneapolis\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Minneapolis", "Tooltip"]& ],
         StatusArea[#, 3.63]& ,
         TagBoxNote->"3.63"],
        StyleBox["3.63`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.63, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{84.5, 0.}, {85.5, 3.74},
            RoundingRadius->0],
           "\"New York City\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "New York City", "Tooltip"]& ],
         StatusArea[#, 3.74]& ,
         TagBoxNote->"3.74"],
        StyleBox["3.74`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.74, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{85.5, 0.}, {86.5, 3.78},
            RoundingRadius->0],
           "\"Jackson\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Jackson", "Tooltip"]& ],
         StatusArea[#, 3.78]& ,
         TagBoxNote->"3.78"],
        StyleBox["3.78`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.78, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{86.5, 0.}, {87.5, 3.79},
            RoundingRadius->0],
           "\"Nashville\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Nashville", "Tooltip"]& ],
         StatusArea[#, 3.79]& ,
         TagBoxNote->"3.79"],
        StyleBox["3.79`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.79, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{87.5, 0.}, {88.5, 3.85},
            RoundingRadius->0],
           "\"Miami\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Miami", "Tooltip"]& ],
         StatusArea[#, 3.85]& ,
         TagBoxNote->"3.85"],
        StyleBox["3.85`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.85, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{88.5, 0.}, {89.5, 4.01},
            RoundingRadius->0],
           "\"Sacramento\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Sacramento", "Tooltip"]& ],
         StatusArea[#, 4.01]& ,
         TagBoxNote->"4.01"],
        StyleBox["4.01`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.01, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{89.5, 0.}, {90.5, 4.22},
            RoundingRadius->0],
           "\"Los Angeles\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Los Angeles", "Tooltip"]& ],
         StatusArea[#, 4.22]& ,
         TagBoxNote->"4.22"],
        StyleBox["4.22`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.22, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{90.5, 0.}, {91.5, 4.33},
            RoundingRadius->0],
           "\"Louisville\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Louisville", "Tooltip"]& ],
         StatusArea[#, 4.33]& ,
         TagBoxNote->"4.33"],
        StyleBox["4.33`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.33, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{91.5, 0.}, {92.5, 4.39},
            RoundingRadius->0],
           "\"Indianapolis\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Indianapolis", "Tooltip"]& ],
         StatusArea[#, 4.39]& ,
         TagBoxNote->"4.39"],
        StyleBox["4.39`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.39, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{92.5, 0.}, {93.5, 4.4},
            RoundingRadius->0],
           "\"Stanford\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Stanford", "Tooltip"]& ],
         StatusArea[#, 4.4]& ,
         TagBoxNote->"4.4"],
        StyleBox["4.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{93.5, 0.}, {94.5, 4.44},
            RoundingRadius->0],
           "\"Hollywood\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Hollywood", "Tooltip"]& ],
         StatusArea[#, 4.44]& ,
         TagBoxNote->"4.44"],
        StyleBox["4.44`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.44, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{94.5, 0.}, {95.5, 4.54},
            RoundingRadius->0],
           "\"Omaha\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Omaha", "Tooltip"]& ],
         StatusArea[#, 4.54]& ,
         TagBoxNote->"4.54"],
        StyleBox["4.54`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.54, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{95.5, 0.}, {96.5, 4.73},
            RoundingRadius->0],
           "\"Milwaukee\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Milwaukee", "Tooltip"]& ],
         StatusArea[#, 4.73]& ,
         TagBoxNote->"4.73"],
        StyleBox["4.73`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.73, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{96.5, 0.}, {97.5, 4.78},
            RoundingRadius->0],
           "\"Sacramento\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Sacramento", "Tooltip"]& ],
         StatusArea[#, 4.78]& ,
         TagBoxNote->"4.78"],
        StyleBox["4.78`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.78, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.013999999999999999`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{97.5, 0.}, {98.5, 5.42},
            RoundingRadius->0],
           "\"Portland\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Portland", "Tooltip"]& ],
         StatusArea[#, 5.42]& ,
         TagBoxNote->"5.42"],
        StyleBox["5.42`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5.42, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], LineBox[{{-1.46, 0.}, {100.4992, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5, 0.}]}], 
        LineBox[{{98.5, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {98.5, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{-1.46, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{465.004028320311, Automatic},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.9244854446842*^9, 3.9244856098089743`*^9, {3.924485645121392*^9, 
   3.924485664994189*^9}, 3.924485728290489*^9},
 CellLabel->
  "Out[668]=",ExpressionUUID->"51a65484-e372-4f52-a012-7db08ffdc1ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomChoice", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2"}], "}"}], "]"}], ",", " ", "10"}], 
   "]"}], "]"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.924485229220749*^9, 3.9244852823182592`*^9}, {
  3.924485326676409*^9, 3.924485340806583*^9}},
 CellLabel->
  "In[652]:=",ExpressionUUID->"b53abc1a-792e-48b3-a96f-db4b51059772"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.924485252255397*^9, 3.924485341104868*^9}, 
   3.924485427487567*^9},
 CellLabel->
  "Out[652]=",ExpressionUUID->"ee5a6790-c793-4eee-92cf-f3643275270d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.924485405437582*^9, 3.924485409047777*^9}},
 CellLabel->
  "In[651]:=",ExpressionUUID->"eccce545-3d27-4902-ba59-b177962b1b7a"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.6142316096139839, 0.}, {7.2319737800437, 
     0.}}]}, {{}, {{{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           
           TagBox[RectangleBox[{0.7439912600145666, 0.}, {1.64639475600874, 2.},
             
             RoundingRadius->0],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           
           TagBox[RectangleBox[{1.7439912600145666, 0.}, {2.64639475600874, 5.},
             
             RoundingRadius->0],
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           
           TagBox[RectangleBox[{3.0367807720320465, 0.}, {3.93918426802622, 0.},
             
             RoundingRadius->0],
            StatusArea[#, 0]& ,
            TagBoxNote->"0"],
           StyleBox["0", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           
           TagBox[RectangleBox[{4.0367807720320465, 0.}, {4.93918426802622, 2.},
             
             RoundingRadius->0],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           
           TagBox[RectangleBox[{5.3295702840495265, 0.}, {6.2319737800437, 1.},
             
             RoundingRadius->0],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           
           TagBox[RectangleBox[{6.3295702840495265, 0.}, {7.2319737800437, 3.},
             
             RoundingRadius->0],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, 
   
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.6142316096139839, 0.}, {7.364328623452294, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.7439912600145666, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.7439912600145666, 0.}]}],
          LineBox[{{7.2319737800437, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {7.2319737800437, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{2.64639475600874, 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {2.64639475600874, 0.}]}],
            LineBox[{{3.0367807720320465`, 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {3.0367807720320465`, 
              0.}]}], LineBox[{{4.93918426802622, 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {4.93918426802622, 0.}]}],
            LineBox[{{5.3295702840495265`, 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {5.3295702840495265`, 
              0.}]}]}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.6142316096139839, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.924485409544029*^9},
 CellLabel->
  "Out[651]=",ExpressionUUID->"8c7ca099-6e75-4593-bc3a-68e2ebc93747"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", "False", 
  "]"}]], "Code",
 CellChangeTimes->{{3.924485290720166*^9, 3.924485305299848*^9}},
 CellLabel->
  "In[645]:=",ExpressionUUID->"975ab168-d3b8-4f62-9f46-bce763854ff6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experimenting 2", "Section",
 CellChangeTimes->{{3.9244788034195004`*^9, 
  3.924478811160108*^9}},ExpressionUUID->"e4a716f6-3a47-4d70-9d01-\
b326381c61d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"states", " ", "=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      TemplateBox[{"\"abbreviation\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"AdministrativeDivision\"", ",", 
            "\"StateAbbreviation\""}], "]"}], 
        "\"EntityProperty[\\\"AdministrativeDivision\\\", \
\\\"StateAbbreviation\\\"]\""},
       "EntityProperty"], "]"}], "&"}], ",", 
    RowBox[{"EntityList", "[", 
     TemplateBox[{"\"all US states with District of Columbia\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{"\"AdministrativeDivision\"", ",", "\"AllUSStatesPlusDC\""}],
          "]"}], "\"EntityClass[\\\"AdministrativeDivision\\\", \
\\\"AllUSStatesPlusDC\\\"]\"", "\"administrative divisions\""},
      "EntityClass"], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9244733752666817`*^9, 3.924473444452532*^9}, {
  3.924473510892555*^9, 3.924473537604762*^9}, {3.92448020399721*^9, 
  3.924480205254387*^9}},
 NumberMarks->False,
 CellLabel->
  "In[486]:=",ExpressionUUID->"8b51a8b9-c732-4d42-b40c-82e744973a36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AL\"\>", ",", "\<\"AK\"\>", ",", "\<\"AZ\"\>", 
   ",", "\<\"AR\"\>", ",", "\<\"CA\"\>", ",", "\<\"CO\"\>", ",", "\<\"CT\"\>",
    ",", "\<\"DE\"\>", ",", "\<\"DC\"\>", ",", "\<\"FL\"\>", 
   ",", "\<\"GA\"\>", ",", "\<\"HI\"\>", ",", "\<\"ID\"\>", ",", "\<\"IL\"\>",
    ",", "\<\"IN\"\>", ",", "\<\"IA\"\>", ",", "\<\"KS\"\>", 
   ",", "\<\"KY\"\>", ",", "\<\"LA\"\>", ",", "\<\"ME\"\>", ",", "\<\"MD\"\>",
    ",", "\<\"MA\"\>", ",", "\<\"MI\"\>", ",", "\<\"MN\"\>", 
   ",", "\<\"MS\"\>", ",", "\<\"MO\"\>", ",", "\<\"MT\"\>", ",", "\<\"NE\"\>",
    ",", "\<\"NV\"\>", ",", "\<\"NH\"\>", ",", "\<\"NJ\"\>", 
   ",", "\<\"NM\"\>", ",", "\<\"NY\"\>", ",", "\<\"NC\"\>", ",", "\<\"ND\"\>",
    ",", "\<\"OH\"\>", ",", "\<\"OK\"\>", ",", "\<\"OR\"\>", 
   ",", "\<\"PA\"\>", ",", "\<\"RI\"\>", ",", "\<\"SC\"\>", ",", "\<\"SD\"\>",
    ",", "\<\"TN\"\>", ",", "\<\"TX\"\>", ",", "\<\"UT\"\>", 
   ",", "\<\"VT\"\>", ",", "\<\"VA\"\>", ",", "\<\"WA\"\>", ",", "\<\"WV\"\>",
    ",", "\<\"WI\"\>", ",", "\<\"WY\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.924479102725396*^9, 3.924480205720151*^9},
 CellLabel->
  "Out[486]=",ExpressionUUID->"52ec4eec-b565-40dc-9621-5503f8289fd7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"stateLinks", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=NY\>\"",
     ",", " ", "\"\<Hyperlinks\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924468296866825*^9, 3.9244683620483437`*^9}, {
  3.9244684607973003`*^9, 3.924468558106536*^9}, {3.924468588685954*^9, 
  3.9244685891581573`*^9}, {3.924469705278837*^9, 3.924469713726413*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"0ceb0e2a-f56e-4d1d-a19d-8c42799e110b"],

Cell[BoxData[
 RowBox[{"stateFacLinks", " ", "=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"stateLinks", ",", " ", 
    RowBox[{
     RowBox[{"StringContainsQ", "[", 
      RowBox[{"#", ",", " ", "\"\<congenital\>\""}], "]"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9244685939279413`*^9, 3.924468682458469*^9}, {
  3.92446872328195*^9, 3.9244687283852787`*^9}, {3.924469732167056*^9, 
  3.924469764787463*^9}, {3.9244793740840063`*^9, 3.9244793750534563`*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"8d28b43c-712a-4536-967c-1f72efcd7f95"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stateXML", "  ", "=", "  ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=NY\>\"\
", ",", " ", "\"\<XMLObject\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9244772629658403`*^9, 3.924477265552891*^9}, 
   3.924477325565336*^9, {3.924478367513858*^9, 3.924478369889945*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"dd2883e5-4462-4617-a417-9a26b3ecf7d1"],

Cell[BoxData[
 RowBox[{"stateLocXML", " ", "=", " ", 
  RowBox[{"Cases", "[", 
   RowBox[{"stateXML", ",", "  ", 
    RowBox[{"XMLElement", "[", 
     RowBox[{"\"\<div\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<search--location\>\""}], 
       "}"}], ",", 
      RowBox[{"{", "_String", "}"}]}], "]"}], ",", "  ", "Infinity"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9244773268438683`*^9, 3.924477336542777*^9}, {
  3.924477425173627*^9, 3.9244775195483*^9}, {3.9244781377755623`*^9, 
  3.9244781616675797`*^9}, {3.924478224868944*^9, 3.924478244853006*^9}, {
  3.92447833159553*^9, 3.924478345235979*^9}, {3.924478375471911*^9, 
  3.924478385797607*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"4c34b07c-ec7c-44fc-a78c-780155234143"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"locs", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Last", "[", 
      RowBox[{"Last", "[", "#1", "]"}], "]"}], " ", "&"}], " ", ")"}], " ", "/@",
    " ", "stateLocXML"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.924478388839332*^9, 3.924478412955799*^9}, {
   3.924478562654984*^9, 3.924478578791733*^9}, {3.924478721391107*^9, 
   3.924478746042761*^9}, 3.924478941619269*^9},
 FormatType->"InputForm",
 FontWeight->"Plain",
 CellLabel->
  "In[474]:=",ExpressionUUID->"6d2cd223-fae9-4a0a-9dd1-85d70eb6668b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Albany, New York\"\>", ",", "\<\"New Hyde Park, New York\"\>", 
   ",", "\<\"New York, New York\"\>", ",", "\<\"New York, New York\"\>", 
   ",", "\<\"New York, New York\"\>", ",", "\<\"New York, New York\"\>", 
   ",", "\<\"Rochester, New York\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.9244789101763687`*^9, 3.924478946000291*^9},
 CellLabel->
  "Out[474]=",ExpressionUUID->"e9d5306b-916e-4ee0-add2-6ca7a8d55662"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"getStateLink", "[", "state_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "stateLinks", ",", "conLinks", ",", "xml", ",", "locXML", ",", "locs"}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"stateLinks", " ", "=", " ", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
        "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=\>\
\"", "<>", "state"}], ",", "\"\<Hyperlinks\>\""}], "]"}]}], ";", "\n", 
     RowBox[{"Pause", "[", "1", "]"}], ";", "\n", 
     RowBox[{"conLinks", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"stateLinks", ",", " ", 
        RowBox[{
         RowBox[{"StringContainsQ", "[", 
          RowBox[{"#1", ",", "\"\<congenital\>\""}], "]"}], "&"}]}], "]"}]}], 
     ";", "\n", 
     RowBox[{"xml", "  ", "=", "  ", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
        "\"\<https://publicreporting.sts.org/chsd?title=&field_state_value=\>\
\"", "<>", "state"}], ",", " ", "\"\<XMLObject\>\""}], "]"}]}], ";", "\n", 
     RowBox[{"locXML", " ", "=", " ", 
      RowBox[{"Cases", "[", 
       RowBox[{"xml", ",", "  ", 
        RowBox[{"XMLElement", "[", 
         RowBox[{"\"\<div\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<search--location\>\""}], 
           "}"}], ",", 
          RowBox[{"{", "_String", "}"}]}], "]"}], ",", "  ", "Infinity"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"locs", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"Last", "[", "#1", "]"}], "]"}], " ", "&"}], " ", ")"}], 
       " ", "/@", " ", "locXML"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{"conLinks", ",", " ", "locs"}], "}"}]}]}], "\n", 
   "]"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.9244791830918217`*^9, 3.924479190699448*^9}, {
   3.92447924967704*^9, 3.924479379399721*^9}, {3.9244794172503443`*^9, 
   3.9244795582344837`*^9}, {3.9244795943103313`*^9, 
   3.9244796403055143`*^9}, {3.924479679480857*^9, 3.924479751907526*^9}, {
   3.924479799766535*^9, 3.924479812726883*^9}, {3.924479854759853*^9, 
   3.924479867261799*^9}, {3.924479897806383*^9, 3.9244799013366537`*^9}, {
   3.924479948281798*^9, 3.924479981326689*^9}, 3.924480077188056*^9},
 CellLabel->
  "In[482]:=",ExpressionUUID->"59352f7d-8846-4607-8f8f-92d53f26e265"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ny", " ", "=", " ", 
  RowBox[{"getStateLink", "[", "\"\<NY\>\"", "]"}]}]], "Code",
 CellChangeTimes->{{3.924479905746356*^9, 3.924479921900316*^9}, {
  3.924480119646329*^9, 3.924480122967086*^9}},
 CellLabel->
  "In[484]:=",ExpressionUUID->"eb782142-bbd4-4313-ab4d-10bd7c0b6b91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"https://publicreporting.sts.org/congenital/50127\"\>", 
     ",", "\<\"https://publicreporting.sts.org/congenital/50119\"\>", 
     ",", "\<\"https://publicreporting.sts.org/congenital/50075\"\>", 
     ",", "\<\"https://publicreporting.sts.org/congenital/50063\"\>", 
     ",", "\<\"https://publicreporting.sts.org/congenital/50097\"\>", 
     ",", "\<\"https://publicreporting.sts.org/congenital/50006\"\>", 
     ",", "\<\"https://publicreporting.sts.org/congenital/50082\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Albany, New York\"\>", 
     ",", "\<\"New Hyde Park, New York\"\>", 
     ",", "\<\"New York, New York\"\>", ",", "\<\"New York, New York\"\>", 
     ",", "\<\"New York, New York\"\>", ",", "\<\"New York, New York\"\>", 
     ",", "\<\"Rochester, New York\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.924479923121603*^9, 3.924479989802885*^9, 
  3.9244800851398373`*^9, 3.924480125152866*^9},
 CellLabel->
  "Out[484]=",ExpressionUUID->"fb69df59-9298-462a-b7ea-49f172729e93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dc", " ", "=", " ", 
  RowBox[{"getStateLink", "[", "\"\<DC\>\"", "]"}]}]], "Code",
 CellChangeTimes->{{3.924480125325436*^9, 3.924480135389957*^9}},
 CellLabel->
  "In[485]:=",ExpressionUUID->"efbeab8f-eb72-4ec9-a168-2216a65eb981"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "{", "\<\"https://publicreporting.sts.org/congenital/50107\"\>", "}"}], 
   ",", 
   RowBox[{"{", "\<\"Washington, District of Columbia\"\>", "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9244801383082247`*^9},
 CellLabel->
  "Out[485]=",ExpressionUUID->"2e9e3592-12a2-4de9-b71c-527784f977dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linksAndLocs", " ", "=", " ", 
  RowBox[{"getStateLink", " ", "/@", " ", "states"}]}]], "Code",
 CellChangeTimes->{{3.924480188994404*^9, 3.924480220926002*^9}},
 CellLabel->
  "In[487]:=",ExpressionUUID->"7bdfcacc-4641-4ced-8e58-96fa94d3a5b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/index.php/congenital/50087\"\>\
", "}"}], ",", 
     RowBox[{"{", "\<\"Birmingham, Alabama\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50102\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Phoenix, Arizona\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50050\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Little Rock, Arkansas\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50110\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50016\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50025\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50004\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50106\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50158\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50008\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50059\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50109\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50080\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50134\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Los Angeles, California\"\>", 
       ",", "\<\"Los Angeles, California\"\>", 
       ",", "\<\"Orange, California\"\>", 
       ",", "\<\"Loma Linda, California\"\>", 
       ",", "\<\"Stanford, California\"\>", 
       ",", "\<\"Long Beach, California\"\>", 
       ",", "\<\"San Diego, California\"\>", 
       ",", "\<\"Sacramento, California\"\>", 
       ",", "\<\"Sacramento, California\"\>", 
       ",", "\<\"Los Angeles, California\"\>", 
       ",", "\<\"San Francisco, California\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50009\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Aurora, Colorado\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50142\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50074\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Hartford, Connecticut\"\>", 
       ",", "\<\"New Haven, Connecticut\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50067\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Wilmington, Delaware\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50107\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Washington, District of Columbia\"\>", "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50049\"\>", 
       ",", "\<\"https://publicreporting.sts.org/index.php/congenital/50140\"\
\>", ",", \
"\<\"https://publicreporting.sts.org/index.php/congenital/50039\"\>", 
       ",", "\<\"https://publicreporting.sts.org/index.php/congenital/50070\"\
\>", ",", \
"\<\"https://publicreporting.sts.org/index.php/congenital/51007\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50157\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50003\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50148\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50038\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50044\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Orlando, Florida\"\>", ",", "\<\"Orlando, Florida\"\>", 
       ",", "\<\"Miami, Florida\"\>", ",", "\<\"Hollywood, Florida\"\>", 
       ",", "\<\"St. Petersburg, Florida\"\>", 
       ",", "\<\"Orlando, Florida\"\>", ",", "\<\"Miami, Florida\"\>", 
       ",", "\<\"Tampa, Florida\"\>", ",", "\<\"Gainesville, Florida\"\>", 
       ",", "\<\"Jacksonville, Florida\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50001\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Atlanta, Georgia\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50101\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Honolulu, Hawaii\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50150\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50005\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Oak Lawn, Illinois\"\>", 
       ",", "\<\"Chicago, Illinois\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50156\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50104\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Indianapolis, Indiana\"\>", 
       ",", "\<\"Indianapolis, Indiana\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50079\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Iowa City, Iowa\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50062\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50108\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Louisville, Kentucky\"\>", 
       ",", "\<\"Lexington, Kentucky\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50098\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50041\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"New Orleans, Louisiana\"\>", 
       ",", "\<\"New Orleans, Louisiana\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50014\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Portland, Maine\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50020\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50129\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Baltimore, Maryland\"\>", 
       ",", "\<\"Baltimore, Maryland\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50054\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Boston, Massachusetts\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50065\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50024\"\>", 
       ",", "\<\"https://publicreporting.sts.org/index.php/congenital/50022\"\
\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Ann Arbor, Michigan\"\>", ",", "\<\"Detroit, Michigan\"\>",
        ",", "\<\"Grand Rapids, Michigan\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/51002\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50135\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Rochester, Minnesota\"\>", 
       ",", "\<\"Minneapolis, Minnesota\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50099\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Jackson, Mississippi\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50132\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50078\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50083\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"St. Louis, Missouri\"\>", 
       ",", "\<\"St. Louis, Missouri\"\>", 
       ",", "\<\"Kansas City, Missouri\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50017\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Omaha, Nebraska\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/index.php/congenital/50137\"\>\
", "}"}], ",", 
     RowBox[{"{", "\<\"Las Vegas, Nevada\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50161\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Newark, New Jersey\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50127\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50119\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50075\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50063\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50097\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50006\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50082\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Albany, New York\"\>", 
       ",", "\<\"New Hyde Park, New York\"\>", 
       ",", "\<\"New York, New York\"\>", ",", "\<\"New York, New York\"\>", 
       ",", "\<\"New York, New York\"\>", ",", "\<\"New York, New York\"\>", 
       ",", "\<\"Rochester, New York\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50081\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50064\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50045\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50121\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Charlotte, North Carolina\"\>", 
       ",", "\<\"Durham, North Carolina\"\>", 
       ",", "\<\"Chapel Hill, North Carolina\"\>", 
       ",", "\<\"Winston Salem, North Carolina\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50023\"\>", 
       ",", "\<\"https://publicreporting.sts.org/index.php/congenital/50010\"\
\>", ",", \
"\<\"https://publicreporting.sts.org/index.php/congenital/50092\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50021\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50015\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Akron, Ohio\"\>", ",", "\<\"Cincinnati, Ohio\"\>", 
       ",", "\<\"Cleveland, Ohio\"\>", ",", "\<\"Columbus, Ohio\"\>", 
       ",", "\<\"Cleveland, Ohio\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50068\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Oklahoma City, Oklahoma\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50057\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50094\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Portland, Oregon\"\>", ",", "\<\"Portland, Oregon\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50007\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50051\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50012\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50071\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Philadelphia, Pennsylvania\"\>", 
       ",", "\<\"Pittsburgh, Pennsylvania\"\>", 
       ",", "\<\"Danville, Pennsylvania\"\>", 
       ",", "\<\"Hershey, Pennsylvania\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50072\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Charleston, South Carolina\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50095\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50073\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Memphis, Tennessee\"\>", 
       ",", "\<\"Nashville, Tennessee\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50117\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50146\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50114\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50037\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50042\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50133\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50048\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50060\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50089\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Dallas, Texas\"\>", ",", "\<\"San Antonio, Texas\"\>", 
       ",", "\<\"Houston, Texas\"\>", ",", "\<\"Fort Worth, Texas\"\>", 
       ",", "\<\"Austin, Texas\"\>", ",", "\<\"Corpus Christi, Texas\"\>", 
       ",", "\<\"Dallas, Texas\"\>", ",", "\<\"Houston, Texas\"\>", 
       ",", "\<\"San Antonio, Texas\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/congenital/50090\"\>", "}"}], 
     ",", 
     RowBox[{"{", "\<\"Salt Lake City, Utah\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/51112\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50086\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50077\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50036\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Richmond, Virginia\"\>", ",", "\<\"Norfolk, Virginia\"\>", 
       ",", "\<\"Falls Church, Virginia\"\>", 
       ",", "\<\"Charlottesville, Virginia\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50046\"\>", 
       ",", "\<\"https://publicreporting.sts.org/index.php/congenital/50126\"\
\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Spokane, Washington\"\>", 
       ",", "\<\"Seattle, Washington\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "{", "\<\"https://publicreporting.sts.org/index.php/congenital/50124\"\>\
", "}"}], ",", 
     RowBox[{"{", "\<\"Morgantown, West Virginia\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"https://publicreporting.sts.org/congenital/50069\"\>", 
       ",", "\<\"https://publicreporting.sts.org/congenital/50056\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Madison, Wisconsin\"\>", 
       ",", "\<\"Milwaukee, Wisconsin\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.924480320192305*^9},
 CellLabel->
  "Out[487]=",ExpressionUUID->"a7709cc8-ee36-4b59-98d0-9d0ef3e4cbb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "linksAndLocs", "]"}]], "Code",
 CellChangeTimes->{{3.92448038459453*^9, 3.924480388234248*^9}, {
  3.924480423811912*^9, 3.9244804391738033`*^9}, {3.9244806319013968`*^9, 
  3.9244806353386183`*^9}, {3.924480690311837*^9, 3.924480720868114*^9}},
 CellLabel->
  "In[496]:=",ExpressionUUID->"c26414e7-fe25-47d1-a386-66d3e52e2d9a"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/index.php/congenital/50087\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Birmingham, Alabama\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50102\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Phoenix, Arizona\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50050\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Little Rock, Arkansas\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50110\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50016\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50025\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50004\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50106\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50158\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50008\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50059\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50109\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50080\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50134\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Los Angeles, California\"\>"},
       {"\<\"Los Angeles, California\"\>"},
       {"\<\"Orange, California\"\>"},
       {"\<\"Loma Linda, California\"\>"},
       {"\<\"Stanford, California\"\>"},
       {"\<\"Long Beach, California\"\>"},
       {"\<\"San Diego, California\"\>"},
       {"\<\"Sacramento, California\"\>"},
       {"\<\"Sacramento, California\"\>"},
       {"\<\"Los Angeles, California\"\>"},
       {"\<\"San Francisco, California\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50009\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Aurora, Colorado\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50142\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50074\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Hartford, Connecticut\"\>"},
       {"\<\"New Haven, Connecticut\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50067\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Wilmington, Delaware\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50107\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Washington, District of Columbia\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50049\"\>"},
       {"\<\"https://publicreporting.sts.org/index.php/congenital/50140\"\>"},\

       {"\<\"https://publicreporting.sts.org/index.php/congenital/50039\"\>"},
       
       {"\<\"https://publicreporting.sts.org/index.php/congenital/50070\"\>"},\

       {"\<\"https://publicreporting.sts.org/index.php/congenital/51007\"\>"},\

       {"\<\"https://publicreporting.sts.org/congenital/50157\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50003\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50148\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50038\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50044\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Orlando, Florida\"\>"},
       {"\<\"Orlando, Florida\"\>"},
       {"\<\"Miami, Florida\"\>"},
       {"\<\"Hollywood, Florida\"\>"},
       {"\<\"St. Petersburg, Florida\"\>"},
       {"\<\"Orlando, Florida\"\>"},
       {"\<\"Miami, Florida\"\>"},
       {"\<\"Tampa, Florida\"\>"},
       {"\<\"Gainesville, Florida\"\>"},
       {"\<\"Jacksonville, Florida\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50001\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Atlanta, Georgia\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50101\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Honolulu, Hawaii\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50150\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50005\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Oak Lawn, Illinois\"\>"},
       {"\<\"Chicago, Illinois\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50156\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50104\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Indianapolis, Indiana\"\>"},
       {"\<\"Indianapolis, Indiana\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50079\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Iowa City, Iowa\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50062\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50108\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Louisville, Kentucky\"\>"},
       {"\<\"Lexington, Kentucky\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50098\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50041\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"New Orleans, Louisiana\"\>"},
       {"\<\"New Orleans, Louisiana\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50014\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Portland, Maine\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50020\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50129\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Baltimore, Maryland\"\>"},
       {"\<\"Baltimore, Maryland\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50054\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Boston, Massachusetts\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50065\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50024\"\>"},
       {"\<\"https://publicreporting.sts.org/index.php/congenital/50022\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Ann Arbor, Michigan\"\>"},
       {"\<\"Detroit, Michigan\"\>"},
       {"\<\"Grand Rapids, Michigan\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/51002\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50135\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Rochester, Minnesota\"\>"},
       {"\<\"Minneapolis, Minnesota\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50099\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Jackson, Mississippi\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50132\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50078\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50083\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"St. Louis, Missouri\"\>"},
       {"\<\"St. Louis, Missouri\"\>"},
       {"\<\"Kansas City, Missouri\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50017\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Omaha, Nebraska\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/index.php/congenital/50137\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Las Vegas, Nevada\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50161\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Newark, New Jersey\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50127\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50119\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50075\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50063\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50097\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50006\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50082\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Albany, New York\"\>"},
       {"\<\"New Hyde Park, New York\"\>"},
       {"\<\"New York, New York\"\>"},
       {"\<\"New York, New York\"\>"},
       {"\<\"New York, New York\"\>"},
       {"\<\"New York, New York\"\>"},
       {"\<\"Rochester, New York\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50081\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50064\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50045\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50121\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Charlotte, North Carolina\"\>"},
       {"\<\"Durham, North Carolina\"\>"},
       {"\<\"Chapel Hill, North Carolina\"\>"},
       {"\<\"Winston Salem, North Carolina\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50023\"\>"},
       {"\<\"https://publicreporting.sts.org/index.php/congenital/50010\"\>"},\

       {"\<\"https://publicreporting.sts.org/index.php/congenital/50092\"\>"},\

       {"\<\"https://publicreporting.sts.org/congenital/50021\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50015\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Akron, Ohio\"\>"},
       {"\<\"Cincinnati, Ohio\"\>"},
       {"\<\"Cleveland, Ohio\"\>"},
       {"\<\"Columbus, Ohio\"\>"},
       {"\<\"Cleveland, Ohio\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50068\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Oklahoma City, Oklahoma\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50057\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50094\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Portland, Oregon\"\>"},
       {"\<\"Portland, Oregon\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50007\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50051\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50012\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50071\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Philadelphia, Pennsylvania\"\>"},
       {"\<\"Pittsburgh, Pennsylvania\"\>"},
       {"\<\"Danville, Pennsylvania\"\>"},
       {"\<\"Hershey, Pennsylvania\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50072\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Charleston, South Carolina\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50095\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50073\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Memphis, Tennessee\"\>"},
       {"\<\"Nashville, Tennessee\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50117\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50146\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50114\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50037\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50042\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50133\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50048\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50060\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50089\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Dallas, Texas\"\>"},
       {"\<\"San Antonio, Texas\"\>"},
       {"\<\"Houston, Texas\"\>"},
       {"\<\"Fort Worth, Texas\"\>"},
       {"\<\"Austin, Texas\"\>"},
       {"\<\"Corpus Christi, Texas\"\>"},
       {"\<\"Dallas, Texas\"\>"},
       {"\<\"Houston, Texas\"\>"},
       {"\<\"San Antonio, Texas\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50090\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Salt Lake City, Utah\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/51112\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50086\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50077\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50036\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Richmond, Virginia\"\>"},
       {"\<\"Norfolk, Virginia\"\>"},
       {"\<\"Falls Church, Virginia\"\>"},
       {"\<\"Charlottesville, Virginia\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50046\"\>"},
       {"\<\"https://publicreporting.sts.org/index.php/congenital/50126\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Spokane, Washington\"\>"},
       {"\<\"Seattle, Washington\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/index.php/congenital/50124\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Morgantown, West Virginia\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"https://publicreporting.sts.org/congenital/50069\"\>"},
       {"\<\"https://publicreporting.sts.org/congenital/50056\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"Madison, Wisconsin\"\>"},
       {"\<\"Milwaukee, Wisconsin\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"\"\>", "\<\"\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{{
     "https://publicreporting.sts.org/index.php/congenital/50087"}, {
     "Birmingham, Alabama"}}, {{}, {}}, {{
     "https://publicreporting.sts.org/congenital/50102"}, {
     "Phoenix, Arizona"}}, {{
     "https://publicreporting.sts.org/congenital/50050"}, {
     "Little Rock, Arkansas"}}, {{
     "https://publicreporting.sts.org/congenital/50110", 
      "https://publicreporting.sts.org/congenital/50016", 
      "https://publicreporting.sts.org/congenital/50025", 
      "https://publicreporting.sts.org/congenital/50004", 
      "https://publicreporting.sts.org/congenital/50106", 
      "https://publicreporting.sts.org/congenital/50158", 
      "https://publicreporting.sts.org/congenital/50008", 
      "https://publicreporting.sts.org/congenital/50059", 
      "https://publicreporting.sts.org/congenital/50109", 
      "https://publicreporting.sts.org/congenital/50080", 
      "https://publicreporting.sts.org/congenital/50134"}, {
     "Los Angeles, California", "Los Angeles, California", 
      "Orange, California", "Loma Linda, California", "Stanford, California", 
      "Long Beach, California", "San Diego, California", 
      "Sacramento, California", "Sacramento, California", 
      "Los Angeles, California", "San Francisco, California"}}, {{
     "https://publicreporting.sts.org/congenital/50009"}, {
     "Aurora, Colorado"}}, {{
     "https://publicreporting.sts.org/congenital/50142", 
      "https://publicreporting.sts.org/congenital/50074"}, {
     "Hartford, Connecticut", "New Haven, Connecticut"}}, {{
     "https://publicreporting.sts.org/congenital/50067"}, {
     "Wilmington, Delaware"}}, {{
     "https://publicreporting.sts.org/congenital/50107"}, {
     "Washington, District of Columbia"}}, {{
     "https://publicreporting.sts.org/congenital/50049", 
      "https://publicreporting.sts.org/index.php/congenital/50140", 
      "https://publicreporting.sts.org/index.php/congenital/50039", 
      "https://publicreporting.sts.org/index.php/congenital/50070", 
      "https://publicreporting.sts.org/index.php/congenital/51007", 
      "https://publicreporting.sts.org/congenital/50157", 
      "https://publicreporting.sts.org/congenital/50003", 
      "https://publicreporting.sts.org/congenital/50148", 
      "https://publicreporting.sts.org/congenital/50038", 
      "https://publicreporting.sts.org/congenital/50044"}, {
     "Orlando, Florida", "Orlando, Florida", "Miami, Florida", 
      "Hollywood, Florida", "St. Petersburg, Florida", "Orlando, Florida", 
      "Miami, Florida", "Tampa, Florida", "Gainesville, Florida", 
      "Jacksonville, Florida"}}, {{
     "https://publicreporting.sts.org/congenital/50001"}, {
     "Atlanta, Georgia"}}, {{
     "https://publicreporting.sts.org/congenital/50101"}, {
     "Honolulu, Hawaii"}}, {{}, {}}, {{
     "https://publicreporting.sts.org/congenital/50150", 
      "https://publicreporting.sts.org/congenital/50005"}, {
     "Oak Lawn, Illinois", "Chicago, Illinois"}}, {{
     "https://publicreporting.sts.org/congenital/50156", 
      "https://publicreporting.sts.org/congenital/50104"}, {
     "Indianapolis, Indiana", "Indianapolis, Indiana"}}, {{
     "https://publicreporting.sts.org/congenital/50079"}, {
     "Iowa City, Iowa"}}, {{}, {}}, {{
     "https://publicreporting.sts.org/congenital/50062", 
      "https://publicreporting.sts.org/congenital/50108"}, {
     "Louisville, Kentucky", "Lexington, Kentucky"}}, {{
     "https://publicreporting.sts.org/congenital/50098", 
      "https://publicreporting.sts.org/congenital/50041"}, {
     "New Orleans, Louisiana", "New Orleans, Louisiana"}}, {{
     "https://publicreporting.sts.org/congenital/50014"}, {
     "Portland, Maine"}}, {{
     "https://publicreporting.sts.org/congenital/50020", 
      "https://publicreporting.sts.org/congenital/50129"}, {
     "Baltimore, Maryland", "Baltimore, Maryland"}}, {{
     "https://publicreporting.sts.org/congenital/50054"}, {
     "Boston, Massachusetts"}}, {{
     "https://publicreporting.sts.org/congenital/50065", 
      "https://publicreporting.sts.org/congenital/50024", 
      "https://publicreporting.sts.org/index.php/congenital/50022"}, {
     "Ann Arbor, Michigan", "Detroit, Michigan", 
      "Grand Rapids, Michigan"}}, {{
     "https://publicreporting.sts.org/congenital/51002", 
      "https://publicreporting.sts.org/congenital/50135"}, {
     "Rochester, Minnesota", "Minneapolis, Minnesota"}}, {{
     "https://publicreporting.sts.org/congenital/50099"}, {
     "Jackson, Mississippi"}}, {{
     "https://publicreporting.sts.org/congenital/50132", 
      "https://publicreporting.sts.org/congenital/50078", 
      "https://publicreporting.sts.org/congenital/50083"}, {
     "St. Louis, Missouri", "St. Louis, Missouri", 
      "Kansas City, Missouri"}}, {{}, {}}, {{
     "https://publicreporting.sts.org/congenital/50017"}, {
     "Omaha, Nebraska"}}, {{
     "https://publicreporting.sts.org/index.php/congenital/50137"}, {
     "Las Vegas, Nevada"}}, {{}, {}}, {{
     "https://publicreporting.sts.org/congenital/50161"}, {
     "Newark, New Jersey"}}, {{}, {}}, {{
     "https://publicreporting.sts.org/congenital/50127", 
      "https://publicreporting.sts.org/congenital/50119", 
      "https://publicreporting.sts.org/congenital/50075", 
      "https://publicreporting.sts.org/congenital/50063", 
      "https://publicreporting.sts.org/congenital/50097", 
      "https://publicreporting.sts.org/congenital/50006", 
      "https://publicreporting.sts.org/congenital/50082"}, {
     "Albany, New York", "New Hyde Park, New York", "New York, New York", 
      "New York, New York", "New York, New York", "New York, New York", 
      "Rochester, New York"}}, {{
     "https://publicreporting.sts.org/congenital/50081", 
      "https://publicreporting.sts.org/congenital/50064", 
      "https://publicreporting.sts.org/congenital/50045", 
      "https://publicreporting.sts.org/congenital/50121"}, {
     "Charlotte, North Carolina", "Durham, North Carolina", 
      "Chapel Hill, North Carolina", 
      "Winston Salem, North Carolina"}}, {{}, {}}, {{
     "https://publicreporting.sts.org/congenital/50023", 
      "https://publicreporting.sts.org/index.php/congenital/50010", 
      "https://publicreporting.sts.org/index.php/congenital/50092", 
      "https://publicreporting.sts.org/congenital/50021", 
      "https://publicreporting.sts.org/congenital/50015"}, {
     "Akron, Ohio", "Cincinnati, Ohio", "Cleveland, Ohio", "Columbus, Ohio", 
      "Cleveland, Ohio"}}, {{
     "https://publicreporting.sts.org/congenital/50068"}, {
     "Oklahoma City, Oklahoma"}}, {{
     "https://publicreporting.sts.org/congenital/50057", 
      "https://publicreporting.sts.org/congenital/50094"}, {
     "Portland, Oregon", "Portland, Oregon"}}, {{
     "https://publicreporting.sts.org/congenital/50007", 
      "https://publicreporting.sts.org/congenital/50051", 
      "https://publicreporting.sts.org/congenital/50012", 
      "https://publicreporting.sts.org/congenital/50071"}, {
     "Philadelphia, Pennsylvania", "Pittsburgh, Pennsylvania", 
      "Danville, Pennsylvania", "Hershey, Pennsylvania"}}, {{}, {}}, {{
     "https://publicreporting.sts.org/congenital/50072"}, {
     "Charleston, South Carolina"}}, {{}, {}}, {{
     "https://publicreporting.sts.org/congenital/50095", 
      "https://publicreporting.sts.org/congenital/50073"}, {
     "Memphis, Tennessee", "Nashville, Tennessee"}}, {{
     "https://publicreporting.sts.org/congenital/50117", 
      "https://publicreporting.sts.org/congenital/50146", 
      "https://publicreporting.sts.org/congenital/50114", 
      "https://publicreporting.sts.org/congenital/50037", 
      "https://publicreporting.sts.org/congenital/50042", 
      "https://publicreporting.sts.org/congenital/50133", 
      "https://publicreporting.sts.org/congenital/50048", 
      "https://publicreporting.sts.org/congenital/50060", 
      "https://publicreporting.sts.org/congenital/50089"}, {
     "Dallas, Texas", "San Antonio, Texas", "Houston, Texas", 
      "Fort Worth, Texas", "Austin, Texas", "Corpus Christi, Texas", 
      "Dallas, Texas", "Houston, Texas", "San Antonio, Texas"}}, {{
     "https://publicreporting.sts.org/congenital/50090"}, {
     "Salt Lake City, Utah"}}, {{}, {}}, {{
     "https://publicreporting.sts.org/congenital/51112", 
      "https://publicreporting.sts.org/congenital/50086", 
      "https://publicreporting.sts.org/congenital/50077", 
      "https://publicreporting.sts.org/congenital/50036"}, {
     "Richmond, Virginia", "Norfolk, Virginia", "Falls Church, Virginia", 
      "Charlottesville, Virginia"}}, {{
     "https://publicreporting.sts.org/congenital/50046", 
      "https://publicreporting.sts.org/index.php/congenital/50126"}, {
     "Spokane, Washington", "Seattle, Washington"}}, {{
     "https://publicreporting.sts.org/index.php/congenital/50124"}, {
     "Morgantown, West Virginia"}}, {{
     "https://publicreporting.sts.org/congenital/50069", 
      "https://publicreporting.sts.org/congenital/50056"}, {
     "Madison, Wisconsin", "Milwaukee, Wisconsin"}}, {{}, {}}}]]], "Output",
 CellChangeTimes->{
  3.924480388626235*^9, {3.9244804265781813`*^9, 3.924480439546899*^9}, 
   3.924480635779249*^9, {3.924480693341588*^9, 3.924480721234254*^9}},
 CellLabel->
  "Out[496]//TableForm=",ExpressionUUID->"691677fa-73dd-4ec5-a4cd-\
fefe64b08797"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{277, Automatic}, {Automatic, -108}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification->1.5,
FrontEndVersion->"14.0 for Mac OS X x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d3059c43-f773-473e-9ad0-98e355aed80a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Delete_templates"->{
  Cell[643084, 11359, 400, 8, 46, "Input",ExpressionUUID->"45de93fb-8d79-4ec3-b395-0c3b9e604b1b",
   CellTags->"Delete_templates"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Delete_templates", 1807436, 36066}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 101, "Section",ExpressionUUID->"01a76147-5c90-465d-944d-f4046f940b31"],
Cell[743, 27, 153, 3, 46, "Input",ExpressionUUID->"a852eb76-49a3-499e-b362-33aed1602e0e"],
Cell[CellGroupData[{
Cell[921, 34, 990, 22, 59, "Input",ExpressionUUID->"ed03da22-7ccb-4dc2-a229-964d9f35cb79"],
Cell[1914, 58, 1282, 21, 84, "Output",ExpressionUUID->"40e35f5b-9f53-4d64-9a59-12990a5ec541"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3233, 84, 524, 10, 46, "Input",ExpressionUUID->"5c2731fa-d784-4450-b58e-bebca699ce7c"],
Cell[3760, 96, 1792, 30, 425, "Output",ExpressionUUID->"4e503e24-9f18-49d8-8094-bde0ebbe5987"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5589, 131, 363, 7, 46, "Input",ExpressionUUID->"29a48fb7-8626-4d3b-9ddc-ecaef4167c9f"],
Cell[5955, 140, 1338, 28, 301, "Output",ExpressionUUID->"3f4d3f59-b8ab-4ead-80f6-113f2ee2272d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7330, 173, 334, 8, 46, "Input",ExpressionUUID->"ff4c71aa-e1c6-438a-b019-5d3365c16cbd"],
Cell[7667, 183, 218, 2, 52, "Output",ExpressionUUID->"55adec9e-d037-4133-a787-ccca4ce337d3"]
}, Open  ]],
Cell[7900, 188, 152, 3, 46, "Input",ExpressionUUID->"16256053-7921-4ff5-8617-3b612843c9b9"],
Cell[CellGroupData[{
Cell[8077, 195, 510, 12, 46, "Input",ExpressionUUID->"5dab7c5b-ff07-4ae9-8488-f3830f6c0d30"],
Cell[8590, 209, 685, 12, 146, "Output",ExpressionUUID->"8c29d67c-cc34-4b70-9c4c-58bca1e42b23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9312, 226, 469, 10, 46, "Input",ExpressionUUID->"e649e96f-ab2b-463a-8bb7-8b08453991f8"],
Cell[9784, 238, 1366, 30, 301, "Output",ExpressionUUID->"3f0d7fd4-86cb-4394-aa00-36bdd8d726c3"]
}, Open  ]],
Cell[11165, 271, 827, 23, 78, "Input",ExpressionUUID->"b8e875cf-fb2d-4075-94d2-8a3f42e1f0cf"],
Cell[11995, 296, 467, 10, 46, "Input",ExpressionUUID->"fc219e3c-6f1f-452c-ada0-89ebee4ae7a1"],
Cell[12465, 308, 458, 10, 46, "Input",ExpressionUUID->"7225bc00-de74-4820-a447-5683cf2c8782"],
Cell[CellGroupData[{
Cell[12948, 322, 693, 18, 46, "Input",ExpressionUUID->"9abd4808-406a-4c52-a13a-40b259a3e8d2"],
Cell[13644, 342, 201, 4, 52, "Output",ExpressionUUID->"f2c0a41d-7a0d-428d-8f7b-9cdfa365e965"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13882, 351, 781, 17, 46, "Input",ExpressionUUID->"6253e34d-ff58-4952-aba4-c88e2405457d"],
Cell[14666, 370, 2086, 51, 239, "Output",ExpressionUUID->"584018ae-3f41-438c-a86c-b1e1341e89f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16789, 426, 437, 11, 78, "Code",ExpressionUUID->"6716368c-d63d-4f11-8681-276ae4e43576"],
Cell[17229, 439, 513, 9, 84, "Output",ExpressionUUID->"3a68f513-43ec-4b6a-b6ed-124f89f6a374"]
}, Open  ]],
Cell[17757, 451, 257, 6, 46, "Input",ExpressionUUID->"68b8091d-7aed-40f6-8d9a-ff36df0bf55e"],
Cell[CellGroupData[{
Cell[18039, 461, 844, 19, 57, "Input",ExpressionUUID->"05a297a5-502b-44b9-99a0-a28ae525cb4c"],
Cell[18886, 482, 478, 12, 61, "Output",ExpressionUUID->"e917a0a2-4da4-48b9-a59e-31de9006d00d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19401, 499, 230, 4, 46, "Input",ExpressionUUID->"e907f49a-af97-4e4f-bd11-7e899e68764d"],
Cell[19634, 505, 207, 4, 52, "Output",ExpressionUUID->"d5039d46-0b6f-4be8-94d8-61608311d163"]
}, Open  ]],
Cell[19856, 512, 152, 3, 46, "Input",ExpressionUUID->"2296991b-ebfa-40dd-9ca0-c89c784eeea5"],
Cell[CellGroupData[{
Cell[20033, 519, 507, 12, 46, "Input",ExpressionUUID->"af149f9f-eeb0-420d-994b-6f356f3e73e0"],
Cell[20543, 533, 4474, 97, 91, "Output",ExpressionUUID->"bba0eb5e-8553-402d-8b78-916c809f2395"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25054, 635, 319, 6, 46, "Input",ExpressionUUID->"3519d01d-df20-4ee7-bbac-5b5c6684b7c3"],
Cell[25376, 643, 176, 3, 52, "Output",ExpressionUUID->"1de32a1d-a1e3-42c0-8e10-e7799087d3f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25589, 651, 223, 3, 46, "Input",ExpressionUUID->"020d5ce8-5acb-4d36-8845-6247fdf8c6b6"],
Cell[25815, 656, 198, 3, 52, "Output",ExpressionUUID->"b46a4ba9-7c5a-4af8-8fde-af9cc8282bd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26050, 664, 268, 6, 46, "Input",ExpressionUUID->"62ad80ff-f9f9-43e9-823b-9f76225f3c22"],
Cell[26321, 672, 321, 7, 52, "Output",ExpressionUUID->"5532203d-31bd-4c02-8aa1-8daabd442b8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26679, 684, 213, 4, 46, "Input",ExpressionUUID->"bc2d01bb-6a83-42a5-8cd7-c16ec7b56c7a"],
Cell[26895, 690, 213, 4, 52, "Output",ExpressionUUID->"a10a1f5b-1b3a-402b-9e16-d6d81a1ff819"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27145, 699, 492, 11, 78, "Input",ExpressionUUID->"08402a59-0ac8-49b8-a860-82972151a3f3"],
Cell[27640, 712, 366, 7, 84, "Output",ExpressionUUID->"96bd5931-d686-415d-ab60-f17122904cdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28043, 724, 359, 7, 46, "Input",ExpressionUUID->"f5d23859-daf5-4351-9143-acd8a171ac82"],
Cell[28405, 733, 282, 6, 52, "Output",ExpressionUUID->"3d6972bc-5d36-43fc-a09e-99eb07f6060f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28724, 744, 372, 10, 46, "Input",ExpressionUUID->"e0d03cff-069e-4b9e-a4f2-19db6d5c03f2"],
Cell[29099, 756, 6624, 136, 93, "Output",ExpressionUUID->"61e8a9ad-02dc-40a4-9bba-d15d3411906e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35760, 897, 396, 10, 46, "Input",ExpressionUUID->"a73cf6bd-0417-449a-81ea-0323e63acc80"],
Cell[36159, 909, 183, 3, 52, "Output",ExpressionUUID->"be4927ea-fb27-49a0-b555-fef262675c32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36379, 917, 373, 10, 46, "Input",ExpressionUUID->"323e896e-f5b7-4006-bd40-86232a321f37"],
Cell[36755, 929, 6483, 134, 93, "Output",ExpressionUUID->"faf9359c-a895-4dd4-8062-25f119a079cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43275, 1068, 530, 13, 46, "Input",ExpressionUUID->"4cb90da9-1a1a-4c6d-8535-8a566cefa912"],
Cell[43808, 1083, 409, 9, 52, "Output",ExpressionUUID->"9c83a748-cba3-4457-8439-bda9ce99f98b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44254, 1097, 212, 4, 46, "Input",ExpressionUUID->"a7759daa-6487-4725-81ee-fec544636d0a"],
Cell[44469, 1103, 531546, 8833, 656, "Output",ExpressionUUID->"2d24752a-96eb-4ffc-8d1c-42f4f286ed47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[576052, 9941, 3775, 72, 57, "Input",ExpressionUUID->"2e9f0dd7-bef8-4687-a21a-21e52680c440"],
Cell[579830, 10015, 5681, 116, 113, "Output",ExpressionUUID->"f9e33dde-2dc6-488e-8001-bbf8759f051b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585548, 10136, 457, 10, 46, "Input",ExpressionUUID->"6761cd92-f93d-45a7-a9b9-64eb985f82bf"],
Cell[586008, 10148, 485, 9, 52, "Output",ExpressionUUID->"d0c46f26-08d4-4e1e-92f1-e521418ecf39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[586530, 10162, 345, 7, 46, "Input",ExpressionUUID->"f1086e5e-d1e7-4eb6-9156-0a0a7669d60c"],
Cell[586878, 10171, 201, 2, 52, "Output",ExpressionUUID->"7984f84f-4961-488a-84e2-69b1caeb104e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587116, 10178, 407, 9, 46, "Input",ExpressionUUID->"4b043703-2de3-465d-93c6-2806951d4b0b"],
Cell[587526, 10189, 2327, 32, 2347, "Output",ExpressionUUID->"a1a8da56-aecd-4f0d-9c2e-5e0bc333f8bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[589890, 10226, 186, 3, 46, "Input",ExpressionUUID->"f6398f9e-b9d2-456a-81e7-565550d9c942"],
Cell[590079, 10231, 2419, 51, 301, "Output",ExpressionUUID->"c6c3c87b-b157-4609-83e2-cf8871525a83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592535, 10287, 305, 7, 46, "Input",ExpressionUUID->"3acdee3a-c27c-4596-a01a-641d392f4623"],
Cell[592843, 10296, 275, 7, 52, "Output",ExpressionUUID->"90de4fca-a47d-423f-bd50-373878aaaab5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593155, 10308, 218, 4, 46, "Input",ExpressionUUID->"e5bcf4b7-9d85-4817-9bf3-0b7a57104c08"],
Cell[593376, 10314, 155, 3, 52, "Output",ExpressionUUID->"37bb83b8-f8ad-4109-b961-aa1bd21a684b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593568, 10322, 427, 10, 46, "Input",ExpressionUUID->"7ee9dc88-0932-4a41-b546-72a4ee566cec"],
Cell[593998, 10334, 406, 8, 84, "Output",ExpressionUUID->"409c27bc-fa1d-43a3-8d3d-b86e3dc80041"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594441, 10347, 362, 9, 46, "Input",ExpressionUUID->"b652ff68-a867-4b69-b403-c3dc7a3849c0"],
Cell[594806, 10358, 1490, 31, 208, "Output",ExpressionUUID->"f5ed9a4c-d9b8-47f2-a63b-2d53e64fe5a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596333, 10394, 426, 8, 46, "Input",ExpressionUUID->"9b0aa657-f683-4804-9b49-8b46d71dde85"],
Cell[596762, 10404, 1759, 36, 239, "Output",ExpressionUUID->"4b23e961-3175-489d-9418-71dc09348f5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598558, 10445, 313, 8, 46, "Input",ExpressionUUID->"3679b7a1-b751-418f-97b0-6bd66dac7b76"],
Cell[598874, 10455, 182, 3, 52, "Output",ExpressionUUID->"e1e59f01-2c3f-4dab-ba5b-076078ea9f12"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[599105, 10464, 152, 3, 101, "Section",ExpressionUUID->"1f2729db-8c56-487e-bf37-7ddb5e9785c8"],
Cell[CellGroupData[{
Cell[599282, 10471, 922, 21, 59, "Input",ExpressionUUID->"942f965f-4b77-4ff6-93af-cda95cbcbf6e"],
Cell[600207, 10494, 1199, 18, 84, "Output",ExpressionUUID->"a5bcdfee-60e5-46a7-afd2-238b27efa2eb"]
}, Open  ]],
Cell[601421, 10515, 2494, 59, 287, "Code",ExpressionUUID->"6f157a5d-c738-45b3-b1bc-95e7e1897200",
 InitializationCell->False],
Cell[603918, 10576, 1115, 25, 171, "Input",ExpressionUUID->"9f05898e-c65c-4286-80bf-2f6943b0cea3"],
Cell[CellGroupData[{
Cell[605058, 10605, 497, 10, 46, "Input",ExpressionUUID->"4b64d464-7b74-4d32-87ca-7a59818beceb"],
Cell[605558, 10617, 1412, 29, 301, "Output",ExpressionUUID->"f180baab-f658-44e2-adee-e365e140a55d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607007, 10651, 330, 7, 46, "Input",ExpressionUUID->"779aefe2-6cc0-4a45-b284-18136a1b0a87"],
Cell[607340, 10660, 832, 15, 239, "Output",ExpressionUUID->"498e5933-888e-4987-9eab-0a62652d49a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608209, 10680, 274, 4, 46, "Input",ExpressionUUID->"3e92a295-8677-4f69-992b-1b24cfb98067"],
Cell[608486, 10686, 519, 11, 41, "Message",ExpressionUUID->"e1ed659c-7fe9-4c04-a4f2-83ac08bbc6ae"],
Cell[609008, 10699, 302, 4, 52, "Output",ExpressionUUID->"504db5b4-a4ad-422b-84e1-e799979caa5a"]
}, Open  ]],
Cell[609325, 10706, 154, 3, 46, "Input",ExpressionUUID->"d14511df-79c4-446a-8ab7-05fcf0685165"],
Cell[CellGroupData[{
Cell[609504, 10713, 316, 5, 46, "Input",ExpressionUUID->"2f0317e3-9b7f-4113-83d1-163282ed2cfe"],
Cell[609823, 10720, 504, 11, 41, "Message",ExpressionUUID->"59d46ff7-b77d-44cf-845e-7e7d40681f45"],
Cell[610330, 10733, 504, 11, 41, "Message",ExpressionUUID->"93583a46-b61e-4ad8-9aef-bf9ed471dc39"],
Cell[610837, 10746, 505, 11, 41, "Message",ExpressionUUID->"2dd6faf9-d677-4726-8673-7e845f16f7db"],
Cell[611345, 10759, 472, 10, 41, "Message",ExpressionUUID->"6654fd76-149a-4db1-84ec-9e0aa831d756"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611854, 10774, 185, 2, 46, "Input",ExpressionUUID->"3183ef44-c26b-4114-9c15-a1db6b70bf25"],
Cell[612042, 10778, 8371, 131, 2378, "Output",ExpressionUUID->"afa04c54-1c0b-475c-a495-3dfa45be20b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620450, 10914, 252, 4, 46, "Input",ExpressionUUID->"c0668365-d276-4b5f-bfbd-571fc3199d51"],
Cell[620705, 10920, 151, 2, 52, "Output",ExpressionUUID->"aeb05773-0027-4096-bf9d-d0d3ba739f37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620893, 10927, 244, 4, 46, "Input",ExpressionUUID->"69df9b90-4892-4f55-a067-ef2ae40bd956"],
Cell[621140, 10933, 1947, 27, 301, "Output",ExpressionUUID->"ae88cdd4-3253-4cc3-839e-958d48219ba6"]
}, Open  ]],
Cell[623102, 10963, 436, 9, 46, "Input",ExpressionUUID->"0cc46931-6483-4589-8312-5d069ae2a8f1"],
Cell[623541, 10974, 152, 3, 46, "Input",ExpressionUUID->"338f5ea6-2f6c-4cae-90e8-b8b7c38b5b56"],
Cell[CellGroupData[{
Cell[623718, 10981, 219, 3, 46, "Input",ExpressionUUID->"b3544691-2058-4e0f-870b-e1a4962e74fe"],
Cell[623940, 10986, 322, 5, 52, "Output",ExpressionUUID->"bf82e625-36ab-498c-9e4c-4bd7615d3541"]
}, Open  ]],
Cell[624277, 10994, 154, 3, 46, "Input",ExpressionUUID->"3119d0a7-fd1a-473c-ac8a-6a2274a96193"],
Cell[624434, 10999, 340, 6, 54, "Code",ExpressionUUID->"39104294-1a8e-4b3a-9e4f-1584beb6de63",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[624799, 11009, 387, 8, 78, "Code",ExpressionUUID->"cb8d9d0f-2ba9-45d6-a6c9-c634193841d5"],
Cell[625189, 11019, 4134, 65, 735, "Output",ExpressionUUID->"46ca6caa-4269-4ac2-bbd5-e5fdf6410365"]
}, Open  ]],
Cell[629338, 11087, 388, 8, 78, "Code",ExpressionUUID->"be7f3185-7f73-4412-9d40-67a17b9b9ed6"],
Cell[629729, 11097, 2465, 51, 295, "Input",ExpressionUUID->"5ab0e81d-3fb7-4470-82b1-565dda569ba8"],
Cell[632197, 11150, 343, 6, 46, "Input",ExpressionUUID->"2be97c3b-8c8d-419d-9591-f6629538c1ff"],
Cell[CellGroupData[{
Cell[632565, 11160, 537, 13, 78, "Code",ExpressionUUID->"19cb1139-87eb-48c6-a300-58c53ec0e201"],
Cell[633105, 11175, 428, 10, 52, "Output",ExpressionUUID->"8a9c85b9-727c-4323-9d85-67bd569a7218"]
}, Open  ]],
Cell[CellGroupData[{
Cell[633570, 11190, 296, 5, 46, "Input",ExpressionUUID->"67f430a0-e2fb-4525-8fdd-e19d47a6d28d"],
Cell[633869, 11197, 8085, 127, 2285, "Output",ExpressionUUID->"94451b0e-82b0-4f85-aab8-15b0edbfad1a"]
}, Open  ]],
Cell[641969, 11327, 304, 6, 78, "Code",ExpressionUUID->"a67dcf2e-b918-4bc0-9213-ec0260560810"],
Cell[CellGroupData[{
Cell[642298, 11337, 212, 3, 46, "Input",ExpressionUUID->"736ab8bb-636e-4ae3-9bd7-12f38c619124"],
Cell[642513, 11342, 150, 2, 52, "Output",ExpressionUUID->"aa838464-c3d8-4f6f-904e-8851af05eca7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[642700, 11349, 216, 3, 46, "Input",ExpressionUUID->"5b779734-86e5-4797-baa9-122c73365a39"],
Cell[642919, 11354, 150, 2, 52, "Output",ExpressionUUID->"0ee149bc-047a-403f-9206-45dafb4a7603"]
}, Open  ]],
Cell[643084, 11359, 400, 8, 46, "Input",ExpressionUUID->"45de93fb-8d79-4ec3-b395-0c3b9e604b1b",
 CellTags->"Delete_templates"],
Cell[643487, 11369, 462, 13, 46, "Input",ExpressionUUID->"559e142f-51bd-4e6e-b244-2ca2c6828fd3"],
Cell[643952, 11384, 600, 16, 46, "Input",ExpressionUUID->"2e5e8308-33a2-452f-8c18-d47a43f7cd09"],
Cell[644555, 11402, 315, 7, 46, "Input",ExpressionUUID->"89bc0f1d-5257-4286-a401-c2d2a78d2792"],
Cell[644873, 11411, 398, 9, 46, "Input",ExpressionUUID->"f3b0dcab-729c-4365-91fc-6cba8c27cab4"],
Cell[645274, 11422, 367, 10, 46, "Input",ExpressionUUID->"06f4585d-ef3b-4350-b3b1-67a4bcc08cba"],
Cell[645644, 11434, 343, 7, 46, "Input",ExpressionUUID->"9d71c63a-81bc-4747-9f4c-901ef9e63719"],
Cell[CellGroupData[{
Cell[646012, 11445, 438, 9, 46, "Input",ExpressionUUID->"c0e9df7b-977d-488d-9ec4-15e6b8eb283a"],
Cell[646453, 11456, 271, 4, 52, "Output",ExpressionUUID->"ca6ba0dc-332e-4eb3-be90-86cf8c56380d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646761, 11465, 743, 18, 109, "Input",ExpressionUUID->"d033a24f-94f3-47cd-b82e-e72e636182de"],
Cell[647507, 11485, 6856, 147, 91, "Output",ExpressionUUID->"34bcb5a8-c2c7-4d6f-a5c9-0dc519ad75b9"]
}, Open  ]],
Cell[654378, 11635, 305, 8, 46, "Input",ExpressionUUID->"c195958e-1633-43ff-a5c6-f8a10bbb501d"],
Cell[CellGroupData[{
Cell[654708, 11647, 470, 12, 46, "Input",ExpressionUUID->"f35a4ef2-8de5-4c20-9099-f322962efd24"],
Cell[655181, 11661, 209, 3, 52, "Output",ExpressionUUID->"0ac40028-f542-41ac-a3b5-2fdb46b51bbc"]
}, Open  ]],
Cell[655405, 11667, 290, 8, 46, "Input",ExpressionUUID->"0a064410-cfe7-4b8e-81f0-e0c216541b8f"],
Cell[655698, 11677, 305, 8, 46, "Input",ExpressionUUID->"45f4a4c3-a13b-413d-9dd3-619ae0ef7941"],
Cell[CellGroupData[{
Cell[656028, 11689, 291, 7, 46, "Input",ExpressionUUID->"8cdbcad0-e3b6-4df6-b0c1-2a38774c2b0e"],
Cell[656322, 11698, 198, 3, 52, "Output",ExpressionUUID->"e967b077-2cce-48fe-8169-fe8534345b03"]
}, Open  ]],
Cell[656535, 11704, 305, 8, 46, "Input",ExpressionUUID->"da358b47-5917-4464-989c-8f7c475e55df"],
Cell[656843, 11714, 305, 8, 46, "Input",ExpressionUUID->"9c093ffd-1f8f-4654-9930-814895e51020"],
Cell[657151, 11724, 214, 4, 46, "Input",ExpressionUUID->"9a911636-b0fc-4063-b823-024bd8fe2c7c"],
Cell[657368, 11730, 653, 17, 46, "Input",ExpressionUUID->"9b69db41-11db-420e-95e0-a47aa5f16b24"],
Cell[658024, 11749, 448, 12, 46, "Input",ExpressionUUID->"ccbd8bd5-b9b6-47e6-97a3-b341299d766f"],
Cell[658475, 11763, 214, 4, 46, "Input",ExpressionUUID->"a0cb57ec-f6a1-4012-b826-9f4c1a10bfd4"],
Cell[658692, 11769, 219, 4, 46, "Input",ExpressionUUID->"2250da1c-6c36-44bb-96f2-074ffb2150ab"],
Cell[CellGroupData[{
Cell[658936, 11777, 282, 5, 46, "Input",ExpressionUUID->"881806b3-51f6-411a-9cc6-441be41de08f"],
Cell[659221, 11784, 190, 2, 52, "Output",ExpressionUUID->"4d60c08d-6b4b-4de6-b534-44c25334ab89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[659448, 11791, 366, 8, 46, "Input",ExpressionUUID->"5f45620d-2f21-4c6f-8f99-6840079c5dcc"],
Cell[659817, 11801, 400, 7, 84, "Output",ExpressionUUID->"33486ff2-7883-430e-a94f-39bc2fea27fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660254, 11813, 260, 5, 46, "Input",ExpressionUUID->"3d7cbbbe-e97f-4f5e-a807-3a731dfd0fea"],
Cell[660517, 11820, 1567, 32, 208, "Output",ExpressionUUID->"89ab8079-34f9-4031-89d3-e057fbc3cdc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[662121, 11857, 820, 17, 46, "Input",ExpressionUUID->"8ad6e5f8-ec0d-4f6a-8bfa-89584fb70a4e"],
Cell[662944, 11876, 783, 15, 121, "Output",ExpressionUUID->"c61ed8d7-452a-4349-b790-dca89d7decb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[663764, 11896, 308, 5, 46, "Input",ExpressionUUID->"4489a797-3cd7-4612-b459-6183f1adbe47"],
Cell[664075, 11903, 2585, 55, 201, "Output",ExpressionUUID->"b2049ab4-414a-41e3-9ed7-7657c7b2b7d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[666697, 11963, 164, 3, 46, "Input",ExpressionUUID->"f5c6ee35-826d-404e-83e5-c28ccae7fa45"],
Cell[666864, 11968, 696, 15, 138, "Output",ExpressionUUID->"55f6d3fb-0a20-453c-949a-60bb07e01ed7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[667597, 11988, 355, 9, 46, "Input",ExpressionUUID->"ea4f7305-9775-4de2-ac39-d1b38b33bd57"],
Cell[667955, 11999, 524, 9, 84, "Output",ExpressionUUID->"04473a08-c52c-44ad-9d0f-7758adff55ba"],
Cell[668482, 12010, 673, 14, 41, "Message",ExpressionUUID->"5cf7d63b-2cd6-439b-9399-1264ead25d6c"],
Cell[669158, 12026, 514, 9, 52, "Output",ExpressionUUID->"26365c9c-eb75-49d3-8a3e-8b4fd0da7dc0"]
}, Open  ]],
Cell[669687, 12038, 239, 4, 46, "Input",ExpressionUUID->"f8cc361d-31ed-46cc-94f7-e3fb0d753d72"],
Cell[CellGroupData[{
Cell[669951, 12046, 469, 12, 78, "Code",ExpressionUUID->"e9b03305-4a2e-48e1-b409-9196f3ede930"],
Cell[670423, 12060, 2542, 38, 239, "Output",ExpressionUUID->"06d93d0b-1954-44a1-aad8-3ffa6d792d16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[673002, 12103, 253, 5, 78, "Code",ExpressionUUID->"5e3c192e-7883-4d69-ae30-0387eb3e2ec0"],
Cell[673258, 12110, 197, 4, 52, "Output",ExpressionUUID->"ff40857d-ed42-4529-9999-d904dda7922f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[673492, 12119, 410, 10, 78, "Code",ExpressionUUID->"c732a2df-34d6-4ab3-9341-edd4b53f925b"],
Cell[673905, 12131, 2395, 38, 208, "Output",ExpressionUUID->"69b3a6b4-9392-4432-a50a-0fe3145c8f02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[676337, 12174, 246, 5, 78, "Code",ExpressionUUID->"39504b3b-f3d4-4e07-8bcb-819fa76dbefe"],
Cell[676586, 12181, 1632, 25, 208, "Output",ExpressionUUID->"8721705a-c1f8-474c-8968-1043fe2baa23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[678255, 12211, 205, 4, 78, "Code",ExpressionUUID->"69765704-988b-41cd-b13f-d15728901e26"],
Cell[678463, 12217, 1555, 23, 208, "Output",ExpressionUUID->"8387ccd1-1fd4-41ff-858d-52ea0e6350bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680055, 12245, 212, 4, 78, "Code",ExpressionUUID->"7eb0d386-ba38-40d5-ad00-a4220f163298"],
Cell[680270, 12251, 178, 3, 52, "Output",ExpressionUUID->"8ab600be-1dc2-41fa-b1e2-ec5c5572d8c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680485, 12259, 261, 5, 78, "Code",ExpressionUUID->"335f22ec-98c8-428c-932b-d7cd769f60c1"],
Cell[680749, 12266, 201, 4, 52, "Output",ExpressionUUID->"87eaebc8-9f6a-43b0-ac5c-2ff891e746a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680987, 12275, 247, 5, 78, "Code",ExpressionUUID->"87035901-9b06-4ec7-bcc8-495c9f51d748"],
Cell[681237, 12282, 43221, 1099, 576, "Output",ExpressionUUID->"ce26ae95-deab-4392-9ceb-4d16e11733a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[724495, 13386, 499, 13, 57, "Input",ExpressionUUID->"a3cb7b3b-080b-424c-b10f-50cc3ac742ee"],
Cell[724997, 13401, 498, 13, 61, "Output",ExpressionUUID->"fbc43201-2b99-4347-8641-a797449e8a71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[725532, 13419, 249, 5, 78, "Code",ExpressionUUID->"4c3584cb-c2b5-4f97-b856-952b15496ebd"],
Cell[725784, 13426, 199, 5, 52, "Output",ExpressionUUID->"dbc7f724-e229-4697-ae28-63ffc9fa0ee1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726020, 13436, 750, 18, 90, "Code",ExpressionUUID->"dd51cb10-9cf3-4e8c-a1ca-ef273df865ed"],
Cell[726773, 13456, 36910, 974, 444, "Output",ExpressionUUID->"24f3312c-a5a8-4349-bfdb-9975027916d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[763720, 14435, 577, 14, 57, "Input",ExpressionUUID->"5b28a0b3-b243-4353-86ab-46f949aac1e0"],
Cell[764300, 14451, 174, 3, 52, "Output",ExpressionUUID->"93bbdcfa-efc0-4e98-a872-7c098a042964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764511, 14459, 522, 14, 46, "Input",ExpressionUUID->"efa50d5d-637b-4b9f-bbcc-42f8720c297b"],
Cell[765036, 14475, 8028, 202, 611, "Output",ExpressionUUID->"01b7de71-f12d-42af-988c-926b59c19a02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[773101, 14682, 352, 9, 46, "Input",ExpressionUUID->"7c19c793-0761-4197-a9a4-fc5cc46e9194"],
Cell[773456, 14693, 7954, 201, 611, "Output",ExpressionUUID->"047f38af-4e63-4798-be1a-d0991bdbdcb8"]
}, Open  ]],
Cell[781425, 14897, 348, 7, 78, "Code",ExpressionUUID->"7bf48f82-c337-4bba-b2ba-a7ab9b2028c5"],
Cell[781776, 14906, 718, 16, 78, "Code",ExpressionUUID->"60260bb3-c3e1-418c-b940-132f71e383b7"],
Cell[CellGroupData[{
Cell[782519, 14926, 345, 6, 78, "Code",ExpressionUUID->"c6722cf3-43bb-420b-8081-18ffb92cce87"],
Cell[782867, 14934, 838163, 16246, 644, 391770, 8927, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"cd3b301b-a1c7-4746-acc3-b9dadd091e44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1621067, 31185, 240, 5, 54, "Code",ExpressionUUID->"6ce8ff9b-a117-4c1b-9ef6-2be30815de02",
 InitializationCell->False],
Cell[1621310, 31192, 42793, 1133, 362, "Output",ExpressionUUID->"bf96c6ec-277c-457b-bde6-e029e55649af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1664140, 32330, 311, 9, 46, "Input",ExpressionUUID->"8ae8b1e9-78bb-4c52-9d96-6390244fc8a9"],
Cell[1664454, 32341, 355, 11, 52, "Output",ExpressionUUID->"a9104ea6-d414-4f88-ac03-090084e2f6ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1664846, 32357, 429, 10, 46, "Input",ExpressionUUID->"3be712fb-205b-4853-ad0e-0a6277fd9d6a"],
Cell[1665278, 32369, 58843, 1625, 459, "Output",ExpressionUUID->"51a65484-e372-4f52-a012-7db08ffdc1ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1724158, 33999, 455, 12, 54, "Code",ExpressionUUID->"b53abc1a-792e-48b3-a96f-db4b51059772",
 InitializationCell->False],
Cell[1724616, 34013, 405, 12, 52, "Output",ExpressionUUID->"ee5a6790-c793-4eee-92cf-f3643275270d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1725058, 34030, 210, 4, 46, "Input",ExpressionUUID->"eccce545-3d27-4902-ba59-b177962b1b7a"],
Cell[1725271, 34036, 5266, 139, 362, "Output",ExpressionUUID->"8c7ca099-6e75-4593-bc3a-68e2ebc93747"]
}, Open  ]],
Cell[1730552, 34178, 267, 6, 78, "Code",ExpressionUUID->"975ab168-d3b8-4f62-9f46-bce763854ff6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1730856, 34189, 162, 3, 101, "Section",ExpressionUUID->"e4a716f6-3a47-4d70-9d01-b326381c61d8"],
Cell[CellGroupData[{
Cell[1731043, 34196, 1112, 26, 59, "Input",ExpressionUUID->"8b51a8b9-c732-4d42-b40c-82e744973a36"],
Cell[1732158, 34224, 1225, 19, 84, "Output",ExpressionUUID->"52ec4eec-b565-40dc-9621-5503f8289fd7"]
}, Open  ]],
Cell[1733398, 34246, 526, 10, 46, "Input",ExpressionUUID->"0ceb0e2a-f56e-4d1d-a19d-8c42799e110b"],
Cell[1733927, 34258, 560, 12, 46, "Input",ExpressionUUID->"8d28b43c-712a-4536-967c-1f72efcd7f95"],
Cell[1734490, 34272, 467, 10, 46, "Input",ExpressionUUID->"dd2883e5-4462-4617-a417-9a26b3ecf7d1"],
Cell[1734960, 34284, 781, 17, 46, "Input",ExpressionUUID->"4c34b07c-ec7c-44fc-a78c-780155234143"],
Cell[CellGroupData[{
Cell[1735766, 34305, 580, 15, 54, "Code",ExpressionUUID->"6d2cd223-fae9-4a0a-9dd1-85d70eb6668b",
 InitializationCell->False],
Cell[1736349, 34322, 463, 8, 52, "Output",ExpressionUUID->"e9d5306b-916e-4ee0-add2-6ca7a8d55662"]
}, Open  ]],
Cell[1736827, 34333, 2457, 59, 287, "Code",ExpressionUUID->"59352f7d-8846-4607-8f8f-92d53f26e265",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[1739309, 34396, 305, 6, 78, "Code",ExpressionUUID->"eb782142-bbd4-4313-ab4d-10bd7c0b6b91"],
Cell[1739617, 34404, 1095, 21, 177, "Output",ExpressionUUID->"fb69df59-9298-462a-b7ea-49f172729e93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1740749, 34430, 256, 5, 78, "Code",ExpressionUUID->"efbeab8f-eb72-4ec9-a168-2216a65eb981"],
Cell[1741008, 34437, 353, 10, 52, "Output",ExpressionUUID->"2e9e3592-12a2-4de9-b71c-527784f977dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1741398, 34452, 268, 5, 78, "Code",ExpressionUUID->"7bdfcacc-4641-4ced-8e58-96fa94d3a5b7"],
Cell[1741669, 34459, 17193, 422, 2192, "Output",ExpressionUUID->"a7709cc8-ee36-4b59-98d0-9d0ef3e4cbb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1758899, 34886, 370, 6, 54, "Code",ExpressionUUID->"c26414e7-fe25-47d1-a386-66d3e52e2d9a"],
Cell[1759272, 34894, 47714, 1155, 2742, "Output",ExpressionUUID->"691677fa-73dd-4ec5-a4cd-fefe64b08797"]
}, Open  ]]
}, Open  ]]
}
]
*)

